通过参数配置 Lustre 文件系统的 OST 服务网络请求调度策略（NRS）以优化批量读写性能，主要涉及以下几种策略类型及对应的参数设置：1. TBF（令牌桶过滤器）策略：TBF 策略用于限制 RPC 请求的速率，确保服务质量。可以通过 lctl 命令配置 TBF 规则，例如添加实时特性以确保高优先级请求的带宽分配。命令格式为 lctl set param x.x.x.nrs tbf rule="start rule name arguments... realtime=1"。例如，设置 JobID 为 dd.0 的 RPC 以 100 req/sec 的速率进行实时处理。TBF 策略支持基于 NID、JobID、OPCode、UID/GID 等分类，并通过规则列表动态调整速率限制。2. 延迟策略：延迟策略通过模拟高负载来测试系统对时间敏感问题的处理能力，允许设置请求延迟的最小和最大时间范围。参数 {service}.nrs delay min 控制请求被延迟的最短时间，而 {service}.nrs delay max 控制最长延迟时间。例如，设置 ost.io 服务的最小延迟时间为 10 秒，最大延迟时间为 300 秒。3. ORR（基于对象的循环）策略：ORR 策略用于设置支持的 RPC 类型，如 reads、writes 或 reads_and_writes。通过 lctl set param 命令设置 ost.OSS.ost_io.nrs orr supported 参数，可以指定支持的 RPC 类型。例如，设置支持 reads_and_writes 类型。4. TRR（基于目标的循环）策略：TRR 策略基于目标 OST 索引进行批量循环调度，其参数与 ORR 类似。通过设置 ost.OSS.ost_io.nrs trr quantum 参数，可以调整每个批次的大小。TRR 策略与 ORR 策略类似，但使用目标 OST 索引而不是后端 fs 对象的 OST FID 来确定调度顺序。5. 实时特性：在 TBF 策略中，可以通过设置 realtime=1 参数为特定类别的请求提供实时处理，确保其带宽分配。当请求错过最后期限时，该类保持最后期限不变，剩余的时间将被补偿到下一轮，从而确保下一个空闲 IO 线程始终选择此类来服务。6. 配置文件布局：通过 lfs setstripe 命令配置文件布局，设置条带数量、大小和起始 OST，以实现负载均衡和空间利用。例如，设置 stripe_size 为 1MB，stripe_count 为 4，start_ost 为 -1（默认值）。7. 条带化设置：将文件分割到尽可能多的 OST 上，以达到所需的峰值聚合带宽。对于大文件或高并发访问场景，最多支持 2000 个 OST。条带大小应设置为 write 大小的整数倍，避免锁定争用。8. 过度分条（overstriping）：从 Lustre 2.13 开始，允许每个 OST 有多个条带，这对于线程数超过 OST 数的情况特别有帮助，使得条带数与线程数匹配。9. 参数调整：根据实际需求调整 NRS 相关参数，如 {service}.nrs delay min 和 {service}.nrs delay max，以控制请求的延迟范围。同时，通过 lctl get param 命令查看当前参数设置，确保配置符合预期。10. 策略启用：通过 lctl set param 命令启用 TBF 策略，例如设置 ost.OSS.ost_io.nrs policies="tbf" 以启用基于所有分类方式的 TBF 策略。此外，还可以根据需要选择特定的分类方式，如基于 NID、JobID、OPCode、UID/GID 等。