根据工具返回的内容，总结和问题相关的信息如下：在TH-eX系统中，用户可以通过编写提交脚本（如sub.sh）来设置作业的邮件通知功能。对于MPI+OpenMP并行作业，用户需要指定进程数和线程数，并确保使用正确的节点数。例如，使用14个进程和8个OpenMP线程需要2个计算节点。同时，用户可以利用yhrun命令提交交互式作业，并注意输入输出重定向以避免任务中断。此外，文档还提到了如何通过修改SchedulerSGE.py文件中的代码来调试生成的临时脚本，例如注释掉删除文件的语句或添加调试输出。最后，用户还可以通过编写Python程序批量提交Abqus作业，实现自动化操作。结合大模型的自身运维经验和指令，以下是如何为作业设置当作业失败、成功或完成时都发送邮件通知的具体解决方案和指令：1. 编写提交脚本：用户需要创建一个提交脚本（如sub.sh），并在其中指定作业的参数和邮件通知设置。例如，在脚本中添加SBATCH指令来设置邮件通知，如#SBATCH -o stdout.txt和#SBATCH -e stderr.txt，以便在作业完成后发送邮件。2. 配置邮件通知：在提交脚本中，用户需要配置邮件通知的相关参数。例如，使用#SBATCH -J job_name来指定作业名称，使用#SBATCH -p queue_name来指定队列，以及使用#SBATCH -t time_limit来设置作业的运行时间限制。3. 调试生成的临时脚本：如果用户需要调试生成的临时脚本，可以修改SchedulerSGE.py文件中的代码，例如注释掉删除文件的语句或添加调试输出。这样可以在调试过程中查看生成的脚本内容，确保其正确性。4. 批量提交作业：用户可以通过编写Python程序来批量提交作业，例如遍历以RUN_开头的文件夹，将指定的脚本复制到每个文件夹并提交作业。这种方法可以大大提高作业提交的效率。5. 使用yhrun命令提交交互式作业：对于交互式作业，用户可以使用yhrun命令提交任务，并注意输入输出重定向以避免任务中断。例如，使用>yout.log 2>err.log来重定向输入输出，确保任务在关闭登陆客户端软件时不会中断。6. 联系技术支持：如果用户在提交作业的过程中遇到任何问题，可以及时联系中心技术人员。中心技术人员会在收到用户问题反馈后的24小时内给予回复。7. 确保作业提交成功：用户需要确保作业提交成功，并检查生成的临时脚本是否正确。例如，可以通过查看/tmp目录下的临时文件内容来确认脚本的正确性。8. 使用批处理作业提交方式：对于不需要交互的作业，用户应使用批处理作业提交方式（如yhbatch），以避免因关闭登陆客户端软件而导致任务中断。9. 配置邮件通知参数：用户需要配置邮件通知的相关参数，例如在提交脚本中添加SBATCH指令来设置邮件通知，如#SBATCH -o stdout.txt和#SBATCH -e stderr.txt，以便在作业完成后发送邮件。10. 测试作业提交：用户需要测试作业提交过程，确保邮件通知功能正常工作。例如，可以提交一个简单的测试作业，并检查是否收到邮件通知。通过以上步骤，用户可以有效地为作业设置当作业失败、成功或完成时都发送邮件通知的功能。

