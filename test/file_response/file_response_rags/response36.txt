{
    "query": "yhattach 可以附加到哪种作业？",
    "summaries": [
        "yhalloc 是用于请求资源并运行作业的命令，支持多种选项如指定用户、分区、时间限制等。环境变量可覆盖命令行选项。yhattach 用于附接到正在运行的作业步以获取 I/O 信息，支持过滤和标签功能。yhbatch 用于提交批处理脚本作业。",
        "yhbatch 是一个用于提交批处理作业的命令，支持多种选项来控制作业的执行环境和资源分配。主要功能包括：指定用户环境、组权限、帮助信息、任务绑定类型（计算密集型或内存密集型）、多线程支持、立即提交作业、输入输出重定向、作业名称和ID、许可证分配、任务分布方式（块、循环、平面、任意）、邮件通知设置、内存需求等。部分选项仅在 root 权限下有效，且某些参数互斥。",
        "yhacct 是资源管理系统中用于查看作业记账数据的命令，可显示作业、作业步、状态及退出代码等信息。默认显示所有用户作业（root 用户），非 root 用户仅显示自身作业。支持多种选项，如 --format 自定义字段、--user 或 --uid 过滤用户、--cluster 指定集群、--dump 转储原始数据等。部分系统可能因 getrusage() 信息不全导致数据为 0。可用字段包括 CPU 时间、内存使用、作业状态等，输出格式可调整。"
    ],
    "contents": [
        "list空格。缺省没有组限制。-h, --help显示帮助信息。-j，--jobs=7o0(.steD)六 (4B) 的信息。jobfstep) 参数为逗号能有空格。缺省为显示所有作业的信息。-l1, --long142ay WME Cae)令从指定的文件而不是系统配置的作业记账日志文件中读取数据。分隔的组名字或组 GID 列表，其中不列表，其中\n16.1. yhacct等价于指定 “--fields=jobid,jobname ,partition,maxVvsize ,maxVsiZzenode ，maxvsizetask,avevsize ,maxrss ,maxrssnode,maxrsstask,averss ,maxpages ，maxpagesnode ,maxpagestask, avepages ,mincpu,mincpunode ,mincputask,avecpu,ntasks ,alloccpus,elapsed,state,exitcode”.-L, --allclusters显示所有集群上的作业信息。缺省地，只有执行 yhacct 的集群上的作业信息被显示。-n, --noheader输出中不显示数据头。缺省显示数据头。当使用 --dump 时此选项无效。-N, --nodes=nodelist显示运行在指定节点上的作业信息。-o, --format=field_list和逗号分隔的字段列表《〈可用字段见 --helpformat ).注意: 可以在字段后跟“%NUMBER”以指定要输出多少个字符。例如，--format=jobname%30 将以右对齐显示 30 个字符的作业名字。”“-30”将以左对齐Py fr显示 30 个字符。-0, --formatted_dump以易读形式转储记账记录。此选项用于调试。-Pp，--parsabjle输出将以“|”分隔，结尾有“|”-P, --parsable2输出将以“|”分隔，结尾没有有“-r, --partition=part_list仅显示指定分区中的作业或作业步信息。缺省显示所有分区的作业。part_1st Ave号分隅的分区名字列表。-s, --state=state_ list仅显示指定状态的作业信息，状态代码如下:— r: running143\n资源管理系统手册— s: suspended— ca: cancelled— cd: completed— pd: pendingf: failed— to: timed out—",
        "-user-》” Kfs下二 o6 6env”, “--get-user-env=10”, “--get-user-env=10L”, “--get-user-env=S注意: 此选项仅在执行 yhbatch 的有效用户 UID W root 时有效。。 -—-gid=group如果以 root 运行 yhbatch，且使用了 --gid 选项，则以 group 的组访问权限提交YENL. group 可以是组名字或数字的组 GID.。 -h, --help显示帮助信息并退出。。 —-hint=type根据应用提示进行任务绑定:一 compute_bound选择适合计算密集型应用的设置: 使用每个 socket 上的每个 core。一 memory_bound选择适合内存密集型应用的设置: 仅使用每个 socket 上的一个 core.178\n16.4. yhbatch— [no]multithreadLA | 使用 core 上额外的 thread，这可能对通信密集型应用有益。— help显示帮助信息。-I, --immediate仅当作业所需的资源能立即被满足时才将批处理脚本提交的控制进程。如果作业需要排队等待，则不会提交批处理脚本。-i, --input=filename pattern指定批处理脚本的标准输入从“ename pattern”给出的文件读取。缺省地，批处理脚本的标准输入被重定癌为“/dev/nu11”，标准输出和标准错误被重定问到文件“slurm-%j .out”，其中鸣j 将被作业 JobID 所和荐换。文件名模式可以包含一个或多个蔡换符号，即百分号“多”后接一个字母。所文持的蔡换符号为:— %j 作业 JobID— YN 点名。因仅创建一个文件，故向 将被分给作业的第一个节点的名字蔡换，也就是运行批处理脚本的节点。-J, --job-name=jobname为作业指定名字。当查看系统中的作业时，名字将和作业 JobID iba. WAT名字是批处理脚本的文件名，或者为“sbatch”，如果脚本是从 yhbatch 的标准输入读取的。--jobid=jobid使用指定的 JobID 分配资源。注意: 仅对 root HP",
        "列表，其中不能有空格。-1 表示所有集群。缺省为执行 yhacct 命令所在的集群。e -C，--cCompletion显示作业完成记录，而不是作业记账数据。。 -d, --dump转储原始数据记录。使用此选项时的数据输出请参见“解释 --dump 选项输出”一HeTHe --duplicates行资源管理系统作业 JobID 被重置，但是作业记账文件没有同时重置“比如使用 -e 选项)，则在记账日志文件中同一作业 JopID 可能出现多次，代表不同的作业。这些作业可以通过数据记录中的作业提区时间进行区别。当使用 --jobs 选项请求查看特定作业的数据时，将假定用户仅想要查看具有指定作业 ID 的最近的作业。此行为可被 --duplicates 选项覆盖，该情况下所有满足选择条件的记录数据都将被显示。e -e, —--helpformat输出可以通过 --format 指定的输出字段列表。可用的字段有:141\n资源管理系统手册AllocCPUS Account AssocIDAvePages AveRSS AveVMSizeCluster CPUTime CPUTimeRAWEligible End ExitCodeGroup JobID JobNameMaxPages MaxPagesNode MaxPagesTaskMaxRSSNode MaxRsSTask MaxVMSizeMaxVMSizeTask MinCPU MinCPUNodeNCPUS NNodes NodelistPriority Partition QOSReqCPUS Reserved ResvCPUStart State SubmitSystemCPU Timelimit TotalCPUUser UserCPU WCKey这些字段的描述请参见“作业记账字段”一节。-E, --endtime=endtimeAveCPUBlockIDElapsedGIDLayoutMaxRSSMaxVMSizeNodeMinCPUTaskNTasksQOSRAWResvCPURAWSuspendedUIDWCKeyID要显示的作业的开始时间不晚于指定时间。有效时间格式为: HH:MM[:SS][AM|PM]MMDD[YY],MM/DD[/YY],MM.DD[.YY],MM/DD[/YY]-HH:MM[:SS] 或YYYY-MM-DD[THH[:MM[:SS]]]-f, --file=file指示 yhacct 命仅在配置使用 accounting_storage/filetxt 插件时有效。-g, —-gid,Noe aN aE ZAR VELA. group_list Ais--group=group__list空格。缺省没有组限制。-h, --help显示帮助信息。-j，--jobs=7o0(.steD)六 (4B) 的信息。jobfstep) 参数为逗号能有空格。缺省为",
        "同 --jobidSALLOC_MEM BIND: 同 --mem_bindSALLOC_NETWORK: [A] --networkSALLOC_NO BELL: 同 --no-bellSALLOC_OVERCOMMIT: 同 -0, --overcommitSALLOC_PARTITION: [5] -p, --partitionSALLOC_QOS: [A] --qosSALLOC_TIMELIMIT: 同 -t, --timeSALLOC WAIT: [A] -W, --wait输出环境变量资源管理系统将在执行的程序的环境中设置如下变量:SLURM_CPU_BINDWEA --cpu_bind 选项的值。SLURM JOB ID《〈以及 SLURM_JOBID)作业的 JobID。SLURM JOB CPUS_PER NODE当前节点上此作业可用的处理器数。请注意，select/linear 插件将整个节点分配给作业，因此此值表示节点上的全部 CPU 数目。select/cons_res 插件将单个处理器分配到作业，因此此数值表示此节点上分配给作业的处理器数目。SLURM_JOB_NODELIST 〈以及 SLURM_NODELIST)分配到作业的节点列表。168\n16.2. yhalloc。 SLURM_JOB_NUM_NODES (以及 SLURM_NNODES)分配到作业的节点数目。。 SLURM MEM BIND设置为 --mem bind 选项的值。e SLURM NTASKS PER NODE所请求的每节点任务数。仅在指定了 --ntasks-per-node 选项时设置。。 SLURM_TASKS_PER_ NODE每个节点上要启动的任务数。该值由去号分隔，顺序同 SLURM_NODELIST。如果两个以上节点有相同的任务数，则该数目后跟“(x#)” FO “SH” EMR. Biluu, “SLURM_TASKS PER NODE=2(x3) ,1”表示前三个节点执行两个任务，第四个节点执行一个任务。当 yhalloc 等待作业资源分配时，大部分信号将导致 yhalloc 取消资源分配请求并退出。然而, 在得到资源分配并局动执行用户命令后, yhalloc 将忽略大部分信号。yhalloc不会在用户命令退出之前退出并释放资源。值得注意例外是 SIGHUP: HUP 信和号将导致yhalloc 释放资源并退出而不再等待用户",
        "局动执行用户命令后, yhalloc 将忽略大部分信号。yhalloc不会在用户命令退出之前退出并释放资源。值得注意例外是 SIGHUP: HUP 信和号将导致yhalloc 释放资源并退出而不再等待用户命令结束。示例获取资源分配，并执行 xterm，从而在其中可以交互地输入 yhrun HS.$ yhalloc -N16 xtermsalloc: Granted job allocation 65537(at this point the xterm appears, and salloc waits for xterm to exit)salloc: Relinquishing job allocation 65537169\n资源管理系统手册源分配并加载并行程序。halloc -N5 yhrun -ni0O myprogram170\n16.3 yhattach名字yhattach: 附接到作业步。ieyhattach [options] jobid.stepidIdsyhattach 附接到正在运行的作业步，从而获取其所有任务的 I/O。器，如 TotalView。。 -h, --help显示帮助信息并退出。。 --input-filter=task number。 --output-filter=task numbere --error-filter=task number仅传送标准输入到单个任务，或输出单个任务的标准输出或错误。本地进行。e -l, --label在每一行标准输出和标准错误前加上任务号。e --layout16.3. yhattach可用于并行调试过涯在 yhattach从控制进程获取作业步的任务布局信息，输出任务布局信息，然后退出。不附接到作业步。e -Q, --quiet不要输出一般信息。错误信息仍将显示。171\n资源管理系统手册e -u, ——usage显式简短帮助信息并退出。e -V, --version显示版本信息并退出。e。 -v, --verbose增加 yhattach KIL. TSA -v. GE HNL FOL GLARE示例附接到作业步。[ynattach 15.0WEE.[ynattach --output-filter=5 65386.15172\n16.4. yhbatch16.4 yhbatch名字yhbatch: 提交批处理脚本作业。ieyhbatch [options| script Largs...]sipsyhbatch 问资源管理系统提交一个批处理脚本。批处理脚本可以通过命令行以文件名形式给出，或者，如果没有指定文件名，yhbatch 将从标准输入读取一个脚本。批处理脚本中可以在可执行命令之前包含以",
        "如果任务数不超过布点数目，这将是缺省行为。— plane任务在指定大小的块中分布。选项 options 中包括任务块大小的参数，其后跟一个可选的规范，指定在任务世中和任务块间的分布模式。详细内容请参见第5.1.6节。— arbitrary“arbitrary〈任意)”分布是指根据环境变量 ~SLURM_HOSTFILE 指定的文件里的顺序分布进程。如果给出了此环境变量，则将禾盖其它指定的分布方法。如果未给出，则缺省为块分布。。 -—-mail-type=type当发生特定事件时通过邮件通知用户。有效的 如pe 值包括 BEGIN 〈作业开始执行)，END(〈作业结束),，FAIL (VELA), ALL (所有状态变化)。要通知的用户由 --mail-user 指定。。 --mail-user=user接收邮件通知的用户。缺省为提交作业的用户。e --mem=V/B5180\n16.4. yhbatch每个节点上需要的物理内存 MB 数。缺省值是 DefMemPerNode ,最大值是 MaxMemPerNode.如果进行了配置，这两个参数可以通过 yhcontrol show config 命令查看。此选项通常在将整个节点分配到作业的情况下使用〈S$electType=select/linear)。人参见--mem-per-cpu。--mem 和 --mem-per-cpu 是互斥的。--mem-per-cpu=MB对分配的每个 CPU 所需要的物理内存 MB 数。缺省值是 DefMemPerCPU，最大值是MaxMemPerCPU。 如果进行了配置, 这两个参数可以通过 yhcontrol show config 命令得看。此选项通常在将每个处理器分配到作业的情况下使用〈SelectType=select/cons res). J, --mem. --mem 和 --mem-per-cpu 是互斥的。--mem_bind=|{quiet , verbose},|type绑定任务到内存。仅在使用 task/affinity 插件且 NUMA 内存函数可用时才使用。注意: 在某些体系结构上 CPU 和内存的绑定分辨率不同。例如，CPTU 绑定在处理恬内的核的级别上进行，但是内存绑定在节点",
        "最少临时磁盘空间。166\n16.2. yhalloc。 -u, --usage显式简短帮助信息并退出。e -—-uid=userDAP user 的号份提交和运行作业，而不是执行 yhalloc 的用户。执行 yhalloc的用户号份将用于检查目标分区的访问权限。例如，root 用户可以使用此选项在RootOnly 分区中以普通用户寻份运行作业。xwser 可以是用户名或数值用户 UID。e -V, --version显示版本信息并退出。e -v, --verbose增加 yhalloc MIHAILA. TESA -v。缺省情况下仅显示错误信息。e -W, --wait=seconds此选项已被 --immediate 代替。e -w, --nodelist=node name listte OR Ta EAT A EAE BEY VA AG SP BE 2% BEB] CT cn[1-5,7,..)) Fax o MUZE FEY FEAST A AE CAR «BREA A 4 II AS BARE家资源管理系统重新排序。e --wckey=wckey作业使用的 wekey. AACE CPE TrackWCKey=no (ik), UCT KAR II.e -x, --exclude=node name list不要将指定的节点分配给作业。输入环境变量在启动时，yhalloc 将读取并处理如下环境变量中设置的选项。请注意，环境变量中的选项将覆盖批处理脚本中的选项，而命令行选项将覆盖环境变量中的选项。。 SALLOC_ACCOUNT: 同 -A, --account。 SALLOC_ACCTG_FREQ: 同 --acctg-freq。 SALLOC_BELL: 同 --bell167\n资源管理系统手册SALLOC_CONN_TYPE: 同 --conn-typeSALLOC_CPU_BIND: 同 --cpu_bindSALLOC_ DEBUG: 同 -v, --verboseSALLOC_EXCLUSIVE: 同 --exclusiveSALLOC_IMMEDIATE: 同 -I, --immediateSALLOC_JOBID: 同 --jobidSALLOC_MEM BIND: 同 --mem_bindSALLOC_NETWORK: [A] --networkSALLOC_NO BELL: 同 --no-bellSALLOC_OVERCOMMIT: 同 -0, --",
        "资源管理系统手册16.1 yhacct名字yhacct: 答看系统记账日志或记账数据库中的作业与作业步的记账数据ieyhacct [options]Fads资源管理系统中作业的记账信息被保存在作业记账日志文件或数据库中。yhacct 可以以各种形式显示日志文件或数据库中的作业记账数据，以进行分机。缺省地，yhacct 命令显示作业，作业步,作业状态和退出代码的信息。可以使用 --format=选项指定要显示的字段。对于 root 用户，yhacct 命令显示所有用户的作业记账数据，不过也可以使用过滤选项仅显示特定用户或特定组的作业信息。对于非 root 用户，yhacct 命令仅显示由其 UID 提交的作业的信息。其他用户的数据可通过 --all, --user 或 --uid 选项显示。个 yhacct 显示的很多数据是由 wait3() 和 getrusage() 系统调用收集的。在某些系统上这些系统调用收集的信息不完整; 这些缺失的数据 yhacct 将显示为 0。关于具体哪些信息可用，请参见系统上 getrusage(3) 的手册。如果指定了 -=-dump，则字段选择选项 (--brief, --format) 无效。elapsed 使用两个字段显示，秒数和微秒数。如果没有指定 --dump,则 elapsed ANA [[days-]hours:|minutes: seconds. hundredths.缺省的输入文件是系统配置文件中 JobAcctLogFile BA.e -a, --allusers显示当前用户的作业。当以 root 运行时显示所有用户的作业。e -A, --accounts=account_ listANTHEMS WIEN.140\n16.1. yhaccte -b, --brief显示简短列表，包合如下数据:一 jobid— status— exitcode在指定了 --dump 时此选项无效。e -C, --cluster=cluster list仅显示指定的集群上的作业的信息，cluster_1ist 为逗号分隔的集群名字列表，其中不能有空格。-1 表示所有集群。缺省为执行 yhacct 命令所在的集群。e -C，--cCompletion显示作业完成记录，而不是作业记账数据。。 -d, --",
        ". WAT名字是批处理脚本的文件名，或者为“sbatch”，如果脚本是从 yhbatch 的标准输入读取的。--jobid=jobid使用指定的 JobID 分配资源。注意: 仅对 root HP AR.-K, --no-kill4d BZ EAT A RIN SE SHREVE. FP i 6 A ET A RN EST Afite SARA ARSON, J27T EIA REISE GBA MPI 作业) 几乎育定会发生致命错误;但是使用 --no-kill 时，分配给作业的节点不会被回收，从而用户可以在剩余的已分配贡点上加载新的作业步。缺省地，在分配给作业的节点失效时，资源管理系统将终止整个作业并回收节点。-L, --license=license179\n资源管理系统手册指定要分配给作业的许可证〈或其他在系统所有节点上都可用的资源)。许可证名字可以后跟星号和数目《〈缺省数目为 1)。多个许可证名字应用逗号分隔，如“--license=foo*4, bar”.e -m, --distribution=<block|cyclic|arbitrary|plane=options>指定远程任务的分布方式。对于 yhbatch 而言，这将会设置适当的环境变量，以供后续的 yhrun 使用。— block“block” CR) 分布方法将按节点上的 CPU 的顺序分配进程。如果进程数目超过所分配的节点数目，则将使用所有的节点。例如，考虑分配了三个节点，个节点有两个 CPU。一个四进程的作业步任务分布请求将导致进程0和1在第一个节点上，进程 2 在第二个节点上，进程 3 在第三个节点上。块分布在任务数超过节点数的情况下是缺省行为。— cyclic“cyclic” NAA) 分布方法在所分配的节点上以轮转方式分布进程。亦即，进程0 将运行在第一个节点上，进程 1 运行在第二个节点上，等等。如果任务数不超过布点数目，这将是缺省行为。— plane任务在指定大小的块中分布。选项 options 中包括任务块大小的参数，其后跟一个可选的规范，指定在任务世中和"
    ]
}