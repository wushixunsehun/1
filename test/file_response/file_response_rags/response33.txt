{
    "query": "yhalloc 中 --nodes=2-4 的含义是什么？",
    "summaries": [
        "yhnode 是一个用于管理节点和芯片信息的工具，使用方法包括获取安装包、安装配置数据库、修改配置文件以及执行相关命令。安装时需解压二进制包并配置 MySQL 数据库，创建数据库、建表、设置用户权限。配置文件位于 /etc/yhnode.yaml，需填写数据库和 SSH 路径等信息。使用命令包括添加节点信息、查询节点信息、删除芯片信息和读取节点的 drain 信息。",
        "yhinfo 是资源管理系统中用于显示节点和分区信息的命令。它支持多种选项，如 --help 显示选项信息，--hide 隐藏分区信息，默认不显示隐藏分区和用户组不可访问的分区。-l 显示详细信息，-n 指定节点范围，-N 以节点方式显示输出。-o 可自定义输出格式，支持多种字段规范，如节点状态、CPU 数、内存大小等。-R 显示节点不可用原因，-s 显示分区汇总信息，-S 指定排序方式。其他选项如 -p 限制显示特定分区，-t 设置节点状态过滤。该命令功能强大，适用于管理和监控集群资源。",
        "yh-tools 是一个用于管理多集群环境的工具，支持多集群模式和全节点模式。多集群模式下，每个集群管理部分节点，不可跨集群提交作业；全节点模式（如 mn9）则所有节点属于同一集群。关键命令包括：`gyhi`、`gyhq` 查看节点和作业状态，`yhclusters` 查看可用集群，`yh-enter` 切换集群，`cab`、`ccst` 查看机柜和框状态，`yhidle`、`yhdrain` 管理节点状态，`pping` 自动汇聚节点，`showborad` 查看计算板状态。工具已部署在多个节点，可通过指定链接下载。"
    ],
    "contents": [
        "`ccst`\n> 在多集群模式下，如果你需要查看某个框的节点状态，可以使用该命令\n[![image-1618278197017.png](http://192.168.4.150:6875/uploads/images/gallery/2024-09/scaled-1680-/image-1618278197017.png)](http://192.168.4.150:6875/uploads/images/gallery/2024-09/image-1618278197017.png)\n7. `yhidle`\n> 在多集群模式下，如果你需要把某些drain或者down的节点重新设置状态为idle，则使用`yhidle <nodelist>`\n8. `yhdrain`\n> 在多集群模式下，如果你需要drain掉很多节点，则使用`yhdrain <nodelist> <reason>`\n9. `pping`\n> 此`pping` 修改的老版本`pping`，将自动汇聚节点，不需要数节点了\n[![image-1618278999255.png](http://192.168.4.150:6875/uploads/images/gallery/2024-09/scaled-1680-/image-1618278999255.png)](http://192.168.4.150:6875/uploads/images/gallery/2024-09/image-1618278999255.png)\n10. `showborad`\n> 在多集群模式下，使用该命令可查看对应节点一个计算板的节点状态\n[![image-1618279081635.png](http://192.168.4.150:6875/uploads/images/gallery/2024-09/scaled-1680-/image-1618279081635.png)](http://192.168.4.150:6875/uploads/images/gallery/2024-09/image-1618279081635.png)",
        "node_chip_db.sql;\n```\n- 创建用户赋予权限\n```shell\n> create user 'yhnode'@'%' identified by '111111';\n> grant all on node_chip_db.* to 'yhnode'@'%';\n> flush privileges;\n```\n> use node_chip_db;\n> source /var/lib/yhnode/node_chip_db.sql;\n- 创建用户赋予权限\n```shell\n> create user 'yhnode'@'%' identified by '111111';\n> grant all on node_chip_db.* to 'yhnode'@'%';\n> flush privileges;\n```\n> create user 'yhnode'@'%' identified by '111111';\n> grant all on node_chip_db.* to 'yhnode'@'%';\n> flush privileges;\n- slurm数据库确认可用\n配置文件\n- 文件地址： /etc/yhnode.yaml\n- 内容：\n```shell\ndb:\nnode_chip:\nuser: \"root\"\npasswd: \"111111\"\nname: \"node_chip_db\"\nhost: \"sn0\"\nport: 3306\nslurm_acct_db:\nuser: \"root\"\npasswd: \"111111\"\nname: \"slurm_acct_db\"\nhost: \"sn0\"\nport: 3306\nssh:\npath: \"/usr/local/sbin/nss_yhpc_ssh\"\ntimeout: 3\n```\ndb:\nnode_chip:\nuser: \"root\"\npasswd: \"111111\"\nname: \"node_chip_db\"\nhost: \"sn0\"\nport: 3306\nslurm_acct_db:\nuser: \"root\"\npasswd: \"111111\"\nname: \"slurm_acct_db\"\nhost: \"sn0\"\nport: 3306\nssh:\npath: \"/usr/local/sbin",
        "core 2._ 97core 的 thread 2%.一 {2扩展的处理器信息: 每节点的 socket, core, thread # (S:C:T).一 fh. <*>字段右对齐。— %<Number><*>字段长度。e。 -p, --partition=partition仅显示指定分区的信息。e -工，--Tesponding仅显示有啊应的节点的信息。e -R, --list-reasons202\n16.7. yhinfo显示节点处于 DOWN, DRAINED, DRAINING, FAIL BK FAILING 状态的原因。当节点处于这些状态时，资源管理系统允许管理员设置“原因”串。此选项将显示原因的前 35 个字符，并显示处于这些状态和这些原因的节点。此选项可以和其它节点过滤选项〈如 -r, -d, -t, -n) 一起使用，但是这些合并选项的结果中如果有不是处于DOWN 或DRAIN 或FAILL 状态的节点，则不会被输出。当与 -1 一起使用时还会显示当前节点状态。-s, --summarize仅显示分区状态汇总信息，不显示节点状态细节。如果指定了 --format 则此选项将被忽略。-S, --sort=sort_ list指定记录显示的顺序。使用与 --format FAIA FEE. 2 BAR AP AY eS op隔的多个排序字段指定。字段规范前可跟“+”或“-”以指明升序〈缺省) 或降序。分区字段规范“P”可以前跟“#”，表示以分区在配置文件中出现的顺序显示。例如，排序规范“+P,-m”表示显示记录的顺序为按分区名字升序，在分区内按内存大小降序。缺省的排序规范为“卸,-”〈投配置的分区顺序，然后按节点状态降序)。如末指定了 --Node，缺省的排序规范是“N”《〈按节点名字升序)。-t, --states=statesDUbANTRERASIT RR. 2 MRASHIE Sat, KSA) SICK. AA IKAMEA:alloc, allocated, comp, completing,",
        "yh-tools 使用手册(此手册需要认真阅读)\nyh-tools 说明书\nyh-tools 下载地址，目前已经在所有mn[0-31],ln[0-31]部署，需要使用可自行下载\n[http://25.8.100.4:3000/NUDT651/yh-tools](http://25.8.100.4:3000/NUDT651/yh-tools)\n关键名称介绍\n1. 多集群模式：除了mn9，其他ln或者mn默认都是在多集群模式，就是每个集群管理一部分点，各个集群不互通，不可将一个作业提交到多个集群上\n2. 全节点模式：该模式默认只有mn9，其他ln或者mn要使用该模式，则使用`yh-enter 1903`即可，该模式下只有一个集群，全部节点都属于该集群管理，可以提交作业到任意节点\n1. `gyhi`\n> 在多集群模式下，如果你希望查看任意集群的某些节点状态，就需要使用`gyhi`，`gyhi`会自动识别你所选的节点属于哪个集群，并将其状态打印出来。用法同`yhi`\n[![image-1618276768960.png](http://192.168.4.150:6875/uploads/images/gallery/2024-09/scaled-1680-/image-1618276768960.png)](http://192.168.4.150:6875/uploads/images/gallery/2024-09/image-1618276768960.png)\n2. `gyhq`\n> 在多集群模式下，如果你希望查看任意集群的某些节点运行着哪些作业，就需要使用`gyhq`，`gyhq`会自动识别你所选的节点叙述哪个集群，并将其节点作业信息打印出来。用法同`yhq`\n[![image-1618277492798.png](http://192.168.4.150:6875/uploads/images/gallery/2024-09/scaled-1680-/image-1618277492798.png)](http://192.168.4.150:6875/uploads/images/gallery/2024-09/image-1618277492798.png)\n3. `yhclusters`\n> 在多集群模式下，如果你希望查看目前可用的集群，那么可以使用该命令\n[![image-1618277598712.png](http://192.168.4.150:",
        "user: \"root\"\npasswd: \"111111\"\nname: \"slurm_acct_db\"\nhost: \"sn0\"\nport: 3306\nssh:\npath: \"/usr/local/sbin/nss_yhpc_ssh\"\ntimeout: 3\n使用方法\n- 获取结点的cpu id并写入数据库\n# yhnode add node=<结点名> cpu=<mt>\ncpu指定cpu的类型，分为mt和ft，默认mt，可不写。\n- 读取数据库中结点的cpu id\n# yhnode info node=<节点名>\n输出中包括ID和chip，id是唯一值用于更新和删除操作， chip是芯片id。\n- 删除芯片信息\n# yhnode del id=<id>\nid由上一步获取\n- 读取结点的drain信息\n# yhnode reason node=<结点名> cluster=<集群名> chip=<chip id>\ncluster 指定集群名字，必须填写\nchip指定芯片id，用于精确搜索，可不填写",
        ":_ haTY XTRAS /7e 8 AT一 hA按状态显示的节点数，格式为“已分配/空闸”。 RBS TAKA itBAT) 一起使用，人否则不同状态的节点将在不同行显示。_ Ac每节点的 CPU 数。200\n16.7. yhinfohCFIKAS LAN EN) CPU 2, 8S0N “Up 8t/PA/H CST”. BRB TAKAMET Cht BLT) EAD, WAN TRAST CRE EE AS TAI 47 SL oKel每节点的临时磁盘空间大小，以 MB 计。VD节点数。LE节点不可用 (DOWN, DRAINED 或 DRAINING IRA) 的原因。与人 相同，仅在排序时按时间排序而不是原因串。Aft节点的特性。Ag按状态显示的节点数，格式为“已分配/空闲/其它/总计”。 请不要与节点状态选项〈%‰ BAT) 一起使用，否则不同状态的节点将在不同行显示。hg可以使用节点的用户组。|VEY a FG ay eS a, “YES”, “NO” BK “FORCE”.AlVELA ARIE TY AIP], ABTA “ days-hours: minutes: seconds”ALVEL EPS RA IST EN TAL a], ABTA “ days-hours: minutes: seconds”4m每节点的内存大小，以 MB 计。VAN节点名字列表。%P分区名字。Ax4M root 用户可提交作业,“YES”或“NO0”。201\n资源管理系统手册— ZR节点不可用 (DOWN, DRAINED, DRAINING, FAIL 8% FAILING 状态) 的原因 。— Is作业了最多可使用节点数目。简短格式的节点状态。_ YT扩展格式的节点状态。wy节点的调度权重。— 7X每节点的 socket 2X._ ¥ysocket 的 core 2._ 97core 的 thread 2%.一 {2扩展的处理器信息: 每节点的 socket, core, thread # (S:C:T).一 fh.",
        ")\n3. `yhclusters`\n> 在多集群模式下，如果你希望查看目前可用的集群，那么可以使用该命令\n[![image-1618277598712.png](http://192.168.4.150:6875/uploads/images/gallery/2024-09/scaled-1680-/image-1618277598712.png)](http://192.168.4.150:6875/uploads/images/gallery/2024-09/image-1618277598712.png)\n4. `yh-enter`（该命令虽然处于测试阶段，但依然推荐使用）\n> 如果你经常使用某一个集群，但是使用`srun -M <cluster_name>` 又觉得繁琐，那么你可以使用该命令，可保证当前会话始终处于该集群,若忘记集群名称，可以使用`yhclusters`查看\n[![image-1618277921528.png](http://192.168.4.150:6875/uploads/images/gallery/2024-09/scaled-1680-/image-1618277921528.png)](http://192.168.4.150:6875/uploads/images/gallery/2024-09/image-1618277921528.png)\n> 如果你想获得想mn9 全节点模式下的效果，则直接使用`yh-enter 1903`即可\n[![image-1618278426420.png](http://192.168.4.150:6875/uploads/images/gallery/2024-09/scaled-1680-/image-1618278426420.png)](http://192.168.4.150:6875/uploads/images/gallery/2024-09/image-1618278426420.png)\n5. `cab`\n> 在多集群模式下，如果你需要查看某个机柜的节点状态，可以使用该命令\n[![image-1618278128091.png](http://192.168.4.150:6875/uploads/images/gallery/2024-09/scaled-1680-/image-1618278128091.png)](http://192.168.4.150:6875/uploads/images/gallery/2024-09/image-1618278128091.png)\n6. `ccst`\n> 在多集群模式下，如果你需要查看某个框的节点状态，可以使用该命令\n[![image-1618278197017.png](http://192.168.4.150:6875/uploads/",
        "yhnode 使用方法\n获取安装包\n- 二进制压缩包 [下载链接](http://25.8.100.31:3000/attachments/01e3bc01-2572-4429-813b-cc6085c083ed)\n- [源码](http://25.8.100.31:3000/yanta/yhnode.git)\n安装\n- 解压二进制压缩包到根目录：\n# tar -jxmhf yhnode-0.1.tar.bz2 -C /\n- 安装并配置mysql/mariadb\n自行解决\n自行解决\n- node_chip_db数据库配置\n- 创建数据库\n```shell\n> create database node_chip_db;\n```\n- 建表\n```shell\n> use node_chip_db;\n> source /var/lib/yhnode/node_chip_db.sql;\n```\n- 创建用户赋予权限\n```shell\n> create user 'yhnode'@'%' identified by '111111';\n> grant all on node_chip_db.* to 'yhnode'@'%';\n> flush privileges;\n```\n- 创建数据库\n```shell\n> create database node_chip_db;\n```\n- 建表\n```shell\n> use node_chip_db;\n> source /var/lib/yhnode/node_chip_db.sql;\n```\n- 创建用户赋予权限\n```shell\n> create user 'yhnode'@'%' identified by '111111';\n> grant all on node_chip_db.* to 'yhnode'@'%';\n> flush privileges;\n```\n> create database node_chip_db;\n- 建表\n```shell\n> use node_chip_db;\n> source /var/lib/yhnode/node_chip_db.sql;\n```\n- 创建用户赋予权限\n```shell\n> create user 'yhnode'@'%' identified by '111111';\n>",
        "显示数据头。。 --help显示 yhinfo 选项信息。e --hide不要显示隐藏分区的信息。默认地，不显示隐藏分区和用户组不能访问的分区《〈《即，此选项为缺省行为)。199\n资源管理系统手册e -i, --iterate=secondsFal SAVES AA od Xfa , FE BE NZ [A ET EP. ER, FE SK显示时间戳。e -l, --long显示详细信息。如指定了 --format，此选项将被忽略。e -n, --nodes=nodesMinti Peas. 2S Pea ee So eR eA shee. Fil如,“cn[00-07]”表示 8 个节点,“cn00”到“cn07”。e -N, --Node以面向节点的方式显示输出信息。缺省以面向分区的方式显示。如指定了 --format，此选项将被忽略。。 -o, --format=output_ format通过格式串指定要显示的输出信息。某些选项将隐含指定格式串，如下:— TRA: “Y%OP Y5a %.101 %.5D Y6t YN2”一 --sgummarize: “Y9P %5a %.101 %15F YN”— --long: “%9P %5a %.101 %.8s %4r %5h %10g %.5D %11T YN”--Node: “%#N %.5D %9P %6t”一 --long --Node: “/#N %.5D %9P %11T %.4c %.8z %.6m %.8d %.6w Y8f ZR”一 --list-reasons: “%50R %N”一 --lone --list-reasons: “%50R %6t %N”FE EIR ARLE, “9b” ZEANTT AU AS KLAN TRE可用的字段格式规范包括:_ haTY XTRAS /7e 8 AT一 hA按状态显示的节点数，格式为“已分配/空闸”。 RBS TAKA itBAT) 一起使用，人否则不同状态的节点将"
    ]
}