{
    "query": "在 Lustre 文件系统中，如何通过参数配置 MDT 服务的线程数以优化元数据处理性能？请结合最小线程数（mdt_threads_min）和最大线程数（mdt_threads_max）参数说明作用。",
    "summaries": [
        "Lustre 2.3 引入了多项参数和功能，用于优化 MDS 服务线程和网络性能。管理员可通过设置 `_num_threads` 控制线程数量，禁用自动创建。Node Affinity 功能允许将 MDS 线程绑定到特定 CPU 分区（CPT），提升缓存效率和内存局部性。此外，可配置 `mds_num_cpts`、`mds_rdpg_num_cpts` 和 `mds_attr_num_cpts` 来指定线程绑定的 CPT 范围。LNet 参数如 `tx_buffer_size`、`rx_buffer_size` 和 `enable_irq_affinity` 可调整网络性能，而 `credits` 参数影响网络通信的信用值，以适应不同网络环境。路由器缓存区功能则通过分配不同大小的缓冲区来优化消息转发。这些功能为系统调优提供了更多控制选项。",
        "本文档介绍了Lustre文件系统中的一些可调参数及其设置方法。主要包括：\n\n1. **writethrough cache enable**：控制是否启用写通缓存，适用于文件写入后不常被读取的情况，建议与缓存共用。\n2. **readcache max filesize**：设置OSs在缓存中保留的文件最大大小，用于优化小文件的缓存使用，避免大文件占用缓存。\n3. **sync journal**：控制是否同步提交文件系统日志，异步提交可提高性能，但可能丢失数据，需根据需求设置。\n4. **sync_lock_cancel**：控制锁取消时是否将日志写到磁盘，用于保证多客户端写入时的数据一致性。\n5. **at_min**：设置自适应超时机制的最短超时时间，用于应对临时网络中断导致的RPC超时。\n6. **adaptive timeout_max**：设置自适应超时机制的最长超时时间，用于估计RPC服务时间上限。\n\n所有参数的设置方法均涉及修改对应节点（如MDT、OST、MGS）的配置文件。",
        "本文档介绍了Lustre文件系统中多个可调参数的设置和作用。其中，adaptive_timeout_max用于设置自适应超时机制的最长超时时间，当服务时间超过该值时RPC请求将超时；adaptive_timeout_history用于设置自适应超时机制记录历史事件的时间长度；at_early_margin用于在超时前发送提前回复以避免客户端超时；commit_on_sharing用于控制是否提交被其他客户端依赖的事务，以提高系统恢复的可靠性；timeout用于设置客户端等待服务器完成RPC的时限。此外，还介绍了mdt_req_buffer_history_max和ost_req_buffer_history_max用于设置MDT和OST服务的历史请求数上限。这些参数可根据实际需求进行调整，以优化系统性能和稳定性。"
    ],
    "contents": [
        "Lustre超时机制确保RPC会在有限的时间内处理可能发生的故障。自适应超时机制在默认情况下是启用的。如需在运行时禁用自适应超时机制，可以通过在MGS上运行将 at_max 设置为0。关于自适应超时机制的介绍，请参看参数adaptive_timeout_min。请注意，在运行时改变自适应超时的状态可能会导致瞬时的客户端超时、恢复和重连。在Lustre超时发生时，通常会在控制台打印一条控制台信息。如果Lustre超时没有伴随LND超时，请在服务器和客户端同时增加Lustre超时时长。本参数控制客户端等待服务器完成RPC的时间 (默认为100秒) 。服务器等待正常客户端RPC完成的时间是该超时时间的一半，等符单个批量请求〈最大4MB的读或写) 完成的时间是该时间的四分之一。客户端会每过四分之一的超时时间，ping一次可恢复的目标 (MDS和OST) ，在驱逐超时的客户端之前，服务器会等待超时时间的1.5倍。在指定时间内，如果Lustre客户端和某个服务器没有任何通信，该客户端会定期向的服务器发送ping信息。如果客户端和服务器之间存在任何网络活动，这个RPC也被认作是一个ping。作者: 李希 更新时间: 2023年6月7日\nLustre 可调参数全解133. mdt_req_buffer_history max: 设置MDT服务的最大历史请求数133.1 简介本参数用来设置MDT服务的最大历史请求数。每个服务都会维护一个请求历史，这对故障排查很有用。如果请求历史的缓冲区大小超过了本参数的值，就会从服务请求缓冲区历史中删除一些缓冲区，请求也会从服务请求历史中删除。关于MDT服务的类型，请参看参数mdt_nrs_policies。133.2 设置方法将所有MDT的 mds.MDS.{{ service }}.req buffer history max 设置为{{ max }};将MGS的 mds.MDS.{{ service }}.req buffer history max 设置为{{ max }}.134. ost_req_buffer_history max: 设置OST服务的最大历史请求数134.1 简介本参数用来设置OST服务的最大历史",
        "}} 。98. adaptive timeout_max: 设置自适应超时机制的最长超时时间98.1 简介本参数用来设置自适应超时机制的最长超时时间。本参数是对RPC服务时间的上限估计。如果服务时间达到 at_max ，RPC请求超时。将 at_max 设置为 0 会禁用自适应超时机制，而使用固定超时方法。如果硬件缓慢导致服务估计时间增加到超过 at_max 的默认值，请将 at_max 增加到愿意等待RPC完成的最大时间。关于自适应超时机制的介绍，请参看参数adaptive_ timeout_min.98.2 设置方法将Lustre客户端或服务器的 at_max 设置为 {{ seconds }};将MGS的 at_max 设置为 {{ seconds }} 。99. adaptive_timeout_history: 设置自适应超时机制最慢事件的历史时长99.1 简介本参数用来设置自适应超时机制最慢事件的历史时长。自适应超时机制需要记录历史上发生的事件，以根据历史对超时时长进行自适应调整。本参数控制记忆时长，单位是秒，默认是 600 。关于自适应超时机制的介绍，请参看参数adaptive_ timeout_min.99.2 设置方法将Lustre客户端或服务器的 at history 设置为 {{ seconds }};将MGS的 at_history 设置为 {{ seconds }} 。100. at_early margin: 设置在超时发生前多长时间发送提前回复以避免客户端超时100.1 简介本参数用来设置在超时发生前多长时间发送提前回复 (Early Reply) 以避免客户端超时。作者: 李希 更新时间: 2023年6月7日\nLustre 可调参数全解103. commit on_sharing: 设置是否提交被其他客户端依赖的事务103.1 简介本参数用来设置在其他客户端执行了一个具备依赖性的事务 Uournal) 时，是否提交被依赖的事务。共享时提交 (Commit On Sharing, COS) 功能增加了Lustre文件系统恢复的可靠性，因为该功能可以防止被驱逐的客户端连带着引起其他客户端被驱逐。司用COS后，如果一些Lustre客户端",
        "。共享时提交 (Commit On Sharing, COS) 功能增加了Lustre文件系统恢复的可靠性，因为该功能可以防止被驱逐的客户端连带着引起其他客户端被驱逐。司用COS后，如果一些Lustre客户端在服务器重启或故障后错过了恢复窗口，剩下的客户端不会因此被驱逐。为了说明COs是如何工作的，让我们先看一下没有COSs的恢复方式。在服务重局后，MDS9将局动并进入恢复模式。客户端开始重新连接并重新执行他们未提交的事务。客户端可以独立地重新执行事务，只要这些事务不相互依赖 (一个客户端的事务不依赖另一个客户端的事务) 。MDSs能够通过基于版本的恢复 (Version-basedRecovery) 这一功能来确定一个事务是否依赖于另一个事务。如果客户端事务之间存在着依赖关系 〈例如，创建和删除同一个文件) ，而其中一个或多个客户端没有及时地重新连接，那么这些客户端可能因为它们的事务依赖于被驱逐的客户端的事务，因而跟着被驱逐。而驱逐这些客户端又会导致更多的客户端被驱逐，从而导致客户端接二连三地被级联驱逐。COS通过消除客户端之间的事务依赖来解决级联驱逐的问题。如果另一个客户端的事务依赖于此客户端的某事务，COS会确保将该事务提交到磁盘。由于客户端不会依赖于其他客户端的未提交事务，因此客户端可以独立地重放其Ta KM ARBRE,本参数控制是否启用共享时提交功能。默认情况下，共享时提交功能是禁用的。103.2 设置方法将所有MDT的 mdt.{{ service name }} .commit on _ sharing 设置为{{ enable }};将MGS的mat.{{ filesystem.fsname }}-MDTx .commit on _ sharing 设置为{{ enable }} 。104. timeout: 设置客户端等待服务器完成RPC的时限104.1 简介本参数用来设置客户端等待服务器完成RPC的时限。在不启用自适应超时机制 (Adaptive Timeout) 的情况下，Lustre超时机制确保RPC会在有限的时间内处理可能发生的故障。自适应超时机制在默认情况下是启用的。如需在运行时禁用自适应超时机制，可以通过在MGS上运行将 at_max",
        "MDS MAX THREADS) “4 1024.注意圭载时，每个 CPT 每个服务局动两个 O0SS 和 MDS 线程，根据服务奉负载来动态增加运行的服务线程数量。设置* _num threads参数将立即为该服务局动指定数量的线程，同时禁用线程目动创建。(在 Lustre 2.3 中引入)Lustre 2.3 中引入了新的参数，为管理员提供了更多的控制。388\nLustre 文件系统操作手册 Pea Parmdqs rdqpg _ num threads一控制提供读取页服务的线程数。读取页服务用于处理文件关闭和 readdir 操作。mds attr num threads一控制为运行 Lustre 1.8 的客户端提供 setattr 服务的线34.2. 绑定 MDS 服务线程到 CPU 分区在 Lustre 2.3 版中引入的 Node Affinity (节点关联性) ，可以将 MDS 线程绑定到特定的 CPU 分区 (CPT) ,以提高 CPU 高速缓存使用率和内存局部性。将自动选择 CPT 数和 CPU 核心绑定的默认值，以便为给定数量的 CPU 提供良好的整体性能。管理员也可更改这些设置。有关指定 CPU 内核到 CPT 的有映射的详细信息，请参见本章第 4 节\"Tibcf调试\"。 mdqs_num cpts=[EXPRESSION] 绑定默认 MDS 服务线程 至由[EXPRESSION]定义的CPTs。如，mqs_num cpts=[0-3] 将绑定 MDS服务线程至CPT [0,1,2，3]。*mds rdpg num_cpts=[EXPRESSION] 绑和定读取页服务线程 至由[EXPRESSION]定义的CPTs。读取页服务负责处理文件关闭操作及readdir 请求。如，mqs_rqpg_num_cpts=[4]将绑定读取页服务线程至 CPT4。P>*mds attr num cpts=[EXPRESSION] 3h cE setattr AK 务线 程 至 由[EXPRESSION]定 义 的 CPTS。 WY WM fE KM 件/etc/modprobe.dq/1LIustre.conf中载入模块前设置参数。如:options lnet networks=tcp0",
        "}}.作者: 李希 更新时间: 2023年6月7日\nLustre 可调参数全解93. sync journal: 设置是否同步提交文件系统日志93.1 简介本参数用来设置是否同步提交文件系统日志 (Journal) 。OSs的异步日志提交功能会异步地将数据写入磁盘，而不会强制进行日志刷新。这减少了寻道次数，可以在某些硬件环境下明显地提高性能。异步日志提交无法用于Direct MO的写入 (设置了o_DIREcT 标志) 。对这种MO请求，将强制执行日志刷新。启用异步日志提交功能后，客户端节点会将数据保留在页面缓存中 (增加页面引用) 。 Lustre客户端将监视从O5SS发送到客户端的消息中的最后提交的交易号 (TransactionNumber, transno) 。当客户端看到OSs报告的最后一个 是交的 transno = BIDS 等于批量写入的 transno AY, 它会在相应的页面上释放5引用。 为了避免批量写入后，持有页面引用对时间过长，客户端在收到批量写入的回复后将发起7秒的ping请求 (0SS文件系统提交默认时间间隔为5秒) ，以便OSSs报告最后提交的transno 。如果O55在日志提交发生之前谢演， 则中间数据就会丢失。然而，包含了异步日志提交功能的0Ss恢复功能会要求客户端重发与请求，然后通过恢复文件系统的状态来恢复丢失的磁盘更新。默认情况下， sync journal 被禁用 (sync journal=0) ，因此，文件系统日志条目不会同步提交。如需禁用异步日志提交，请将 sync_jouzrnal 参数设为1。93.2 设置方法将所有OST的 obdfilter.{{ service name }}.sync journal 设置为 {{ sync }};将MGS的 obdfilter.{{ filesystem.fsname }}-OST*.sync journal 设置为 {{ sync }}.94. sync_lock_cancel: 设置是否在锁取消时将日志写到磁盘94.1 简介本参数用来设置是否在锁取消时将日志写到磁盘sync-on-lock-cancel解决下面场景下的数据一致性问题: 在多个客户端向一个对象的交叉区域写入",
        "时将日志写到磁盘94.1 简介本参数用来设置是否在锁取消时将日志写到磁盘sync-on-lock-cancel解决下面场景下的数据一致性问题: 在多个客户端向一个对象的交叉区域写入数据后，如果这个OSS骨溃，而且不巧其中一个客户端也骨溃了，这种情况就有可能会违反POSIX对连续写入的语义要求，而且数据可能遭受损坏。在启用了sync-on-lock-cancel功能后，如果被取消的锁上附加了任何易失性的写入，OSS会在撤销锁时同步将文件系统日志写到磁盘。茜用锁取消同步日志功能可以提高并发写的性能，但不推荐禁用这一功能。sync_1lock_cancel 参数可以设置为以下值:e always: 始终在锁取消时强制进行日志刷新。e blocking: 仅由于阻塞回调触发锁取消时，才强制进行日志刷新。e never: 不强制执行任何日志刷新。94.2 设置方法将所有OST的 obdfilter.{{ service name }} .sync lock cancel 设置为 {{ condition }};将所有MDT的 mdt.{{ service name }}.sync_ lock cancel 设置为 {{ condition }};将MGS的 obdfilter.{{ filesystem.fsname }}-OSTx .sync_ lock cancel 与作者: 李希 更新时间: 2023年6月7日\nLustre 可调参数全解本参数控制自适应超时机制的最短超时时间，单位为秒，默认值为 0 。客户端以该值为基础进行超时处理，但并不直接使用该值。如果由于某些的原因 〈通单是由于临时的网络中断) ，自适应超时值太短，而导致客户端的RPC超时，则可以通过增加 at_min 的值来补偿。97.2 设置方法将Lustre客户端或服务器的 at_min 设置为 {{ seconds }};将MGS的 at_min 设置为 {{ seconds }} 。98. adaptive timeout_max: 设置自适应超时机制的最长超时时间98.1 简介本参数用来设置自适应超时机制的最长超时时间。本参数是对RPC服务时间的上限估计",
        "CPU 分区，通过 LNet 模块的选项进行指定。例如，o2ipbo(ib0) [0,1] 确保了o2ipb0的所有应妃由在CEPT0和CPT1上执行的LND 线程处理; tcpl (eth0) [0] 确保了tcpl的消息由CPT0上的线程处理。34.3.4. 网络接口信用网络接口 (ND 信用在所有 CPU 分区 (CPT) 之间共享。例如，如果一台机器有四个 CPT 且 NI 信用值为 S12，则每个分区有 128 个信用值。如果系统中存在大量 CPT，则 LNet 将检查并验证每个CPT 的 NI 信用值，以确保每个 CPT 都有可用的信用值。如果一人台机需有16个CPT且NI信用值为236，则每个分区只有 16 个信用值，将可能会对性能产生负面影响。因此，LNet SA aka (Bie A 8*peer credits (默认情况下，peer _ credits 为 8) ，因此每个分区都有 64 个信用值。增加 creqits/ Peer_creqdits 数使得 LNet FENIAN KITA Qik BREN网络或对等节点并保持传输人饱和，从而提高高延迟网络的性能〈以消耗更多内存为代价)。管理员可以使用ksoclnd或ko2iblndq修改 NI {AAA Ee PIN IA, TCP 连接的信用值被设置为 256。ksocklnd credits=256Wt IB 连接的信用值为 256:ko2iblnd credits=256390\n—Lustre 文件系统操作手册 译者:注意在 Lustre 2.3 及以上版本中，LNet 可能会重新验证 NI 积分，则管理员请求可能不会持续。34.3.5. 路由器缓存区当一个节氮被设置为LNet 路由融时，会分配三个缓存区: 极小、小和大的缓存区。这些缓存区按 CPU 分区分配，用于缓存到达路由需竺转发到下一跳的消县。三种不同大小的缓存区适应不同大小的消四。如采消息可以放入极小缓冲区，那么使用极小的缓冲区; URE ABEL AD IZ神区但是可以放入小组神区，则使用小缓冲区; 如采消息不适用于极小或小绥补区，则EA KBHPXBet",
        "由[EXPRESSION]定 义 的 CPTS。 WY WM fE KM 件/etc/modprobe.dq/1LIustre.conf中载入模块前设置参数。如:options lnet networks=tcp0 (eth0)options mdt mds_ num cpPts=[0]34.3. LNet 参数调试本贡主要介绍 LNet 可调参数。在某些系统上可能需要使用这些参数来提高性能。34.3.1. 发送和接收缓冲区大小内核在网络上分配发送和接收信息的缓冲区。使用ksocklnd 分开设置用于发送和接收信息的绥神区的参数。1 options ksocklnd tx buffer Sizer0 rx puffer size-0如果这些参数保留默认值 《0) ，系统会目动调整发送和接收缓神区大小。几乎在所有情况下，此默认设置会产生最佳性能。如果您不是网络专家，请不要尝试调整这些参389\n——11Lustre 文件系统操作手册 译者:As大34.3.2. 硬件中断 (enable irq affinity)Poe) 25 78 Bic is EG AS) Te A AY HE A RSE GE CPU 进行处理。在某些情况下，我们希望将网络流量保持在单个 CPU 本地，以便保持处理需缓存温度并减少环境切换的影响。这特别有利于具有多个网络接口尤其是接口数量等于 CPU 数量时的 SMP 系统。司用enable irq affinity参数，请输入:options ksocklnd enable irg affinity=1在其它情况下，如果您运行在一个含单个快速接口《如 10Gb/s) 和两个以上的 CPU的SMP 平台，则蔡用该参数可能会提升性能:options ksocklnd enable irg affinity=-0此参数默认为关闭。请通过测试更改此参数时的性能情况来进行调试。(在 Lustre2.3 中引入)34.3.3. 绑定针对 CPU 分区的网络接口Lustre 2.3 及以上版本提供了高级网络接口控制。管理员可以将接口绑定到一个或多个 CPU 分区，通过 LNet 模块的选项进行指定。例如，o2ipbo(ib0) [0,1] 确保了o2ipb0的所有应妃由在CEPT0和CPT1上执行的LND 线程处理; tcpl (",
        "。相反，当大部分MO为文件写入且在短时间内不会被重新读取，或者文件仅由同一节点写入和重新读取时，无论/O是否对齐，都建议共用与缓存。91.2 设置方法将所有MDT和OST的 osd-ldiskfs.{{ service name }}.writethrough cache enable 设置为 {{ enable}}，将MGS的 osd-ldiskfs.{{ filesystem.fsname }}-*.writethrough cache_enable 设置为{{ enable}} 。92. readcache max filesize: 设置0SSs在缓存中保留的文件的最大大小92.1 简介本参数用来设置0SS在缓存中保留的文件的最大大小。该参数控制读缓存和写缓存试图保留在内存中的文件的最大大小。大于 readcache max filesize 的对象，无论进行读取或与入，无论是否设置了 writethrough cache enable read cache enable, #RARFEBEE中。设置该参数对于下面这种工作负载非常有用: 相对较小的文件 〈比如工作局动文件、可执行文件、日志文件等) 被许多客户端重复访问，而大文件通常只被读或写一次。不把大文件放入缓存，就意味着更多较小的对象有更大概率能在缓存中保留更长的时间。当设置 readcache max filesize AY, 输入值可以用字节为单位， 也可以使用后缀来表示其他二进制单位， 如K(FED) 、M KF) 、G (〈王兆字节) 、T (AFD) RP (FAICED) 。如需茶用此限制，请将此参数设置为 -1 。92.2 设置方法将所有MDT和OST的 osd-ldiskfs.{{ service name }}.readcache max filesize 设置为{{ max }};3将MGS的 osd-ldiskfs.{{ filesystem.fsname }}-*.readcache max filesize 设置为{{ max }}.作者: 李希 更新时间: 2023年6月7日\nLustre 可调参数全解93. sync journal: 设置是否同步提交文件系统日志93.1 简介本参数用来设置是否同步提交文件系统日志"
    ]
}