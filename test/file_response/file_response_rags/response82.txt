{
    "query": " Jobstats作业I/O统计功能，如何通过参数调整其自动清理策略？实际应用中为什么需要调整？",
    "summaries": [
        "Lustre 文件系统的 Jobstats 功能用于跟踪和统计作业操作。客户端通过环境变量获取唯一的 JobID，并将其发送至服务端进行统计。用户可通过配置 `jobid_var` 指定使用哪个环境变量，如 SLURM_JOB_ID 或 procname_uid。Lustre 支持自定义 JobID 格式，包含进程名、UID、主机名等信息。Jobstats 默认关闭，可通过命令启用或禁用。统计信息存储在 MDT 上，可通过 `lctl get_param` 查看。不同作业调度器对应不同的环境变量，用户可根据需要配置。",
        "该文本主要介绍了Lustre文件系统的作业统计（Jobstats）功能及其相关操作，包括如何查看、重置和配置自动清理时间间隔。同时提到了Lustre监控工具（LMT）、CollectL以及其他监控工具的使用方法和相关资源链接。此外，还简要说明了通过标签挂载Lustre文件系统的方法。",
        "Lustre 文件系统提供了多种工具用于监控 I/O 活动，包括 `brw_stats` 和 `rpc_stats`。`rpc_stats` 文件记录了客户端 RPC 的直方图数据，可用于分析 I/O 请求的分布情况。通过写入该文件可清除数据。统计信息包括读写 RPC 数量、挂起页面数等，帮助评估系统性能。此外，`stats` 文件记录了客户端在 VFS 接口上的操作统计信息，有助于监控系统活动。这些工具可帮助识别性能瓶颈并优化 I/O 流。"
    ],
    "contents": [
        "的目动清理功能，则所有统计信息将永久保存在内存中，这可能会导致最终服务锅上的所有内存都被占用。在这种情况下，任何监控工具都应该在处理各个工作统计数据时明确相关清理设置，如上所示。12.3. Lustre 监控工具 (LMT)Lustre 监控工具 (LMT) 是一个基于 Python 的分布式系统，可在一个或多个 Lustre文件系统上的服务硕端节氮 CMDS, OSS 和门户路由种) 上提供活动的顶层视图。但它不文持监视客户端。有关 LMT 的设置程序以及更多信息，请参阅:https://github.com/chaos/Imt/wiki121\n1Lustre 文件系统操作手册 译者:这ayLMT WIA, Ha Sb:Imt-discuss@googlegroups.com12.4. CollectLCollectL 225 — A] HAF i 4 Lustre 文件系统的工具。您可以在具有MDS，OST 和客户端组合的 Lustre 系统上运行 CollectL。它所收集的数据可以连续写入记录，并在稍后显示，或转换成适合绘图的格式。AK CollectL 的更多信息，请参阅 :http://collectl.sourceforge.net针对 Lustre 的相关文档，请参阅:http://collectl.sourceforge.net/Tutorial-Lustre.html12.5, 其他监控选项更多可公开获得的标准工具如下:。 11top -集成了批量调度程序的 Lustre 负载监视需。https:/github.comyjhammondy/Iltop。 tacc_stats -能够探析 Lustre Fe URI A EL SAY SCT ties OPHas» FMM LE. https://github.com/jhammond/tacc_ stats。 xltop -集成了批量调度程序的连续性 Lustre 监视器 https://github.com/jhammond/xItop您也可以自行编写一个简单的监控解雇方案，用于碍看分析 ipconfig 的各种报告和Lustre 软件生成的 procfs 文件。第十三章 Lustre 操作详解13.1. 通过标签挂载Lustre 文件系统名称限于 8 个字符。Lustre 已将文件系统和目标的相关信息编码到磁盘标签中，以方便通过标签进行挂载。这使得系统管理员可随意移动磁检，而不用担心出现 SCSI 磁静重新",
        "DEO RE REAY JobID 字符串。© Ye 打印可执行名称。%g 打印组 ID© %h 打印主机名。o%j 从由参数 jobid_var 命名的进程环境变量中打印出 JobID。。%p 打印数值的进程 ID。%u 打印用户 ID(由 Lustre2.13 引 A) 在 Lustre 2.13 及以上的版本中，可以通过设置jobiq_ this session参数来设置每个会话的 JobID。该 JobID 将被这个登录会话中局动鸭所有进程继承，但每个登录会话可以有不同的 JobID。所有客户嚣上的jobid_var 设置不必相同。可在由SLURM 管理的所有客户端上使用 SLURM JOB _ ID，而在未由SLURM 管理的客户端上使用 procname uid，如交互式登录节点。在单个节点上不可能有不同的 jobid_var 设置，因为多个作业调度程序在一个客户端上不可能被同时激活。但对于每个进程环境，JobID 是本地变量，可以一次在单个客户端上激活具有不同 JobID 的多个作业。12.2.2 启用/禁用 JobstatsJobstats 在默认下是禁用的。jobstats 的当前状态可以通过客户端上的lct1get_param jobid var命令来查看:$ lctl get param jobid var2 jobid_var=disable1在testfs 文件系统上局用 jobstats ，配置为SLURM :#2 lctl conf param testfs.sys.jobid_ var = SLURM JOB ID用于启用或禁用 jobstats 的1ct1 conf param命令应以root 身份在 MGS 上运行。此更改具有持续性，并且会目动传播到 MDS, OSS 和客户问世扣 〈包括每次挂载的新2 shin)如须在客户端上临时司用 jobstats ，或在和点子集上使用不同的jobid_var〈如使用不同作业调度程序的远程集群节点，以及不使用作业调度程序的交互式登录氮) ，请在文件系统挂载后，直接在客户端节扣上执行1ct1 set_param命令。例如，在登录节点上局用 procname uid 合成 JobID:1#117\nLustre 文件系统操作手册 译者:这ay2 lctl",
        "可用组块 (chunk)39.3. Lustre 文件系统 IO 监控有许多系统实用程序能够在 Lustre 文件系统中收集 VO 活动相关数据。通前，所收集的数据摘述了。Lustre 文件系统外部的数据传输速率和输入输出吞吐量，例如网络请求或执行的磁盘 IO 操作”Lustre 文件系统内部数据的行吐量或传输速率的数据，例如锁或分配情况注意480\n12345678910—1121314151617181920212223Lustre 文件系统操作手册 译者:强烈建议您完成 Lustre 文件系统的基准测试，以确定硬件、网络和系统工作负载的IE AY IO 活动。通过基准数据，您可以轻松地判断系统性能何时可能会降低。以下是两个特别有用的基准测试的统计数据:。 brw_stats 一措述对 OST 的IO 请求有关数据的直方图。更多详细信息请参见本章第 3.5 节\"OST 块 IO 流监控\"。。 rpc_stats --摘述客户端RPC 有关数据的直方图。更多详细信息请参见本章3.1 73\" 客户端RPC 流监控\"。泪39.3.1. 客户端RPC FRA文件包含了显示目上次清除此文件以来进行的远程过程调用 〈RPC) 信息的直方图数据。将任何值写入rpc_stats 文件将清除直方图数据。示例:# lctl get Param osc.testfs-OST0000-osc-fff£810058d2£800.rpc_ statssnapshot time: 1372786692 .389858 (secs.usecs)read RPCs in flight: 0write RPCs in flight: 1dio read RPCs in flight: 0dio write RPCs in flight: 0pending write pages: 256pending read pages: 0read writepages per rpc rpcs % cum % tpPcS % cum %1: 0 0 0 0 0 02 : 0 0 0 1 0 04: 0 0 0 0 0 08 : 0 0 0 0 0 016: 0 0 0 0 0 032 : 0 0 0 2 0 064: 0 0 0 2 0 0128 : 0 0 0",
        "_ rpcs in flight.dio read RPCs in flight 一已发起但尚未完成的readRPCs 的直接IO (对应于阻塞 TO)。dio write RPCs in flight 一已发起但尚未完成的 write RPCs 的直接IO(对应于阻塞 IO)。pending write pages — OSC 上IO 队列中挂起的写页面数。pending read pages — OSC E J/O BLS PFE AY BEATA.下面列出了上表中统计数据各条目的含义，各行显示了读取或写入次数 (ios)、占总读取或写入的相对百分比〈%) DRA IRAN RPA ot EE (cum%) 。482\n——Lustre 文件系统操作于册 译者:这ayA 说明pages per RPC ”按照 RPC PA MBN AAA RPC 读取和写入。例如，单页 RPC 的数据将显示在0 :行。RPCs in flight 显示发送RPC 时挂起的RPC 数。第一个RPC 发送后，0 :行将递增。如果在另一个RPC 挂起时发送第一个RPC，则1 :行将递增。依此类推。offset RPC 读取或写入对象的第一页的页面索引。分析:此表提供了一种将 RPC 流的并发性可视化的方法。在理想情况下，您会看到很多值聚集在max rpcs_ in flight值周围， 入。ARP it VO RPC 流优化的相关信息，请参见本章第 4.1 节\" 客户端IJO RPC 流的调试\"。39.3.2. 客户端活动监控stats文件负责维护在 Lustre 文件系统的 VFS 接口上的客户端的典型操作期间毗积的统计信息。文件中仅显示非零参数。默认司用客户端统计信息功能。注意所有挂载文件系统的统计信息可通过输入以下命令得到:lctl get param llite.*.stats示例:client# lctl get Param llite.*.stats2 snapshot _time 1308343279.169704 secs.usecs3 dirty pages hits 14819716 samples [regs]4 dirty pages misses 81473472 samples [regs]5 read bytes 36502963 samples [",
        "请在文件系统挂载后，直接在客户端节扣上执行1ct1 set_param命令。例如，在登录节点上局用 procname uid 合成 JobID:1#117\nLustre 文件系统操作手册 译者:这ay2 lctl set param jobid_ var = procname_uidlctl set_paramWJiX AEIKATEN, WE MGS 上设置全局 jobid_var ays)载文件系统，该设置将被重置。下表显示了由各种作业调度程序设置的环境变量。将 jobid_var 设置为相应的作业调度程序值以完成每个作业的统计信息收集。Job Scheduler Environment VariableSimple Linux Utility for Resource Management (SLURM) SLURM JOB IDSun Grid Engine (SGE) JOB IDLoad Sharing Facility (LSF) LSB JOBIDLoadleveler LOADL STEP IDPortable Batch Scheduler (PBS)/MAUI PBS JOBIDCray Application Level Placement Scheduler (ALPS) ALPS APP IDjobid var 有两个特殊值: disable 和 procname uid。要禁用 jobstats，请将 jobid var指定为 disable:1#2 lctl conf param testfs.sys.jobid_var=disableHER BET ERE PA PTR elect OR Pilist, SSR CURESRO) 上没有使用作业调度程序) ，请将 jobid_var 指定为 procname_uid:1#2 lctl conf param testfs.sys.jobid_var=procname_uid12.2.3 查看 JobstatsMDTs 采集元数据操作的统计信和上 并通过 1lctl get_parammdt.*.job_stats 命令对所有文件系统和任务进行评佑。例如，在客户端上运行jopid_ var=procname uidi:—# Ictl get param mdt.*.job stats2 job stats:3 - job_id: bash. 04 snapshot time: 13520849925 open: { samples: 2, unit: reqs }118\n10121314151617181920212223242526272829303132333435363738Lustre 文件系统操作手册这ayclose:mknod:link:unlink:mkdir:rmdir:rename:=getattr:=setattr:=getxattr:setxattr:statfs:sync:samedir rename:crossdir rename:job id:snapshot time",
        "OST0000.job stats=3 job stats:4 - job id: mythcommflag. 05 snapshot time: 14297149226 read: { samples: 974, unit: bytes, min: 4096, max: 1048576, sum:91530035 }7 write: { samples: O, unit: bytes, min: O, max: O, sum:0 }8 setattr: { samples: O, unit: regs }9 punch: { samples: O, unit: regs }10 sync: { samples: O, unit: regs }11 obdfilter.myth-OST0001.job stats=12 job stats:13 - job _id: mythbackend. 014 snapshot time: 142971527015 read: { samples: O, unit: bytes, min: O, max: O, sum:0 }16 write: { samples: 1, unit: bytes, min: 96899, max: 96899, sum:96899 }17 setattr: { samples: O, unit: regs }18 punch: { samples: 1, unit: regs }19 sync: { samples: O, unit: regs }20 obdfilter.myth-OSTO0002.job stats=job stats:21 obdfilter.myth-OSTO0003.job stats=job stats:22 obdfilter.myth-OSTO0004.job_ stats=23 job stats:24 - job id: mythfrontend. 50025 snapshot time: 142969208326 read: { samples: 9, unit: bytes, min: 16384, max: 1048576, sum:4444160 }27 ~write: { samples: O, unit: bytes, min: O, max: O, sum:0 }28 setattr: { samples: O, unit: regs }29 ~=punch: { samples:",
        "016: 0 0 0 0 0 032 : 0 0 0 2 0 064: 0 0 0 2 0 0128 : 0 0 0 5 0 0256: 850 100 100 18346 99 100read writerpcs in flight rpcs % cum &% | rpes % cum %481\n2425262728293031323334363738394041424344Lustre 文件系统操作手册这ay0 : 691 81 81 1740 9 91: 48 5 86 938 5 142: 29 3 90 1059 5 203: 17 2 92 1052. 5 264: 13 1 93 920 5 315: 12 1 95 425 2 336: 10 1 96 389 2 357: 30 3 100 11373 61 978: 0 0 100 460 2 100read writeoffset tpPcS % cum % tpPcS % cum %0 : 850 100 100 18347 99 991: 0 0 100 0 0 992: 0 0 100 0 0 994: 0 0 100 0 0 998: 0 0 100 0 0 9916: 0 0 100 1 0 9932: 0 0 100 1 0 9964: 0 0 100 3 0 99128: 0 0 100 4 0 100题头信息包括:snapshot time 一文件读取的 UNIX epoch 瞬间。read RPCs in flight — OSC 发出的在此时还未完成的 read RPCs 数。该值应该永远小于或等于max rpcs in flight.write RPCs in flight — OSC 发出的在此时还未完成的 write RPCs 数。该值应该永远小于或等于max_ rpcs in flight.dio read RPCs in flight 一已发起但尚未完成的readRPCs 的直接IO (对应于阻塞 TO)。dio write RPCs in flight 一已发起",
        "，因此饭能够与其他调度程序一起工作，也能在不使用作籽调度融的环境中，通过在 jobid_name 中存储自定义格式字符串来使用。12.2.1 Jobstats 如何工作客户端上的 Lustre jobstats 代码从用户进程的环境变量中提取唯一的 JobID ，并通过1/0 操作将此 JobID 发送到服务锋。服务硕则负责跟踩给定 JobID 的相关操作统计信息，可通过该 ID 进行索引。2 vin EA Lustre 设置jobid var，用来指定具体使用哪个环境变量来持有该进程的JobID ，任何环境变量都可以被指定。例如，当作业首次在节点上局动时，SLURM 在每个客户端上设置 SLURM JOB ID 环境变量，为其分配唯一的job ID。SLURM JOB _ID将被该进程下局动的所有子进程继承。通过将 jobid_var 设置为一个特殊值: procname_uid, Lustre 可配置生成客户端进程名称和数值 ID 合成的 JopID。通过设置jobidq_ var=procname uid, Lustre 可以配置生成客户端进程名和数字UID 合成的 JobID。在多个客户端节氮上运行相同的二进制时将生成一个统一的 JobID ，但无法区分该二进制是单个分布式进程还是多个独立进程的一部分。(由 Lustre2.8 引 A) 在 Lustre 28 及以上的版本中 可以设置jobiq_ var=nodelocal，也可以设置jopid_ name=name，该客户端季点上的所有进程都将使用这个 JobID。如果一次只在客户端上运行一个作业，这很有用，但如果一个客户端上同时运行多个作业，则应该为每个会话使用不同的 JobID。(由 Lustre2.12 引入) 在 Lustre 2.12 及以上的版本中，可以通过使用一个包含格式代码的字符串为 jobid_name指定更复杂的 JobID 值，该字符如包含对每个进程预估的116\n—Lustre 文件系统操作手册 译者:这ayREDS, DEO RE REAY JobID 字符串。© Ye 打印可执行名称。%g 打印组 ID© %h 打印主机名。o%j 从由参数 jobid_var 命名的进程环境变量",
        "bytes, min: O, max: O, sum:0 }28 setattr: { samples: O, unit: regs }29 ~=punch: { samples: O, unit: regs }30 sync: { samples: O, unit: regs }120\n31323334353637————Lustre 文件系统操作手册这ay- job id: mythbackend. 500snapshot time: 1429692129read: { samples: O, unit: bytes, min: O, max: O, sum:0 }write: { samples: 1, unit: bytes, min: 56231, max: 56231, sum:56231 }setattr: { samples: O, unit: regs }punch: { samples: 1, unit: regs }sync: { samples: O, unit: regs }12.2.4 清除 Jobstats已收集的作业统计信息可通过写入 proc file job_stats进行重置。在本地节点上清除所有作业的统计信息:# lctl set param obdfilter.*.job_ stats=clear清除设备 lustre-MDT0000 上的作业'pash.0' 相关统计信息:# lctl set Param mdt.lustreMDT0000.job_ stats=pash.012.2.5 配置自动清理 (Auto-cleanup) 时间间隔默认情况下，一个作业持续未激活状态超过 600 秒，这个作业的统计信息将被丢弃。可通过以下命令临时更改该时间值:# lctl set param *.*.job cleanup interval={max_age}或永久性更改，如将其更改为 700 Be:# lctl conf param testfs.mdt.job cleanup interval=700可将 job_cleanup_interval 设置为 0 以禁用目动清理功能。请注意，如果茶用了Jobstats 的目动清理功能，则所有统计信息将永久保存在内存中，这可能会导致最终服务锅上的所有内存都被占用。在这种情况下，任何监控工具都应该在处理各个工作统计数据时明确相关清理"
    ]
}