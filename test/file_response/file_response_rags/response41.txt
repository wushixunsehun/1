{
    "query": "如何为作业设置当作业失败、成功或完成时都发送邮件通知？",
    "summaries": [
        "文本描述了使用`yhrun -n ${nodes}`提交作业的过程，其中`nodes`实际表示进程数而非节点数。配置文件中`queue = cp2`，作业提交成功。通过修改`SchedulerSGE.py`中的代码可调试生成的临时脚本，例如注释掉删除文件的语句或添加调试输出。执行`citcoms lab257x113.cfg`后，生成并提交了包含节点数和进程数的SBATCH脚本，用于在集群上运行模拟。",
        "本文档介绍了TH-eX系统中作业提交的几种方式。对于MPI+OpenMP并行作业，用户需编写提交脚本sub.sh，例如使用14个进程和8个OpenMP线程，需2个计算节点。交互式作业使用yhrun命令提交，注意输入输出重定向以避免任务中断。文档还提供了LAMMPS、GROMACS、NAMD和WRF等应用软件的提交示例。任务取消使用yhcancel命令，遇到问题可联系技术支持。",
        "用户杜思慧分享了一个用于在ex上批量提交Abqus作业的Python程序。该脚本通过遍历以RUN_开头的文件夹，将指定的脚本复制到每个文件夹并提交作业。使用方法是将相关文件放在同一目录下并运行submit_jobs.sh脚本，实现自动化提交多个作业。"
    ],
    "contents": [
        "os.remove(filename)\n69-\n70-            exitStatus = None\n71-            if (os.WIFSIGNALED(status)):\n72-                statusStr = \"signal %d\" % os.WTERMSIG(status)\n73-            elif (os.WIFEXITED(status)):\n或者在 SchedulerSGE.py 文件中加入一行语句(第62行），打印调试信息并退出。\n[maththu4@th-hpc4-ln1 schedulers]$ grep -C 5 sys.exit SchedulerSGE.py -n\n57-            filename = tempfile.mktemp()\n58-            s = open(filename, 'w')\n59-            print >>s, script\n60-            s.close()\n61-\n62:            sys.exit(\"%s: %s: %s: %s\" % (sys.argv[0], self.command, filename, script))\n63-\n64-            cmd = [self.command, filename]\n65-            self._info.log(\"spawning: %s\" % ' '.join(cmd))\n66-            status = os.spawnvp(os.P_WAIT, cmd[0], cmd)\n67-\n进入 /fs1/home/maththu4/Xiesj/ADJ/compress/code_1目录\n执行 /fs1/home/maththu4/Xiesj/ADJ/compress/AssimDepth_CitcomS-3.0.3_regional_v6.2/bin/citcoms  lab257x113.cfg",
        "【已解决】ex上批量提交abqus的python程序\n**标签**: 无标签\n**创建时间**: 2024-09-06 16:46:21\n**更新时间**: 2024-09-06 16:46:21\n**作者**: 杜思慧\n**1.用户需求**\ncd到每个RUN*文件夹内提交作业\n[chenrong@th-ex-1n@ task5]$ 1s\nex_abq22_py-2-2.sh RUN 11 RUN 12 RUN 13 submit jobs.sh\n[chenrong@th-ex-1n0 task5]$ 目\n**2.批量提交脚本**\n#!/bin/bash\n# 源脚本文件名\nscript_file=\"ex_abq22_py-2-2.sh\"\n# 目标文件夹的前缀\nfolder_prefix=\"RUN_\"\n# 复制并提交作业\nfor folder in ${folder_prefix}*; do\nif [ -d \"$folder\" ]; then\necho \"Processing folder: $folder\"\n# 复制脚本到目标文件夹\ncp \"$script_file\" \"$folder/\"\n# 提交作业\n(cd \"$folder\" && yhbatch \"$script_file\")\nfi\ndone\n**3.用法**\n将RUN*文件夹，submit_jobs.sh及ex_abq22_py-2-2.sh放到同一目录下，执行./submit_jobs.sh\n[chenrong@th-ex-ln0 task5]$ ./submit_jobs.sh\nProcessing folder: RUN_1 1\nSubmitted batch job 3497210\nProcessing folder: RUN_ 1 2\nSubmitted batch job 3497211\nProcessing folder: RUN_1 3\nSubmitted batch job 3497212\n[chenrong@th-ex-1n0 task5]$ ff",
        "来计算，-ntomp 1 表示每个 mpi 进程局用一个 openmp 线程。> “用户根据自己的需求将相关的 gmx 处理命令写入 sub.sh 脚本即可。\n*REXESrr TH-eX 系统用户手册3.3.3.3 应用软件 NAMD 使用1) 在登陆节点命令行下加载 NAMD 所需环境变量:2) 编写任务脚本 sub.sh 如下:3.3.3.4 应用软件 WRF 使用看登陆节点命令行下加载 WRE 所需环境变量:1) 使用module help 命令可以得到 wrf 的相关信息2) 将wrf 文件夹下的run 目录拷贝到用户的目录下:3) 依据用户需求修改 namelist.input 及相关配置文件4) 编写任务脚本 sub.sh 如下:\n*e* TH-eX 系统用户手册3.4 任务取消 yhcancelyheancel 取消用户运行的任务，命令为 yncancel1 jobid. jobid 可通过先由 yhq 命令碍看。yheancel 命令强制取消任务后，slurm-jobid.out 文件中显示的信息如图 3-1所示:yhrun: Force Te job 12345678Slurmd[cnO]: *** STEP 12345678.0 CANCELLED AT 2021-11-01T12:00:00 *x**yhrun: cnQ: task 0-35:yhrun: : cni: task 36-31:yhrun: xxx: job done3-1 任务取消后显示信息34\nSBTeX ABE4 RASHHHA Pa es A B,J PASE 8 250 SE AS 77 YZ常见问题和解决方法，很难面面俱到，还请您能够谅解。如果您在系统使用过程中遇到任何问题，都可以及时与中心技术人员取得联系。中心技术人员会在收到用户问题反馈后的 24 小时工作时间内给予回复。1. 合同、资源申请使用、应用软件相关问题联系方式:邮箱: service@nscc-tj. cn电话: 022-653755612. 系统使用、作业运行相关问题联系方式:邮箱 : support@nscc-tj.cn (便件问题) / service@nscc-tj cn 〈软件问题)电话: 022-65375560重点提示: 为了",
        "/maththu4/Xiesj/ADJ/compress/code_1目录\n执行 /fs1/home/maththu4/Xiesj/ADJ/compress/AssimDepth_CitcomS-3.0.3_regional_v6.2/bin/citcoms  lab257x113.cfg\n输出如下:\n/fs1/home/maththu4/Xiesj/ADJ/compress/AssimDepth_CitcomS-3.0.3_regional_v6.2/bin/citcoms: yhbatch: /tmp/tmpy_M4M6: #!/bin/sh\n#SBATCH -J NAm\n#SBATCH -p cp2\n#SBATCH -t 4:00:00\n#SBATCH -o stdout.txt\n#SBATCH -e stderr.txt\n#SBATCH -N 50\n#SBATCH -n 1800\n/fs1/home/maththu4/Xiesj/ADJ/compress/AssimDepth_CitcomS-3.0.3_regional_v6.2/bin/pycitcoms pyre-start /fs1/home/maththu4/Xiesj/ADJ/compress/AssimDepth_CitcomS-3.0.3_regional_v6.2/python/merlin-1.6.egg:/fs1/home/maththu4/Xiesj/ADJ/compress/AssimDepth_CitcomS-3.0.3_regional_v6.2/python/Cheetah-2.0rc8-py2.5-linux-x86_64.egg:/fs1/home/maththu4/Xiesj/ADJ/compress/AssimDepth_CitcomS-3.0.3_regional_v6.2/python/pythia-0.8.1.15-py2.6.egg:/fs1/home/maththu4/Xiesj/ADJ/compress/AssimDepth_CitcomS-3.0.3_regional_v6.2:/fs1/home/maththu4/Xiesj/ADJ/compress/AssimDepth_CitcomS-3.0.3_regional_v6.2/bin:/fs1/home/maththu4/Xiesj/ADJ/compress/AssimDepth_CitcomS-3.0.3_regional_v6.2/python:/fs1/software/spack/opt/linux-rhel8-cascadelake/intel-19.1.2.254/py-pythia-0.8.1.18-7rgxwnq/lib64/python2.7/site-packages:/fs1/software/spack/opt/linux-rhel8-cascadelake/intel-19.1.2.254/py-pythia-0.8.1.18-7rgxwnq/lib/python2.7/site-packages:/fs1/software/spack/opt/linux-rhel8-cascadelake/intel-19.1.2.254/python-2.7.16-gjwgufn/lib/python27",
        "yhrun -n ${nodes}\n[CitcomS.scheduler]\ncommand = yhbatch\n[CitcomS.job]\nqueue = cp2\n重新提交，作业提交成功。注1：一般nodes表示节点数，cpus或者cores表示核数、进程数，但是这里nodes其实是进程数，具体逻辑还得分析pythia中的脚本。\n(base) [maththu4@th-hpc4-ln1 code_1]$ /fs1/home/maththu4/Xiesj/ADJ/compress/AssimDepth_CitcomS-3.0.3_regional_v6.2/bin/citcoms  lab257x113.cfg\n('self.nodes:', 50.0, 'self.cores:', 1800)\nSubmitted batch job 161492\n注2：pythia的机制是读取参数，通过计算在/tmp目录下生成一个临时脚本文件，然后用yhbatch或sbatch命令提交，然后将临时文件删除；调试过程中 如果要确认脚本生成的是否正确，可以修改pythia中删除临时文件的语句，运行后查看/tmp目录下最新的临时文件内容，来进行排除。修改的模块代码为\n/fs1/home/maththu4/Xiesj/ADJ/compress/AssimDepth_CitcomS-3.0.3_regional_v6.2/python/pythia-0.8.1.15-py2.6.egg/pyre/schedulers/SchedulerSGE.py 文件中第68行，注释掉即可：\n[maththu4@th-hpc4-ln1 schedulers]$ grep -C 5 remove SchedulerSGE.py -n\n63-\n64-            cmd = [self.command, filename]\n65-            self._info.log(\"spawning: %s\" % ' '.join(cmd))\n66-            status = os.spawnvp(os.P_WAIT, cmd[0], cmd)\n67-\n68:            os.remove(filename)\n69-\n70-            exitStatus = None\n71-            if (os",
        "不需要交互，则需使用批处理作业提交方式。3. yhrun 提交的任务，如果没有进行输入输出的重定向，在关闭登陆客户端软件时，会导致任务中断，因此如无特殊需要，在直接使用 yhrun 提交任务时，重定向输入输出，并保留相应的 log 文件，方便遇到问题时，技术人员及时解决。重定向举例如下:>为重定癌符号，2>人1 表示标准错误输出重定癌至标准输出，最后的信表示后台提区方式，这样保证了该任务在登陆客户端关闭时依然保持不中断。4. 再次提示，如无特殊需要请使用批处理作业 yhbatch 提交方式，yhbatch 提交的作业终端关闭后不会受到影响。3.3.3 应用软件作业提交举例3.3.3.1 应用软件 LAMMPS 使用1) 在登陆节点命令行下加载 LAMMPS 所需环境变量:31\n*[了te TH-eX 系统用户手册说明:从 lammps 的版本名称 lammps/24Mar22-icc19.0-mpich-x 可以看出:> 它的版本号是 24Mar22，即 2022-03-24 发布的版本。用户可以依据需求更换其他版本。> ‘EATER ana Intel 19.0.4 和 mpich-x ，相关的 module 环境已被 lammps 模块自动加载。2) 编写任务脚本 sub.sh 如下:> 第一行: 它是一个用/bin/sh 来解析的脚本文件。> FAT: -N 2 表示 2 个节点; -mn112 Ratt 112 cpu 核， Imp_ mpi 是可执行程序的名字;in.test 是输入文件名。kasatat于=pA>oy|pa+aywR3.3.3.2 应用软件 GROMACS 使用1) 在登陆节点命令行下加载 GROMACS 所需环境变量:2) 编写任务脚本 sub.sh 如下:说明:> ”第二行: 用 gmx mpi grompp 进行前期处理。> B=: 用 gmx mpi mdrun 来计算，-ntomp 1 表示每个 mpi 进程局用一个 openmp 线程。> “用户根据自己的需求将相关的 gmx 处理命令写入 sub.sh 脚本即可。\n*REXESrr",
        "方式，知用户可执行文件为aout，需使用 56 个OpenMP 多线程并行计算。编写提交脚本 sub.sh 如下:\n*REIZate TH-eX 系统用户手册提交批处理命令如下:3.3.1.3 MPI+OpenMP 并行作业如果用户的程序文持该并行方式，各用户可执行文件为aout，需使用 14 个进程并行计算，每个进程下开启 8 个 OpenMP 线程，则应使用的计算结点数为14*8/56=2. 2m Herc HAAS sub.sh 如下:加载环境变量，并提交批处理命令:注意: TH-EX 系统上的资源使用抢占式调度方式，即作业在结点上哪怕内运行了一个核的进程，其他作业也无法再分配到该结点上。特别提示:批处理作业提交模式，使用范围很广，由于手册篇幅限制，不能详述，如果您在提交批处理作业的过程中遇到了任何问题，请联系中心技术人员。3.3.2 交互式作业提交 yhrun对于交互式作业，资源分配与任务加载两步均通过 yhrun 命令进行: 当在登录 shell 中执行 yhrun 命令时，yhzrun 首先向系统提交作业请求并等待资源分配，然后在所分配的结点上加载作业任务。yhrun 运行的主要格式如下:yhrun [options] program\nNSz TH-eX 系统用户手册yhrun 包括多个选项，与 yhbatch 类似。示例:1) 在分区 ep4，使用两个结点上运行 hostname$ yhrun -N 2 -n 112 -p cp4 hostnameyhrun: job 4385 queued and waiting for resourcesyhrun: job 4385 has been allocated resourcescn4cn4cn5特别注意:1. yhrun 基本可以蔡代 mpirun，使用 1.3.2 章节推荐的系统自带的 mpi SES译的程序，完全可以使用 ynhrun 提交任务，而不需使用 mpirun.2. yhrun 为交互式作业提交方式，用户如需要和程序进行交互，则选择直接使用 yhrun 提交任务，如果不需要交互，则需使用批处理作业提交方式。3. yhrun 提交的任务，如果没有进行输入输出的重定向，在关闭登陆客户端软件时，会导致任务中断，因此如无特殊需要，在直接使用"
    ]
}