{
    "query": "如何通过命令测试多个节点间的网络连通性？",
    "summaries": [
        "文本内容为关于计算节点状态的命令行输出和操作步骤。主要信息包括：多个节点被标记为drain状态，部分节点处于正常状态；通过命令查询特定原因导致的drain节点列表，并确认其中的正常节点；清除节点的dmesg信息；检查节点间的网络连通性。",
        "Lustre 文件系统操作手册中介绍了批量测试的配置和管理命令。通过 `--distribute` 参数可以设置源节点与目标节点的分配方式，如 3:2、4:1、4:2 和 6:3 等。默认为 1:1 分配。当使用 `--distribute 1:n` 时，一个源节点与目标组中的多个节点并行通信。示例展示了如何添加客户端和服务器组，并执行批量写入测试。还介绍了 `lst list batch`、`lst run`、`lst stop` 和 `lst query` 等命令用于查看、运行、停止和查询批量测试状态。此外，`lst ping` 和 `lst stat` 命令用于检查节点状态和性能统计。",
        "文本内容涉及多个命令测试和日志记录，包括使用`yhrun`和`dhrun`命令在特定节点上运行程序，如`th_alltoall`和`th_route`，并记录执行时间。此外，还进行了Linpack测试，用于评估计算性能，结果显示在400Gflops左右为正常范围。同时提到了FT节点的测试及内存使用情况。"
    ],
    "contents": [
        "distribute 3:2 (C1,C2,C3->S1,S2), (C4,C5,C6->S3,S1)--distribute 4:1 (C1,C2,C3,C4->S1), (C5,C6->S2), (NULI->S3)—-distribute 4:2 (C1,C2,C3,C4->S1,S2), (C5, Cé->S3, S1)--distribute 6:3 (C1,C2,C3,C4,C5,C6->S1,52,S3)~-distribute 1 : 1 为默认设置， 即一个源节点 与一个 目标节 节操 NAJL 进行通信。307\nLustre 文件系统操作手册 译者:使用--qistribute 1: n (Cn为目标组的大小) 时，一个源节点与目标组的所AP RUE 井行通信。注意，如果源节点比目标节点多，则某些源节点可能共享相同的目标节点。如果目了 则排名较高的目标节点将处于空症状态。AK brw 测试的示例1 $ lst add_group clients 192.168.1.[10-17]@tcp2 $ lst add_group servers 192.168.10.[100-103]@tcp3 $ lst add batch bulkperf4 $ lst add test --batch bulkperf --loop 100 --concurrency 4 \\5 --distribute 4:2 --from clients brw WRITE size=16K在上面的例子中，一个名为 pwUpery 的批量测试将执行 16k 字节的批量写入请求。在此测试中，两组的四个客户器《〈源) 分别写入四人台服务锅《目标) ，如下所示:° 192.168.1.[10-13]将写和人 192.168.10.[100,101]。 192.168.1.[14-171]将写入192.168.10.[102,，103]list batch [name] [--test index] [--active] [--invalid][--server|client]SN EE STS RHA TE eM ilk YH",
        "17976,17996-17999, 18144-18147. 18153. 18188-18191 .18228. 18260. 18395. 18364.18967 1837218300 .18383, 183991]\n\nALLup infinite n17408-17419 17421-17444 17446-17467 17469-17475 17478-17483, 17485-17515 17517-17524 1752\n6-17531.17533-17539 \"1794121751.17573-17607.17616-17644.17646-17659.17661-17944.17946-17947.17949-17968.17970-17975.1797\n7-17995 . 18000-18143. 18148-18152. 18154-18187 .18192-18208.18211-18212 18214-18227 . 18229-18248. 18251-18252. 18256-18259. 18261-18264. 1826\n7-18268 , 18271-18288 , 18290-18292, 18294, 18296-18334 , 18336-18363, 18365-18366, 18368-18371 18373-18379. 18381-18382, 18384-18398 18400-1843\n11\n2）清除节点dmesg信息\nmn31目录：/home/test641/1903-networkmanager-1.0/loop_alltoall_\ntest，使用./zni_clean_dmesg_inband.sh，脚本后接节点列表。\nCroot@mn6 “]# cd /home/test641/1903.alltoall_test\nCroot@mn6 loop_alltoall_test]#cnL17408-17419 .17421-17444 17446-17467 .17469-17475 .17478-17483 17485-1751\n\n5.17517-17524 17526-17531 .1753:71.17573-17607 .17616-17644 . 17646-17659 17661-17944 .17946-17947 .17949-1796\n8,17970-17975 .17977-17995 , 18000-18143 . 18148-18152 . 18154-18187 . 18192-18227 . 18229-18259 , 18261-18334 , 18336-18363 . 18365-18366 . 18368-1837\n1,18373-18379 . 18381-18382 . 18384-18398 .18400-18431]\n\nCroot@mn6 loop_alltoall_test]#\n3）检查节点间的pping\nmn31目录：/home/test641/1903-networkmanager-1.0/loop_alltoall_test，使用./zni_check_pping_",
        "18015-18061 . 18063-18143 , 18148-18152 . 18154-18183 , 18192-18227 , 18229-18259 . 18261-18272 . 18274-18334 18336-18362 .1836\n5-18366 . 18368-18371 18373-18379 . 18381-18382 . 18384-18398 . 18400-18420. 18429-18431]\n执行如下命令测试：yhrun -p ALL --reservation=test -w $nodelist -D /root /root/th_alltoall 1024 500\nCroot@mn6 tools]# dhrun -p ALL|--reservation=test\n\n7-17524 ,17526-17531 17533-1753!\n\n-w_cnL17408-17419 17421-17444 17446-17467 .17469-17475 17478-17483 17485-17515 .1751\n\n17041-17555, 17557-17571 ,17573-17582 17584-17607 . 17616-17644 17646-17659 17661-17942 17953-17968 .1797\n\n0-17975 .17977-17991 18000-18013 . 18015-18061 . 18063-18143. 18148-18152 . 18154-18183 . 18192-18227 , 18229-18259 , 18261-18272 , 18274-18334 , 1833\n6-18362 . 18365-18366 .18368-18371 . 18373-18379 , 18381-18382 . 18384-18398 . 18400-18420 .18429-184311|-D /root /root/th_alltoall 1024 500\n\ntmp/log\n\nCroot@mn6 tools]# more /tmp/log\nmy_id = 0, buf_size = 16384, block_size = 8192\n\ncount» elapsed_time\ncountelapsed_time\ncountelapsed_time\ncountelapsed_time\ncountelapsed_time\ncountelapsed_time\ncountelapsed_time\ncountelapsed_time\n\ncount = 90, elapsed_time\n\ncooooooso\n\n0.000002\n+000014\n+000003\n+000002\n+000002\n+000002\n+000002\n+000002\n.000002\n\n> 7\n11）筛全部节点route",
        "= 90, elapsed_time\n\ncooooooso\n\n0.000002\n+000014\n+000003\n+000002\n+000002\n+000002\n+000002\n+000002\n.000002\n\n> 7\n11）筛全部节点route\n执行如下命令测试：yhrun -p ALL --reservation=test -w $nodelist -D /root /root/th_route\nCroot@mn6 tools]# dhrun -p ALL[--reservation=test| -wu cn[17408-17419.17421-17444.17446-17467.17469-17475.17478-17483.17485-17515.1751\n7-17524.17526-17531.17533-17539-T754T-T7555.T7557-17571.17573-17582.17584-17607.17616-17644.17646-17659.17661-17942.17953-17968.1797\n0-17975.17977-17991.18000-18013.18015-18061.18063-18143.18148-18152.18154-18183.18192-18227.18229-18259.18261-18272.18274-18334.1833\n6-18362.18365-18366.18368-18371.18373-18379.18381-18382.18384-18398.18400-18420.18429-18431]|-0_/root /root/th_route|> /tmp/log\nCroot@mn6 tools]# more /tmp/log\n\nMyRank = 0, host_name = cn17658\nMyRank = 0, host_name = cn17541\nMyRank = 0, host_name = cn17455\nMyRank = 0, host_name = cn17431\nMyRank = 0, host_name = cn17439\nMyRank = 0, host_name = cn17442\n(cn17658) MyRank:OK Routes: 1\n(cn17541) MyRank:OK Routes: 1\n\n(cn17455)MyRank=0: OK Routes: 1\n(cn17431)MyRank=0: OK Routes: 1\nMyRank = 0, host_name = cn17452\nMyRank = 0, host_name = cn18034\n12）测试linpack\nFT节点\n在mn3上操作如下：\n[root@mn3 ~]# cd /root/tools/linpack/\n[root@mn3 linpack]# ./sub.sh\nUsage:\n./sub.sh $nodelist $reservation $logdir\n[root@mn3 linpack]# ./sub.sh cn[4106-4111]",
        "cn[17920-18175]\n\nPARTITION AYAIL\n\nALLup\nALLup\n4-181751\n\nthep3up\nthep3up\n\n4-18175]\n\nTIMELIMIT\ninfinite\ninfinite\n\ninfinite\ninfinite\n\nNODES STATE\n\n13 drainx\n\n243 drain\n\n13 drainx\n243 drain\n\nNODELIST\ncnL17945 17948 .17969.17976 .17996-17999 18144-18147 .18153]\ncnL17920-17944 17946-17947 .17949-17968 . 17970-17975 .17977-17995 . 18000-18143, 18148-18152 .1815\n\ncnL17945 17948 .17969.17976 .17996-17999 18144-18147 .18153]\ncnL17920-17944 17946-17947 .17949-17968 . 17970-17975 .17977-17995 . 18000-18143, 18148-18152 .1815\n如果待筛查的节点被drain成了某个reason，如：Hold_on_0531，在管理节点先通过yhi –R | grep Hold_on_0531获取$drain_nodelist。\nCroot@mn6 “J# yhi -R | grep Hold_on_0531\nHold_on_0531root2022-05-31T10:18:11 cnl17408-18208 18211-18212, 18214-18248 18251-18252 , 18256-18264, 18267-18268 ,18271-\n18288 18290-18292 ,.18294 18296-18431]\n然后通过yhi –n $drain_nodelist –p ALL确认其中的正常开机节点列表$nodelist。\nCroot@mn6 “]# yhi -n cn[17408-18208.18211-18212.18214-18248 .18251-18252.18256-18264.18267-18268.18271-18288 .18290-18292.18294.18296-\n18431] -p ALL\n\nPARTITION ANALTIMELIMIT NODES STATE NODELIST\n\nALLinfinite48 drain® cnl17420,17445,17468,17476-17477 .17484,17516 1752517532 1754017556 .17572,17608-17615 1764\n5,17660,17945. 1794817969. 17976,17996-17999, 18144-18147. 18153. 18188-18191 .18228. 18260. 18395. 18364.18967 1837218300 .18383, 183991]\n\nALLup infinite n17408-17419 17421",
        "running5 Batch is running369\nOo101213141516171819Lustre SEA完操作手册i这ayBatch 1s runningBatch 1s runningS lst query bulkperf --all192.192.192.192.192.192.192.192.168.168.168.168.168.168.168.168..Leétcp Ri.L7@tcp Ri.LO@tcp Running.l1@tcp Running.12@tcp Running.13@tcp Running.14@tcp Running.L5@tcp RunningunningunningS lst stop bulkperfS lst query bulkperfBatch is idle32.3.4. 其他命令name |参二一—--session[--nodes NIDs]这一小节介绍 lst 命令。ping [-session] [--group name][--server] [--timeout seconds]向节点发送hello' 查询。数--group name--nodes NIDs--batch name--server—-timeout seconds RPC 超时时间。示例:说明[Al HUST AA A ACI Ping.回 指定组的 “p AIK Ping.回指定节 点发送 Ping。癌批处理的所有客户端发送 Ping。将 RPC 发送到所有服务大[--batch节点而不是客户端仅和--pbatch name 一起使用。1 # lst ping 192.168.10. [15-20]Qtcp2 192.168.1.15@tcp Active [session: liang id: 192.168.1.3@tcp]370节点 yo 该选项\n1Lustre 文件系统操作于册 译者:这aystat[--avg]192.168.1192.168.1192.168.1192.168.1192.168.1.l6@tcp Active [session: liang id: 192.168.1.3@tcp]. /atcp Active [session: liang id: 192.168.1.3@tcp].18@tcp Busy [session: Isaac id: 192.168.10.10@tcp].19@tcp Down [session: <NULL> id: LNET NID ANY]-20@tcp Down [session: <NULL> id: LNET NID ANY][--bw] [--rate] [--read] [--write] [--max] [--min]\" \" [--timeout seconds] [--delay seconds]",
        ",，103]list batch [name] [--test index] [--active] [--invalid][--server|client]SN EE STS RHA TE eM ilk YH STC EM Pe Pin AR SF ie Ik oWy数 说明中的所有测试。如果使用下列选项之一，则只列出指定的测试:active 一只列出活动的测试;invalid 一只列出无效的测试;server/client 一列出此批量测试的服务器和客户端节点。示例:1 $ lst list batchbulkperf2 $ lst list batch bulkperf3 Batch: bulkperf Tests: 1 State: Idle4 ACTIVE BUSY DOWN UNKNOWN TOTAL5 client 8000 86 server 4000 4368\n7Lustre 文件系统操作手册 译者:这ayTest 1(brw) (loop: 100, concurrency: 4)8 ACTIVE BUSY DOWN UNKNOWN TOTAL9101112131415—client 8000 8server 4000 4$ lst list batch bulkperf --server --active192.168.10.100@tcp Active192.168.10.101@tcp Active192.168.10.102@tcp Active192.168.10.103@tcp Activerun name运行此批量测试:S lst run bulkperfstop name停止此批量测试:S lst stop bulkperfquery name [--test index] [--timeout seconds] [--looploopcount] [--delay seconds] [--all]查询批量测试状态:参数 说明--test index 只碍询指定测试。测试的起始索引为 1。--timeout seconds “#4 RPC 的超时时间。默认值是 5 秒。--loop # 查询的循环次数。--delay seconds 每次查询的时间间隔。默认值是 5 秒。--al1 批处理或测试中所有节点的状态列表。示例:1 5 lst run bulkperf2S lst query bulkperf --loop 5 --delay 33 Batch 1s running4 Batch is running5 Batch is running369\nOo101213141516171819Lustre SEA完操作手册i这ayBatch 1s runningBatch 1s runningS lst query bulkperf --all192.192.192.192.192.192.192.192.168.168.168.168.168.168.168.168..Le",
        "linpack]# ./sub.sh\nUsage:\n./sub.sh $nodelist $reservation $logdir\n[root@mn3 linpack]# ./sub.sh cn[4106-4111] test 20210804_1\n[root@mn3 linpack]# yhq -u root\nJOBID PARTITIONNAMEUSER STTIMENODES NODELIST(REASON)\n113405ALLlinpackrootR0:101 cn4110\n113406ALLlinpackrootR0:101 cn4111\n113403ALLlinpackrootR0:111 cn4108\n113404ALLlinpackrootR0:111 cn4109\n113401ALLlinpackrootR0:121 cn4106\n113402ALLlinpackrootR0:121 cn4107\n[root@mn3 linpack]# cd 20210804_1\n[root@mn3 20210804_1]# ls\ncn4106.logcn4107.logcn4108.logcn4109.logcn4110.logcn4111.log\n检查结果，跑到400Gflops左右的结果是正常的。\n[root@mn3 20210804_1]# grep -B 3 WR12L2L4 ./*\n./cn4106.log-0: ================================================================================\n./cn4106.log-0: T/VNNBPQTimeGflops\n./cn4106.log-0: --------------------------------------------------------------------------------\n./cn4106.log:0: WR12L2L4109824192242197.354.0189e+02\n以下省略…\nMT节点同构核（ft核）\ndsp模块没加载，16个ft核使用内存64GB\n目录：/root/tools/linpack/ft_linpack_64GB\n提交命令./sub.sh$reservation$logdir\nCroot@mn6 ft_linpack_646B]# ./sub.sh\nUsage:\n-/sub.sh $nodelist $Sreservation $logdir\n\ncn9633 test 20220607\n进入$logdir，用“tail -f”查看输出情况。\n: Column=000000576\n\n= Colum\n: Column=000002496\n\necoooococoo\n\nIIAx-bll_oo / C eps * CII x Il_oo * II A Il_oo + Il b Il",
        "## cab 17\ncn[17408-18431]\n\nPARTITION AVAIL TIMELIMIT NODES STATE NODELIST\nALLup infinite48 drain® cnl17420,17445.17468 17476-17477 17484 17516 .17525 .17532,17540 17556 .17572..17608-17615 1764\n5,17660,17945. 1794817969. 17976,17996-17999, 18144-18147. 18153. 18188-18191 .18228. 18260. 18395. 18364. 1896718372. 18300 .18383, 183991\n\nALLup infinite [976 _drain|cnl17408-17419 17421-17444 ,17446-17467 .17469-17475 .17478-17483 .17485-17515 .17517-17524 .1752\n6-17531,17533-17539 17541-17955,71. .17573-17607 17616-17644 17646-17659, 17661-17944 17946-17947 17949-17968 17970-17975 1797\n7-17995 18000-18143 , 18148-18152, 18154-18187 18192-18227 18229-18259 18261-18334 , 18336-18363 18365-18366 18368-18371 .18373-18379 1838\n1-18382 18384-18398 18400-18431]\n\nthcp3up infinite48 drain® cn[17420.17445.17468.17476-17477.17484.17516.17525.17532.17540.17556.17572.17608-17615 .1764\n5.17660.17945.17948.17969.17976.17996-17999.18144-18147.18153 .18188-18191.18228.18260.18335.18364.18367.18372.18380.18383.183991\nthcp3up infinite976 drain cn[17408-17419.17421-17444.17446-17467.17469-17475 .17478-17483.17485-17515.17517-17524.1752\n\n6-17531.17533-17539.17541-17555.17557-17571.17573-17607.17616-17644.17646-17659.17661-17944.17946-17947.17949-17968.17970-17975 .1797\n7-17995 .18000-18143.18148-18152.18154-18187.18192-18227.18229-18259.18261-18334.18336-18363.18365-18366.1836838-18371.18373-18379.1838\n1-18382.18384-18398 .18400-18431]\n可用ccst [机框号]查看机框节点列表。\nCroot@m6 ~]# ccst 17c\n\ncn[17920-18175]\n\nPARTITION AYAIL\n\nALLup\nALLup\n4-181751\n\nthep3up\nthep3up\n\n4-18175]\n\nTIMELIMIT\ninfinite\ninfinite\n\ninfinite\ninfinite\n\nNODES STATE"
    ]
}