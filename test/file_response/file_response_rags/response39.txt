{
    "query": "使用 yhbatch 提交批处理脚本时，如何指定作业名？",
    "summaries": [
        "yhbatch 是用于向资源管理系统提交批处理脚本的命令。脚本可通过文件名指定或从标准输入读取，其中包含以 #SBATCH 开头的选项。作业提交后会分配 JobID 并进入队列等待资源。资源管理系统在满足需求后运行脚本。用户可通过 yhcontrol 修改作业属性，如开始时间、资源请求、检查点目录等。支持多种参数设置，如账户、资源类型、节点约束、CPU 绑定等，以精确控制作业执行环境。",
        "yhbatch 是用于提交批处理作业的命令，支持多种选项来控制作业的资源分配、执行方式和依赖关系。例如，--overcommit 允许每个处理器运行多个任务，-o 指定输出文件，--partition 选择资源分区，--time 设置运行时间限制，-p 指定分区，--dependency 定义作业依赖关系等。此外，还支持资源限制传递、作业重新排队、节点共享、临时磁盘空间设置等功能。环境变量也可用于设置选项，且命令行选项优先级高于环境变量。",
        "yhbatch 是一个用于提交批处理作业的命令，支持多种选项来控制作业的执行环境和资源分配。主要功能包括：指定用户环境、组权限、帮助信息、任务绑定类型（计算密集型或内存密集型）、多线程支持、立即提交作业、输入输出重定向、作业名称和ID、许可证分配、任务分布方式（块、循环、平面、任意）、邮件通知设置、内存需求等。部分选项仅在 root 权限下有效，且某些参数互斥。"
    ],
    "contents": [
        "-user-》” Kfs下二 o6 6env”, “--get-user-env=10”, “--get-user-env=10L”, “--get-user-env=S注意: 此选项仅在执行 yhbatch 的有效用户 UID W root 时有效。。 -—-gid=group如果以 root 运行 yhbatch，且使用了 --gid 选项，则以 group 的组访问权限提交YENL. group 可以是组名字或数字的组 GID.。 -h, --help显示帮助信息并退出。。 —-hint=type根据应用提示进行任务绑定:一 compute_bound选择适合计算密集型应用的设置: 使用每个 socket 上的每个 core。一 memory_bound选择适合内存密集型应用的设置: 仅使用每个 socket 上的一个 core.178\n16.4. yhbatch— [no]multithreadLA | 使用 core 上额外的 thread，这可能对通信密集型应用有益。— help显示帮助信息。-I, --immediate仅当作业所需的资源能立即被满足时才将批处理脚本提交的控制进程。如果作业需要排队等待，则不会提交批处理脚本。-i, --input=filename pattern指定批处理脚本的标准输入从“ename pattern”给出的文件读取。缺省地，批处理脚本的标准输入被重定癌为“/dev/nu11”，标准输出和标准错误被重定问到文件“slurm-%j .out”，其中鸣j 将被作业 JobID 所和荐换。文件名模式可以包含一个或多个蔡换符号，即百分号“多”后接一个字母。所文持的蔡换符号为:— %j 作业 JobID— YN 点名。因仅创建一个文件，故向 将被分给作业的第一个节点的名字蔡换，也就是运行批处理脚本的节点。-J, --job-name=jobname为作业指定名字。当查看系统中的作业时，名字将和作业 JobID iba. WAT名字是批处理脚本的文件名，或者为“sbatch”，如果脚本是从 yhbatch 的标准输入读取的。--jobid=jobid使用指定的 JobID 分配资源。注意: 仅对 root HP",
        "Largs...]sipsyhbatch 问资源管理系统提交一个批处理脚本。批处理脚本可以通过命令行以文件名形式给出，或者，如果没有指定文件名，yhbatch 将从标准输入读取一个脚本。批处理脚本中可以在可执行命令之前包含以“#SBATCH”开头的选项。yhbatch 将在脚本成功提交到资源管理系统控制进程并分配作业 JobID 后立即退出。批处理脚本可能不会被立刻分配资源，而是在排队作业队列中等待，知道资源需求得到满足。当批处理脚本被分配资源后，资源管理系统将在所分配的第一个节点上运行批处理脚e -A, --account=accountEVE ML (5 FW A eA EE IK SE. account MERE. Wk Ss AS TEE业提交后可以通过 yhcontrol 命令更改。。 --acctg-freq=seconds设置作业记账采样周期。用于乾凑配置文件中的 JobAcctGatherFrequency 参数。设置为 0 将芭止周期性的作业记账采样，仅在作业终止时获取记账数据《〈从而减少资源管理系统进程对作业的干扰)。。 -B, --extra-node-info=sockets|: cores| : threads]|请求在系统中分配特定资源，详细指定计算资源的数目和类型: 每节点的 socket(或物理处理器) 数， socket 的 core 数，以及每 core HY thread 数。所请求的资源总数为所有项之积。类似于 --nodes，每个值可以是一个数字或者一个范围《〈即173\n资源管理系统手册min-max). HEARS OF) 作为占位符，表示使用该类型的所有资源。也可以使用单独选项指定每一级别的需求:— --sockets-per-node=sockets一 --cores-per-socket=cores一 --threads-per-core=threads当使用 task/affinity 插件时，以此方式指定分配资源将导致资源管理系统使用CPU 杀和掩码以保证请求被满足。注意: 这些选项的文持与配置相关。必须使用task/affinity 插件。另外必须使用 select/linear 或 select/cons_res 插件。如果使用select/cons_res 插件，它必须使用参数 CR_Core, CR_Core_Memory, CR_ Socket",
        "node.e --tmp=VMB最少临时磁盘空间。。 -u, --usage显式简短帮助信息并退出。e -—-uid=userDAF user 的号份提交和运行作业，而不是执行 yhbatch 的用户。执行 yhbatch的用户号份将用于检查目标分区的访问权限。例如，root 用户可以使用此选项在RootOnly 分区中以普通用户寻份运行作业。wser 可以是用户名或数值用户 UID。e -V, --version显示版本信息并退出。e -v, --verbose增加 yhbatch MIHAILA. AMS Sv. SAUL F OLEACEAEe -w, --nodelist=node name listte OR Ta EAT A EAE BEY VA AG SP BE 2% BEB] CT cn[1-5,7,..)) Fax o MUZE FEY FEAST A AE CAR «BREA A 4 II AS BARE家资源管理系统重新排序。e --wckey=wckey作业使用的 wekey. AACE CPE TrackWCKey=no (ik), UCT KAR II.e --wrap=command stringyhbatch 将把指定的命令串包闭成一个简单的“sh”shell 脚本，并把该脚本提交到控制进程。当使用 --wrap 时，不能在命令行指定脚本名字和参数。e -x, --exclude=node name list不要将指定的节点分配给作业。186\n16.4. yhbatch输入环境变量在司动时，yhbatch 将读取并处理如下环境变量中设置的选项。请注意，环境变量中的选项将轿盖批处理脚本中的选项，而命令行选项将履盖环境变量中的选项。。 SBATCH ACCOUNT: 同 -A, --account。 SBATCH_ACCTG_FREQ: 同 --acctg-freq。 SLURM_CHECKPOINT: 同 --checkpoint。 SLURM_CHECKPOINT_DIR: [A] --checkpoint-dir。 SBATCH_CONN_TYPE: [A] --conn-type。 SBATCH_CPU_BIND: 同 --cpu_bind。 SBATCH DEBUG: 同 -v, --verbose。 SBATCH DISTRIBUTION: 同 -m,",
        "如果任务数不超过布点数目，这将是缺省行为。— plane任务在指定大小的块中分布。选项 options 中包括任务块大小的参数，其后跟一个可选的规范，指定在任务世中和任务块间的分布模式。详细内容请参见第5.1.6节。— arbitrary“arbitrary〈任意)”分布是指根据环境变量 ~SLURM_HOSTFILE 指定的文件里的顺序分布进程。如果给出了此环境变量，则将禾盖其它指定的分布方法。如果未给出，则缺省为块分布。。 -—-mail-type=type当发生特定事件时通过邮件通知用户。有效的 如pe 值包括 BEGIN 〈作业开始执行)，END(〈作业结束),，FAIL (VELA), ALL (所有状态变化)。要通知的用户由 --mail-user 指定。。 --mail-user=user接收邮件通知的用户。缺省为提交作业的用户。e --mem=V/B5180\n16.4. yhbatch每个节点上需要的物理内存 MB 数。缺省值是 DefMemPerNode ,最大值是 MaxMemPerNode.如果进行了配置，这两个参数可以通过 yhcontrol show config 命令查看。此选项通常在将整个节点分配到作业的情况下使用〈S$electType=select/linear)。人参见--mem-per-cpu。--mem 和 --mem-per-cpu 是互斥的。--mem-per-cpu=MB对分配的每个 CPU 所需要的物理内存 MB 数。缺省值是 DefMemPerCPU，最大值是MaxMemPerCPU。 如果进行了配置, 这两个参数可以通过 yhcontrol show config 命令得看。此选项通常在将每个处理器分配到作业的情况下使用〈SelectType=select/cons res). J, --mem. --mem 和 --mem-per-cpu 是互斥的。--mem_bind=|{quiet , verbose},|type绑定任务到内存。仅在使用 task/affinity 插件且 NUMA 内存函数可用时才使用。注意: 在某些体系结构上 CPU 和内存的绑定分辨率不同。例如，CPTU 绑定在处理恬内的核的级别上进行，但是内存绑定在节点",
        "。另外必须使用 select/linear 或 select/cons_res 插件。如果使用select/cons_res 插件，它必须使用参数 CR_Core, CR_Core_Memory, CR_ Socket或 CR_，Socket_ Memory。。 --begin=time正常提交批处理脚本到资源管理系统控制进程，但是通知控制进程推迟为作业分配资源，直到指定的时间。time 可以是 HH:MM[:SS] 格式，以在一天中的特定时间运行作业《如果该时间已经过去, 则认为是下一天的时间)。可以指定 midnight, noon 或 teatime (4:00PM)，也可以使用后绥 AM 或 PM 表示早上或下午。可以通过 MMDDYY 或 MM/DD/YY 或 YYYY-MM-DD 指定作业运行的日期。组合日期和时间则使用 YYYY-MM-DD[THH[:MM[:SS]]] 的格式。可以指定如 nowt+counttime-units 格式的时间，其中 time-units 可以是seconds 〈人缺省)，minutes，hours，days，或 weeks。可以使用关键字 today 和tomorrow 分别表示在当天或明天运行作业。在作业提交后可通过 yhcontrol 命令修改此时间值。例如:一 ~-begin=16:00一 --begin=now+ttlhour— --begin=now+60 〈默认为秒)一 --begin=2010-01-20T12:34:00JER:— 尽管时间格式中允许给出“秒数”字段，但是资源管理系统的调度周期精度不能保证作业在精确的时间开始运行。作业很可能在指定时间之后的下一个调度周期开始。确切的调度周期与调度器有关《〈如，默认的 sched/builtin 是 60 秒)。如条没有指定时间《〈只有日期)，缺省将是 00:00:00.174\n16.4. yhbatch— 如果指定日期时没有年份 如，MM/DD)，则使用当前年份，除非其与指定日期和时间的组合已经过去，在该情况下将使用下一年的年份。--checkpoint=timetHE VELA A. RANA TELE Ro A ASTRA EU “",
        "使用当前年份，除非其与指定日期和时间的组合已经过去，在该情况下将使用下一年的年份。--checkpoint=timetHE VELA A. RANA TELE Ro A ASTRA EU “minutes”,“minutes:seconds”, “hours:minutes:seconds”, “days-hours”, “ days-hours:minutes”WR “ days-hours:minutes:seconds” .--checkpoint-dir=directory指定作业的检查点映象文件人存储目录。缺省为作业的当前工作目录。--Comment=St77720任意注释。-C,--constraint=listfa TE AIR He. AUR eS A oP A 2 RE PE. list FT DA ea “&” CD和/或“1”(或) 分隅的多个特性。例如，--constraint=\"opterongvideo'\" 或 --constraint=\"fast|faster'。在第一个例子中, 同时具有特性“opteron”和“video”的节点才会被分配。在没有节点拥有这两个特性时，没有办法指定需要一个节点具有“opteron”特性，而另一个节点具有“video”特性。如果在所有分配俄的节点上仅需要一组特性中的一个, 则使用“或”操作符, 并将选项写在方括号中。 例如,“--constraint= [rack1|rack21rack31rack4]”可用于指定所有分配的节点必须位于一个机柜内，但是四个机柜中的任何一个均可。还可以指定所请求的具有某些特性的节点的个数，这通过在特性名字后跟一个星号和计数进行。例如,“yhbatch --nodes=16 --constraint=graphicrk4 .…”表示作业需要 16 个节点，至少其中 4 个节点必须拥有特性“graphics”。有具有节点数的约束只能用“与”操作符连接。如果没有节点具有请求的特性，则作业将被控制进行拒绝。—-contiguous请求分配连续节点。topology/tree 和 topology/3d_torus 插件不使用，因为这两者可以修改节点序。--cpu_bind=|{quiet,verbose ,|怒pe绑定任务到CPU。仅在使用 tasky/affinity 插件时有效。配置参数 TaskPluginParam可以覆盖此",
        ", --overcommit183\n资源管理系统手册WEE AUR. AY, yhbatch 为每个处理器分配一个任务。指定 --overcommit时，将显式允许每个处理器上运行多个任务。然而，每个节点上运行的任务数不超过 MAX TASKS PER NODE 个任务。。 -o, --output=filename pattern将批处理脚本的标准输出写到 filename pattern 指定的文件中。文件名规范清参见--input 选项。。 --open-mode=append|truncate使用附加模式或截断模式打开标准输出和标准错误文件。缺省值由系统配置文件中的 JobFileAppend 参数指定。e -P, --denpendency=dependency_list延迟运行作业，直到指定的依赖关系被满足。dependency_1stf 形如 type:jobid|:jobid|[tpe:7obid[:7opid]j。多个作业可以共享使用相同的依赖关系，这些作业也可以属于不同的用户。作业提交后可以通过 yhcontrol 命令修改依赖关系。一 after: jobid|:jobid...]此作业可在指定的作业开始执行后运行。一 afterany: jobid|:jobid...]此作业可在指定的作业终止后运行。一 afternotok: jobid|:jobid...]此作业可在指定的作业失败〈非 0 退出码，节点失效，超时等) 后运行。一 afternotok: jobid|:jobid...]此作业可在指定的作业成功〈运行结束，退出码为 0) 后运行。— singleton此作业在之前运行的具有相同名字和用户的作业终止后运行。e。 -p, --partition=partition name在指定分区中分配资源。如未指定，则由控制进程在系统默认分区中分配资源。。 --propagate[=rlimits]将那些可修改〈软) 资源限制传递到计算贡点并应用到作业任务进程。如未指定riizp2its，则传递所有资源限制。资源管理系统文持如下资源名字《尽管有些系统不文持茶些选项):— ALL: 所有资源限制184\n16.4. yhbatch— AS: 进程的最大地址空间— CORE: core 文件大小— CPU: 最多 CPU 时间— DATA: 进程的数据段大小— FSIZE: 所创建",
        "16.4. yhbatch— AS: 进程的最大地址空间— CORE: core 文件大小— CPU: 最多 CPU 时间— DATA: 进程的数据段大小— FSIZE: 所创建文件的大小— MEMLOCK: 锁定内存的大小— NOFILE: 打开文件数目— NPROC: 可用进程数目— RSS: 最大物理内存— STACK: 栈大小-Q, --quiet不要输出一般信息。错误信息仍将显示。--qos=qos作业的服务质量。QOS 可以在记账数据库中为每个用户/系统/帐号 association 定义。当系统配置参数 AccountingStorageEnforce 包含“qos”时，用户将仅能使用为其 association 定义的 QOS。—-requeue在节点失效时将作业重新排队。当作业被重新排队后，批处理脚本从头开始执行。参见 —-no-requeue 选项。配置参数 JobRequeue 控制系统上的缺少行为。--reservation=name从指定的预约中为作业分配资源。-s, --share作业可以与其它运行作业共享节点。这可以导致更早分配资源，以及更高的系统利用率，但是由于竞争节点内的资源，应用的性能可能会下降。缺省的共享/互斥行为与系统配置相关。-t, --time=time作业运行的总时间限制。如果请求的时间限制超过分区的时间限制，作业将保持在排队状态。缺省的作业运行时间限制是分区的时间限制。当到达运行时间限制时，作业的所有作业步的所有任务都将被发送 SIGTERM 和 SIGKILL 信号。两个信号之185\n资源管理系统手册间的时间间隔有系统配置参数 KillWait 指定。时间限制设置为 0 表示没有时间限制。可用的时间格式包括“7pzpautes” “minutes:seconds”, “hours:minutes:seconds”,“days-hours”, “days-hours:minutes”, VU “ days-hours:minutes:seconds”。 —-tasks-per-node=n[a] --ntasks-per-node.e --tmp=VMB最少临时磁盘空间。。 -u, --usage显式简短帮助信息并退出。e -—-uid=userDAF user 的号份提交和运行作业，而不是执行",
        ". WAT名字是批处理脚本的文件名，或者为“sbatch”，如果脚本是从 yhbatch 的标准输入读取的。--jobid=jobid使用指定的 JobID 分配资源。注意: 仅对 root HP AR.-K, --no-kill4d BZ EAT A RIN SE SHREVE. FP i 6 A ET A RN EST Afite SARA ARSON, J27T EIA REISE GBA MPI 作业) 几乎育定会发生致命错误;但是使用 --no-kill 时，分配给作业的节点不会被回收，从而用户可以在剩余的已分配贡点上加载新的作业步。缺省地，在分配给作业的节点失效时，资源管理系统将终止整个作业并回收节点。-L, --license=license179\n资源管理系统手册指定要分配给作业的许可证〈或其他在系统所有节点上都可用的资源)。许可证名字可以后跟星号和数目《〈缺省数目为 1)。多个许可证名字应用逗号分隔，如“--license=foo*4, bar”.e -m, --distribution=<block|cyclic|arbitrary|plane=options>指定远程任务的分布方式。对于 yhbatch 而言，这将会设置适当的环境变量，以供后续的 yhrun 使用。— block“block” CR) 分布方法将按节点上的 CPU 的顺序分配进程。如果进程数目超过所分配的节点数目，则将使用所有的节点。例如，考虑分配了三个节点，个节点有两个 CPU。一个四进程的作业步任务分布请求将导致进程0和1在第一个节点上，进程 2 在第二个节点上，进程 3 在第三个节点上。块分布在任务数超过节点数的情况下是缺省行为。— cyclic“cyclic” NAA) 分布方法在所分配的节点上以轮转方式分布进程。亦即，进程0 将运行在第一个节点上，进程 1 运行在第二个节点上，等等。如果任务数不超过布点数目，这将是缺省行为。— plane任务在指定大小的块中分布。选项 options 中包括任务块大小的参数，其后跟一个可选的规范，指定在任务世中和"
    ]
}