{
    "query": "如何配置HTCondor并启动HTCondor服务？",
    "summaries": [
        "HTCondor 是一个用于管理分布式计算资源的软件系统。本文档介绍了 HTCondor 的安装和配置方法，适用于 Ubuntu ARM 系统。首先通过 wget 下载源码并解压，使用 build-on-linux.sh 脚本编译生成 deb 包进行安装。配置文件中需设置 CONDOR_HOST 和权限参数，启动服务后可查看相关进程。根据需求启动不同服务组合，如 manager、submit 或 execute 节点。提交作业时需编写 .sub 文件，并使用 condor_submit 提交任务，支持普通用户提交作业及并行任务配置。",
        "该文本介绍了如何配置Condor以使用专用调度器，包括将DedicatedScheduler属性添加到机器的classad中，重启Condor服务，并编写提交脚本。提交脚本使用parallel宇宙，指定执行睡眠命令，设置4个机器并记录日志。",
        "TH-ES 开启代理的步骤为：执行 `/THL5/software/env/proxy/copy-proxy.sh`，然后运行 `source ~/.bashrc`，最后加载 `module add proxy/1.0`。此方法可有效配置代理环境。"
    ],
    "contents": [
        "jobs need processes\n- condor_master\n- condor_startd\n提交作业 condor 仅仅允许普通用户提交作业\nexample\nvim test.sub\nexecutable = myexe # 可执行文件\nlog = myexe.log # condor 产生的日志\ninput = inputfile # 这个作业的标准输入\noutput = outputfile # 这个作业的标准输出\nqueue\n# 提交作业\ncondor_submit test.sub\n对于需要提交parallel类型的作业\n1. 对计算节点新增配置文件\n[root@ln25%TH3 tmp]# cat /etc/condor/config.d/condor_config.local.dedicated.resource\n######################################################################\n##\n##  condor_config.local.dedicated.resource\n##\n##  This is the default local configuration file for any resources\n##  that are going to be configured as dedicated resources in your\n##  Condor pool.  If you are going to use Condor's dedicated MPI\n##  scheduling, you must configure some of your machines as dedicated\n##  resources, using the settings in this file.\n##\n##  PLEASE READ the discussion on \"Configuring Condor for Dedicated\n##  Scheduling\" in the \"Setting up Condor for Special Environments\"\n##  section of the Condor Manual for more details.\n##\n##  You should copy this file to the appropriate location and\n##  customize it for your needs.  The file is divided into three main\n##  parts: settings you MUST customize, settings regarding the policy\n##  of running jobs on your dedicated resources (you must select a\n##  policy and uncomment the corresponding expressions), and settings\n##  you should leave alone, but",
        "【已解决】TH-ES 开代理 proxy\n**标签**: TH-ES proxy\n**创建时间**: 2023-08-29 14:55:20\n**更新时间**: 2023-08-29 14:55:20\n**作者**: 郑刚\n**问题**：TH-ES 开代理 proxy\nTH-ES 开代理 proxy\n执行 `/THL5/software/env/proxy/copy-proxy.sh`\n再执行 `source ~/.bashrc`\n再加载 `module add proxy/1.0`",
        "63257       1  0 Aug11 ?        00:00:02 /usr/sbin/condor_master -f\nroot       63310   63257  0 Aug11 ?        00:01:29 condor_procd -A /var/run/condor/procd_pipe -L /var/log/condor/ProcLog -R 1000000 -S 60 -C 131\ncondor     63311   63257  0 Aug11 ?        00:00:02 condor_shared_port -f\ncondor     63312   63257  0 Aug11 ?        00:00:32 condor_collector -f\ncondor     63316   63257  0 Aug11 ?        00:01:03 condor_negotiator -f\ncondor     63317   63257  0 Aug11 ?        00:00:03 condor_schedd -f\ncondor     63318   63257  0 Aug11 ?        00:00:41 condor_startd -f\n服务说明\nstart condor taht manage|submit|execute on a node need processes\n- condor_master\n- condor_collector\n- condor_negotiator\n- condor_startd\n- condor_schedd\nstart condor that only manager on a node need processes\n- condor_master\n- condor_collector\n- condor_negotiator\nstart condor that only submit jobs need processes\n- condor_master\n- condor_schedd\nstart condor that only executes jobs need processes\n- condor_master\n- condor_startd\n提交作业 condor 仅仅允许普通用户提交作业\nexample\nvim test.sub\nexecutable = myexe # 可执行文件\nlog",
        "HTCondor 使用说明\n下载源码\nwget http://parrot.cs.wisc.edu//symlink/20200806145602/8/8.8/8.8.9/788ba1a65b3ed1e41ccef82b9eac1e74/condor_src-8.8.9-all-all.tar.gz\n# 目前在ln25 /home/hanhao 目录下面有完整数据\n安装（针对于ubuntu arm）\ntar -zxhf condor*.tar.gz\ncd condor*\napt install devscripts\n# 执行 build-on-linux.sh，会提示需要安装的依赖\n./build-on-linux.sh\n# 生成deb包，安装即可\ndpkg -i  htcondor_8.8.9-1_arm64.deb libclassad10_8.8.9-1_arm64.deb condor-dev_8.8.9-1_all.deb\n使用（将以ln25为例子）\n配置文件修改\n> 此处ln25 将作为manager node 、submit node 、 compute node 并存\nvim /etc/condor/condor_config\n## 以下为新增内容\nCONDOR_HOST = 25.8.101.25 # manager node ip\nDAEMON_LIST = COLLECTOR MASTER NEGOTIATOR SCHEDD STARTD\nALLOW_WRITE = *\nALLOW_READ = *\nALLOW_ADMINISTRATOR = *\nALLOW_NEGOTIATOR = *\nALLOW_NEGOTIATOR_SCHEDD = *\nALLOW_WRITE_COLLECTOR = *\nALLOW_WRITE_STARTD = *\nALLOW_READ_COLLECTOR = *\nALLOW_READ_STARTD = *\nALLOW_READ_COLLECRTOR = *\nALLOW_DAEMON = *\nALLOW_OWNER = *\nALLOW_CLIENT = *\nQUEUE_SUPER_USERS = root,condor\n启动\nsystemctl start condor\n# t通常有以下所有服务则表示启动成功\n[root@ln25%TH3 condor-8.8.9]# ps -ef |grep condor_\ncondor     63257       1  0 Aug11 ?        00:00:02 /usr/sbin/condor_master -f\nroot",
        "##  This setting puts the DedicatedScheduler attribute, defined above,\n##  into your machine's classad.  This way, the dedicated scheduler\n##  (and you) can identify which machines are configured as dedicated\n##  resources.\n##  Note: as of 8.4.1 this setting is automatic\n#STARTD_EXPRS = $(STARTD_EXPRS), DedicatedScheduler\n2. 重启condor\n3. 编写对应提交脚本\n[root@ln25%TH3 tmp]# cat sleep.sh\n#!/bin/bash\necho \"sleep 300 seconds\"\n/usr/bin/sleep 300\n[root@ln25%TH3 tmp]# cat sleep.sh\n#!/bin/bash\necho \"sleep 300 seconds\"\n/usr/bin/sleep 300\n[root@ln25%TH3 tmp]# cat parallel.sub\nuniverse = parallel\nexecutable = /bin/sleep\narguments = 30\nmachine_count = 4\nlog = abcd.log\nwhen_to_transfer_output = ON_EXIT\nqueue\n# 以相同方式提交作业即可"
    ]
}