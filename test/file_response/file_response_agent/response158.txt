{
    "query": "如何在HPC4公共目录下部署ParaFold 2.0？",
    "summaries": [
        "本文介绍了在HPC4公共目录下部署ParaFold 2.0的过程。包括从GitHub克隆代码、创建conda环境、安装依赖包、配置多序列比对工具，以及使用CPU和GPU进行序列预测的脚本。用户需注意参数设置，如使用-f进行特征生成，-P进行结构预测，并根据系统调整线程数。",
        "ParaFold 2.0 是上海交大开发的 AlphaFold 集群版本，支持 CPU 和 GPU 分离计算，提升运算效率。安装过程中需注意 Python 版本为 3.8，避免使用更高版本。安装依赖包时，需手动安装 cudatoolkit=11.3 和匹配的 cudnn，避免因版本不兼容导致报错。测试中分为 CPU 特征生成和 GPU 结构预测两阶段，分别使用 -f 和 -P 参数。GPU 计算需确保环境变量正确设置，并合理分配资源。整体流程稳定，但部分参数和配置需根据实际系统调整。",
        "本文介绍了在HPC4系统上成功安装并测试ColabFold 1.5.2的过程。主要解决了Python包依赖、模型参数与蛋白质数据库下载及作业提交等问题。通过创建虚拟环境、手动安装依赖包、配置CUDA和TensorFlow等步骤，最终完成本地化部署。安装过程中需注意版本兼容性，避免因依赖冲突导致运行错误。"
    ],
    "contents": [
        "$HOME/test1/output \\\n-p monomer_ptm \\\n-i $HOME/test1/rcsb_pdb_6ZXQ.fasta \\\n-c reduced_dbs \\\n-t 1800-01-01 \\\n-m model_1 \\\n-f\n注：-f 参数必须使用，意味着仅运行特征产生代码，输出feature.pkl文件和MSAs，并不进行结构预测。\n# submit job\nybatch -N1 -n8 -pdebug run1_cpu_part.sh\n注：-n设置为8是因为hmmer和hh-suite为多线程程序，./Parafold/alphafold/data/tools/jackhmmer.py存在设定的n_cpu=8  ./Parafold/alphafold/data/tools/jackhmmer.py存在设定的n_cpu=4，据上海交大测试反馈jackhmmer n_cpu参数为8比较合适，更多的核数不会提升计算速度，此处忽略hh-suite n_cpu 整个用-n8代替。（暂时未在HPC系统对hmmer和hh-suite进行调整n_cpu大小对计算速度影响的亲测验证，用户感兴趣可以测试！！！）\nGPU计算预测结构\n# vim run2_gpu_part.sh\n#!/bin/bash\nexport LD_LIBRARY_PATH=$HOME/software/miniconda3/envs/parafold2_AF2.3.1_py38/lib\nexport DOWNLOAD_DIR=/fs1/software/alphafold/data\nwhich python\nyhrun -N1 -pgpu1 -G1 cpus-per-gpu=1 $HOME/software/ParallelFold/run_alphafold.sh \\\n-d $DOWNLOAD_DIR \\\n-o $HOME/test1/output \\\n-p monomer_ptm \\\n-i $HOME/test1/rcsb_pdb_6ZXQ.fasta \\\n-c reduced_dbs \\\n-t 1800-01-01 \\\n-m model_1 \\\n-P\n注：-P 参数必须使用，意味着直接使用CPU计算步骤产生的MSAs。\n# submit job\nybatch -N1 -pgpu1 -G1 cpus-per-gpu=1 run2_gpu_part.sh\n4. GPU",
        "【已解决】hpc4公共目录下部署Parafold2.0\n**标签**: 无标签\n**创建时间**: 2024-01-18 14:28:22\n**更新时间**: 2024-01-19 15:22:12\n**作者**: 杜思慧\n**1.官方网站**\nParaFold GitHub：https://github.com/Zuricho/ParallelFold\n介绍网站：https://parafold.sjtu.edu.cn\n**2.安装过程**\ngit clone https://github.com/Zuricho/ParallelFold.git\nconda create prefix=/fs1/software/parallelfold/parafold python=3.8\nconda activate /fs1/software/parallelfold/parafold\npip install py3dmol -i https://pypi.tuna.tsinghua.edu.cn/simple\nconda install -c conda-forge openmm=7.7 pdbfixer\ncd ParallelFold\npip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple\n# downgrade jaxlib to the correct version, matches with cuda and cudnn version\npip3 install upgrade no-cache-dir jax0.3.25 jaxlib0.3.25+cuda11.cudnn82 -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html -i https://pypi.tuna.tsinghua.edu.cn/simple\n# install packages for multiple sequence alignment\nconda install -c bioconda hmmer=3.3.2 hhsuite=3.3.0 kalign2=2.04\nchmod +x run_alphafold.sh\n**3.序列预测测试**\n想要了解更多使用信息，请参考https://github.com/Zuricho/ParallelFold/blob/main/docs/usage.md\nrcsb_pdb_6ZXQ.fasta\n>6ZXQ_1|Chain A|Adenylosuccinate synthetase|Helicobacter pylori 26695 (85962)\nCEEISAFEDLENRLFVSDRAHVILPYHAKKDAFKEKSQNIGTTKKGIGPCYEDKMARSGIRMGDLLDDKILEEKLNAHFKAIEPFKKAYDLGENYEKDLM\nCPU计算产生特征\n#!/bin/bash\n#SBATCH -N 1\n#SBATCH -n 8\n#SBATCH -p cp1\nexport",
        "|Helicobacter pylori 26695 (85962)\nCEEISAFEDLENRLFVSDRAHVILPYHAKKDAFKEKSQNIGTTKKGIGPCYEDKMARSGIRMGDLLDDKILEEKLNAHFKAIEPFKKAYDLGENYEKDLM\nCPU计算产生特征\n#!/bin/bash\n#SBATCH -N 1\n#SBATCH -n 8\n#SBATCH -p cp1\nexport DOWNLOAD_DIR=/fs1/software/alphafold/data\nwhich python\nyhrun /fs1/software/parallelfold/ParallelFold/run_alphafold.sh \\\n-d $DOWNLOAD_DIR \\\n-o /fs1/home/dush2/parallelfold \\\n-p monomer_ptm \\\n-i /fs1/home/dush2/parallelfold/rcsb_pdb_6ZXQ.fasta \\\n-c reduced_dbs \\\n-t 1800-01-01 \\\n-m model_1 \\\n-f\n注：-f 参数必须使用，意味着仅运行特征产生代码，输出feature.pkl文件和MSAs，并不进行结构预测。\n# submit job\nybatch run1_cpu_part.sh\n注：-n设置为8是因为hmmer和hh-suite为多线程程序，./Parafold/alphafold/data/tools/jackhmmer.py存在设定的n_cpu=8  ./Parafold/alphafold/data/tools/jackhmmer.py存在设定的n_cpu=4，据上海交大测试反馈jackhmmer n_cpu参数为8比较合适，更多的核数不会提升计算速度，此处忽略hh-suite n_cpu 整个用-n8代替。（暂时未在HPC系统对hmmer和hh-suite进行调整n_cpu大小对计算速度影响的亲测验证，用户感兴趣可以测试！！！）\nGPU计算预测结构\n#!/bin/bash\n#SBATCH -N 1\n#SBATCH -p v100\n#SBATCH cpus-per-gpu=1\n#SBATCH gpus-per-node=1\nexport LD_LIBRARY_PATH=/fs1/software/parallelfold/parafold/lib\nexport DOWNLOAD_DIR=/fs1/software/alphafold/data\nwhich python\nyhrun /fs1/software/parallelfold/ParallelFold/run_alphafold.sh \\\n-d $DOWNLOAD_DIR \\\n-o /fs1/home/dush2/parallelfold  \\\n-p monomer_ptm \\\n-i /",
        "tuna.tsinghua.edu.cn/simple\npip install poetry_core=1.7.0 -i https://pypi.tuna.tsinghua.edu.cn/simple\npip install scipy pandas -i https://pypi.tuna.tsinghua.edu.cn/simple\n......\n# 安装分子软件包\nconda install -c conda-forge cudatoolkit=11.8.0 cudnn openmm=7.7.0 pdbfixer\n# 安装Jaxlib\npip install jax0.3.25 -i https://pypi.tuna.tsinghua.edu.cn/simple\npip install https://storage.googleapis.com/jax-releases/cuda11/jaxlib-0.3.25+cuda11.cudnn82-cp10-cp10-manylinux2014_x86_64.whl\n# 安装最新版本的colabfold_v1.5.2\npip install no-warn-conflicts \"colabfold[alphafold-minus-jax] @ git+https://github.com/sokrypton/ColabFold\" (注：会自动安装tensorflow，极可能自动安装的tensorflow与cudatoolkit-11.8.0版本不一致，导致程序运行错误。因此，需完全卸载tensorflow相关的包，重新安装cudatoolkit-11.8.0对应的tensorflow-2.12.0）\n# 安装tensorflow\npip install tensorflow2.12.0 -i https://pypi.tuna.tsinghua.edu.cn/simple\n# 安装cuda\nconda install -c nvidia cuda-nvcc=11.8\n3.查看所有安装的包\nconda list\n# packages in environment at /fs1/home/tj_biocreatech/software/miniconda/envs/colabfold1.5.2_py38:\n#\n# Name                    Version                   Build  Channel\n_libgcc_mutex             0.1                 conda_forge    https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge\n_openmp_mutex",
        "parallelfold/ParallelFold/run_alphafold.sh \\\n-d $DOWNLOAD_DIR \\\n-o /fs1/home/dush2/parallelfold  \\\n-p monomer_ptm \\\n-i /fs1/home/dush2/parallelfold/rcsb_pdb_6ZXQ.fasta \\\n-c reduced_dbs \\\n-t 1800-01-01 \\\n-m model_1 \\\n-P\n注：-P 参数必须使用，意味着直接使用CPU计算步骤产生的MSAs。\n# submit job\nybatch run2_gpu_part.sh\n**4.参考**\nhttp://172.31.2.213/#/article/article_detail/659",
        "install -c conda-forge openmm=7.7 pdbfixer  ### 此步骤自动安装cudatoolkit-11.7.0，用这个版本会报错！！！\nconda install cudatoolkit=11.3 cudnn ### 重新安装cudatoolkit=11.3和匹配的cudnn\n# downgrade jaxlib to the correct version, matches with cuda and cudnn version\npip3 install upgrade no-cache-dir jax0.3.25 jaxlib0.3.25+cuda11.cudnn82 -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html\n# install packages for multiple sequence alignment\nconda install -c bioconda hmmer=3.3.2 hhsuite=3.3.0 kalign2=2.04\n# install other packages (不推荐requirements安装)\npip install tensorflow-gpu2.10.0 -i https://pypi.tuna.tsinghua.edu.cn/simple\npip install absl-py1.0.0\npip install biopython1.79\npip install chex0.0.7\npip install dm-haiku0.0.9\npip install dm-tree0.1.8\npip install immutabledict2.0.0\npip install ml_collections0.1.0\npip install pandas\npip install sonnet\npip install tqdm\n3. 序列预测测试\n想要了解更多使用信息，请参考https://github.com/Zuricho/ParallelFold/blob/main/docs/usage.md\nrcsb_pdb_6ZXQ.fasta\n>6ZXQ_1|Chain A|Adenylosuccinate synthetase|Helicobacter pylori 26695 (85962)\nCEEISAFEDLENRLFVSDRAHVILPYHAKKDAFKEKSQNIGTTKKGIGPCYEDKMARSGIRMGDLLDDKILEEKLNAHFKAIEPFKKAYDLGENYEKDLM\nCPU计算产生特征\n# vim run1_cpu_part.sh\n#!/bin/bash\nexport DOWNLOAD_DIR=/fs1/software/alphafold/data\nwhich python\nyhrun -N1 -n8 -pdebug $HOME/software/ParallelFold/run_alphafold.sh \\\n-d $DOWNLOAD_DIR \\\n-o $HOME/test1/output \\\n-p monomer_ptm \\\n-i $HOME/test1/rcsb_pdb_6ZXQ.fasta \\\n-c reduced_dbs \\\n-t 1800-",
        "【已解决】HPC4系统安装colabfold1.5.2并测试\n**标签**: colabfold、mmseqs、vmtouch\n**创建时间**: 2023-10-24 16:02:05\n**更新时间**: 2023-10-24 16:26:46\n**作者**: 杜佳伟\n**问题**：解决colabfold安装python包依赖问题、模型参数与蛋白质数据库下载和作业提交问题\n1. 基本情况\n2022年5月30日，来自韩国首尔国立大学生物科学学院的Martin Steinegger和哈佛大学FAS科学部的Sergey Ovchinnikov等人在Nat Methods杂志发表文章，介绍了一个快速和易于使用的蛋白质结构预测工具ColabFold。\nColabFold通过将MMseqs2的快速同源搜索与AlphaFold2或RoseTTAFold相结合，提供了蛋白质结构和复合物的加速预测。ColabFold的搜索速度提高了40-60倍，并且优化了模型的利用，在一台有图形处理单元的服务器上每天可以预测近1000个结构。与Google Colaboratory相结合，ColabFold成为一个免费的、可获得的蛋白质折叠平台。\nColabfold GitHub：https://github.com/sokrypton/ColabFold\nlocalcolabfold GitHub：https://github.com/YoshitakaMo/localcolabfold\n以下流程将实现Colabfold本地化。\n2. 安装过程\n# 创建并激活虚拟环境\nconda create -n colabfold1.5.2_py38 python=3.8\nconda activate colabfold1.5.2_py38\n# 手动安装所有依赖包（不推荐直接install_colabbatch_linux.sh安装！！！）\n# 安装多序列比对包\nconda install -c bioconda kalign2=2.04 hhsuite=3.3.0 mmseqs2=14.7e284\n# 其他依赖包安装\npip install biopython1.79 -i https://pypi.tuna.tsinghua.edu.cn/simple\npip install dm-tree0.1.8 -i https://pypi.tuna.tsinghua.edu.cn/simple\npip install ml_collections0.1.1 -i https://pypi.tuna.tsinghua.edu.cn/simple\npip install poetry_core=1.7.0 -i https://pypi.tuna.tsinghua.edu.cn/simple\npip install scipy pandas -",
        "conda_forge    https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge\n_openmp_mutex             4.5                  2_kmp_llvm    https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge\nabsl-py                   1.4.0                    pypi_0    pypi\nalphafold-colabfold       2.3.5                    pypi_0    pypi\nappdirs                   1.4.4                    pypi_0    pypi\naria2                     1.36.0               h43d1f13_4    https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge\nastunparse                1.6.3                    pypi_0    pypi\nbiopython                 1.79                     pypi_0    pypi\nblas                      1.0                    openblas\nbzip2                     1.0.8",
        "【已解决】Parafold2.0安装测试与报错问题解决\n**标签**: Parafold、alphaflod2\n**创建时间**: 2023-10-08 10:48:06\n**更新时间**: 2023-10-10 17:01:31\n**作者**: 杜佳伟\n1. 软件简介\nParaFold 为上海交大开发的适用于大规模计算的 AlphaFold 集群版，可选 CPU 与 GPU 分离计算，并支持 Amber 选择、module 选择、Recycling 次数指定等多个实用功能。ParaFold 并不改变 AlphaFold 计算内容和参数本身，所以在计算结果及精度上与 AlphaFold 完全一致。（注：暂时没能在HPC4 A100上亲测验证与官方 AlphaFold 在计算精度区别，建议用户亲测验证！！！）\nParaFold (又名 ParallelFold) 将原本全部运行于 GPU 的计算，分拆为 CPU 和 GPU 两阶段进行。先至 CPU 节点完成 MSA 计算，再用 GPU 节点完成模型预测。这样既能节省 GPU 资源，又能加快运算速度。但 ParaFold 仍然支持原本全运行于 GPU 计算。\nParaFold GitHub：https://github.com/Zuricho/ParallelFold\n介绍网站：https://parafold.sjtu.edu.cn\n2. 安装过程\n# clone this repo\ngit clone https://github.com/Zuricho/ParallelFold.git\nchmod +x ./Parafold/run_alphafold.sh\n# Create a miniconda environment for ParaFold/AlphaFold\n# Recommend you to use python 3.8, version < 3.7 have missing packages, python versions newer than 3.8 were not tested\nconda create -n parafold2_AF2.3.1_py38 python=3.8\nconda activate parafold2_AF2.3.1_py38\n# start install packages\npip install py3dmol\nconda install -c conda-forge openmm=7.7 pdbfixer  ### 此步骤自动安装cudatoolkit-11.7.0，用这个版本会报错！！！\nconda install cudatoolkit=11.3 cudnn ### 重新安装"
    ]
}