{
    "query": "如何处理drain的fn2节点，给出具体步骤？",
    "summaries": [
        "文本内容为关于计算节点状态的命令行输出和操作步骤。主要信息包括：多个节点被标记为drain状态，部分节点处于正常状态；通过命令查询特定原因导致的drain节点列表，并确认其中的正常节点；清除节点的dmesg信息；检查节点间的网络连通性。",
        "用户在使用Fortran时遇到问题，需将计算节点转换到登陆节点并提交作业。解决方法包括编辑comp_2d2脚本，编译源文件并提交作业；编辑sub.sh脚本，运行可执行文件；最后通过命令./comp_2d2提交作业。",
        "该文本描述了使用boltztrap2进行热传输计算的脚本。脚本提交到集群，使用2个节点和112个进程，加载boltztrap2模块，并执行两个步骤：首先对数据进行插值，然后在不同温度下进行积分计算，温度范围为300到800K。"
    ],
    "contents": [
        "17976,17996-17999, 18144-18147. 18153. 18188-18191 .18228. 18260. 18395. 18364.18967 1837218300 .18383, 183991]\n\nALLup infinite n17408-17419 17421-17444 17446-17467 17469-17475 17478-17483, 17485-17515 17517-17524 1752\n6-17531.17533-17539 \"1794121751.17573-17607.17616-17644.17646-17659.17661-17944.17946-17947.17949-17968.17970-17975.1797\n7-17995 . 18000-18143. 18148-18152. 18154-18187 .18192-18208.18211-18212 18214-18227 . 18229-18248. 18251-18252. 18256-18259. 18261-18264. 1826\n7-18268 , 18271-18288 , 18290-18292, 18294, 18296-18334 , 18336-18363, 18365-18366, 18368-18371 18373-18379. 18381-18382, 18384-18398 18400-1843\n11\n2）清除节点dmesg信息\nmn31目录：/home/test641/1903-networkmanager-1.0/loop_alltoall_\ntest，使用./zni_clean_dmesg_inband.sh，脚本后接节点列表。\nCroot@mn6 “]# cd /home/test641/1903.alltoall_test\nCroot@mn6 loop_alltoall_test]#cnL17408-17419 .17421-17444 17446-17467 .17469-17475 .17478-17483 17485-1751\n\n5.17517-17524 17526-17531 .1753:71.17573-17607 .17616-17644 . 17646-17659 17661-17944 .17946-17947 .17949-1796\n8,17970-17975 .17977-17995 , 18000-18143 . 18148-18152 . 18154-18187 . 18192-18227 . 18229-18259 , 18261-18334 , 18336-18363 . 18365-18366 . 18368-1837\n1,18373-18379 . 18381-18382 . 18384-18398 .18400-18431]\n\nCroot@mn6 loop_alltoall_test]#\n3）检查节点间的pping\nmn31目录：/home/test641/1903-networkmanager-1.0/loop_alltoall_test，使用./zni_check_pping_",
        "【已解决】TH-EX运行boltztrap2，进行热传输计算\n**标签**: 无标签\n**创建时间**: 2024-10-24 14:58:30\n**更新时间**: 2024-10-24 14:59:02\n**作者**: 李淑宁\n#!/bin/bash\n#SBATCH -N 2\n#SBATCH -n 112\n#SBATCH -p cp6\nmodule add boltztrap2/24.1.1-py3.10\n/fs2/software/boltztrap2/24.1.1-py3.10/envs/boltztrap2/bin/btp2 -v interpolate . -m 5 -o case.bt2\n/fs2/software/boltztrap2/24.1.1-py3.10/envs/boltztrap2/bin/btp2 integrate -b 2205 -t case.bt2  300,400,500,600,700,800",
        "【已解决】Fortran用户相关问题\n**标签**: 无标签\n**创建时间**: 2021-11-04 14:28:50\n**更新时间**: 2021-11-05 10:42:41\n**作者**: 李淑宁\n【广西大学秦智鹏副教授2021.10.30 星期六】（TH-1A用户Fortran相关问题）\nQ: 计算节点转换到登陆节点(用户提交作业命令  ./comp_2d2)\nA:\n**1.vi comp_2d2**\n#!/bin/bash\nmodule add GCC/7.5.0\ngfortran -O4 2D-axis-TwoPhase-GhostFluid-FS-half_open_period_Tem_Droplet_add_speed_clean_shrink_oil_film.f90 -fcray-pointer umf4_f77wrapper.o -lumfpack -lamd -lsuitesparseconfig -lm -lrt\nsbatch -N 1 -p IOR ./sub.sh\n**2.vi sub.sh**\n#!/bin/bash\nsrun -N 1 -p IOR ./a.out\n**3.提交作业命令**\n./comp_2d2",
        "cn[17920-18175]\n\nPARTITION AYAIL\n\nALLup\nALLup\n4-181751\n\nthep3up\nthep3up\n\n4-18175]\n\nTIMELIMIT\ninfinite\ninfinite\n\ninfinite\ninfinite\n\nNODES STATE\n\n13 drainx\n\n243 drain\n\n13 drainx\n243 drain\n\nNODELIST\ncnL17945 17948 .17969.17976 .17996-17999 18144-18147 .18153]\ncnL17920-17944 17946-17947 .17949-17968 . 17970-17975 .17977-17995 . 18000-18143, 18148-18152 .1815\n\ncnL17945 17948 .17969.17976 .17996-17999 18144-18147 .18153]\ncnL17920-17944 17946-17947 .17949-17968 . 17970-17975 .17977-17995 . 18000-18143, 18148-18152 .1815\n如果待筛查的节点被drain成了某个reason，如：Hold_on_0531，在管理节点先通过yhi –R | grep Hold_on_0531获取$drain_nodelist。\nCroot@mn6 “J# yhi -R | grep Hold_on_0531\nHold_on_0531root2022-05-31T10:18:11 cnl17408-18208 18211-18212, 18214-18248 18251-18252 , 18256-18264, 18267-18268 ,18271-\n18288 18290-18292 ,.18294 18296-18431]\n然后通过yhi –n $drain_nodelist –p ALL确认其中的正常开机节点列表$nodelist。\nCroot@mn6 “]# yhi -n cn[17408-18208.18211-18212.18214-18248 .18251-18252.18256-18264.18267-18268.18271-18288 .18290-18292.18294.18296-\n18431] -p ALL\n\nPARTITION ANALTIMELIMIT NODES STATE NODELIST\n\nALLinfinite48 drain® cnl17420,17445,17468,17476-17477 .17484,17516 1752517532 1754017556 .17572,17608-17615 1764\n5,17660,17945. 1794817969. 17976,17996-17999, 18144-18147. 18153. 18188-18191 .18228. 18260. 18395. 18364.18967 1837218300 .18383, 183991]\n\nALLup infinite n17408-17419 17421",
        "## cab 17\ncn[17408-18431]\n\nPARTITION AVAIL TIMELIMIT NODES STATE NODELIST\nALLup infinite48 drain® cnl17420,17445.17468 17476-17477 17484 17516 .17525 .17532,17540 17556 .17572..17608-17615 1764\n5,17660,17945. 1794817969. 17976,17996-17999, 18144-18147. 18153. 18188-18191 .18228. 18260. 18395. 18364. 1896718372. 18300 .18383, 183991\n\nALLup infinite [976 _drain|cnl17408-17419 17421-17444 ,17446-17467 .17469-17475 .17478-17483 .17485-17515 .17517-17524 .1752\n6-17531,17533-17539 17541-17955,71. .17573-17607 17616-17644 17646-17659, 17661-17944 17946-17947 17949-17968 17970-17975 1797\n7-17995 18000-18143 , 18148-18152, 18154-18187 18192-18227 18229-18259 18261-18334 , 18336-18363 18365-18366 18368-18371 .18373-18379 1838\n1-18382 18384-18398 18400-18431]\n\nthcp3up infinite48 drain® cn[17420.17445.17468.17476-17477.17484.17516.17525.17532.17540.17556.17572.17608-17615 .1764\n5.17660.17945.17948.17969.17976.17996-17999.18144-18147.18153 .18188-18191.18228.18260.18335.18364.18367.18372.18380.18383.183991\nthcp3up infinite976 drain cn[17408-17419.17421-17444.17446-17467.17469-17475 .17478-17483.17485-17515.17517-17524.1752\n\n6-17531.17533-17539.17541-17555.17557-17571.17573-17607.17616-17644.17646-17659.17661-17944.17946-17947.17949-17968.17970-17975 .1797\n7-17995 .18000-18143.18148-18152.18154-18187.18192-18227.18229-18259.18261-18334.18336-18363.18365-18366.1836838-18371.18373-18379.1838\n1-18382.18384-18398 .18400-18431]\n可用ccst [机框号]查看机框节点列表。\nCroot@m6 ~]# ccst 17c\n\ncn[17920-18175]\n\nPARTITION AYAIL\n\nALLup\nALLup\n4-181751\n\nthep3up\nthep3up\n\n4-18175]\n\nTIMELIMIT\ninfinite\ninfinite\n\ninfinite\ninfinite\n\nNODES STATE"
    ]
}