{
    "query": "如何解决 TomoDD 提升计算上限引起编译错误？",
    "summaries": [
        "TomoDD成像软件在tomoFDD.inc头文件中定义了处理量上限，当增大网格等参数时可能出现链接错误。该问题发生在使用eX系统默认GCC/8.5.0编译器时，错误信息为“relocation truncated to fit: R_X86_64_PC32 against symbol `contrl`”。解决方法包括在Makefile的Flag中添加`-mcmodel=medium`或`-mcmodel=large`，或升级至GCC/11.3.0。修改后的Makefile显示两种选项效果相似。",
        "在使用 GCC/4.9.3 编译 CDO 时遇到多个问题。编译 cdo-1.9.7.1 时，因 GCC 优化生成的汇编指令错误，需在 FLAGS 中添加 `-O2` 降低优化级别。编译 cdo-1.9.5 和 cdo-1.9.10 时，需在 LDFLAGS 中添加 `-lm`。此外，cdo-1.9.10 在 `make check` 时出现 `EOF.test` 错误，通过将 `-O2` 改为 `-O1` 解决。其他版本配置中涉及多个库路径和编译参数设置。",
        "编译过程中出现多个未定义引用错误，涉及OpenMP相关函数如`kmpc_end_serialized_parallel`等。经检查，`LDFLAGS`中缺少`-qopenmp`参数，导致链接失败。添加该参数后可解决此问题。此外，代码中`tools/data.h`文件第75行至81行的`comm_define`字段大小进行了修改，从`2*8192`调整为`4*8192`。"
    ],
    "contents": [
        "TomoDD 提升计算上限引起编译错误\n**标签**: tomodd\n**创建时间**: 2024-11-30 17:45:41\n**更新时间**: 2024-11-30 17:45:41\n**作者**: 项轶凡\n**问题**：TomoDD 成像软件在tomoFDD.inc 头文件内定义了一个处理量上限，将网格等参数调大后可能遇到链接错误。tomoDD-SE.f:(.text+0x90fe): relocation truncated to fit: R_X86_64_PC32 against symbol `contrl` defined in COMMON section tomoDD-SE.o。问题出现时，使用eX系统的默认GCC/8.5.0。\n调整`Makefile` ，在Flag 中添加`-mcmodel=medium`或`-mcmodel=large`；\n使用更新的GCC版本，这里使用了`GCC/11.3.0`\n这里贴上修改后的`Makefile`，上下两段使用不同的`-mcmodel`似乎并无影响\nCMD    = tomoDD-SE\nCC      = gcc\n#FC     = g77\n#FC     = gfortran\nFC      = gfortran\nSRCS    = $(CMD).f \\\naprod.f cluster1.f covar.f datum.f \\\ndelaz.f delaz2.f direct1.f dist.f exist.f \\\nfreeunit.f ifindi.f \\\nindexxi.f juliam.f  \\\nlsqr.f matmult1.f matmult2.f matmult3.f mdian1.f \\\nnormlz.f ran.f redist.f \\\nresstat_FDD.f scopy.f sdc2.f setorg.f \\\nsnrm2.f sort.f sorti.f sscal.f \\\nsvd.f tiddid.f trialsrc_FDD_shot.f trimlen.f \\\nvmodel.f RaySPDR2.f  \\\ngetinpSPDR.f getdata_SPDR.f \\\ndtres_FDD_lm5.f weighting_FDD.f",
        "-1.9.10 时，需要在 `LDFLAGS` 中添加 `-lm` 选项。\n4. 在使用 `GCC/4.9.3` 编译 cdo-1.9.10 时，在 `make check` 过程中出现 ` EOF.test 3 - eof3d - jacobi` 错误，重新生成 Makefile，将 `-O2` 改为 `-O1`，问题解决。",
        "trialsrc_FDD_shot.f trimlen.f \\\nvmodel.f RaySPDR2.f  \\\ngetinpSPDR.f getdata_SPDR.f \\\ndtres_FDD_lm5.f weighting_FDD.f lsfitHFDD_lsqr_lm5.f \\\nget_dims.f add_sta.f find_id2.f\nCSRCS   = atoangle_.c atoangle.c datetime_.c hypot_.c rpad_.c \\\nsscanf3_.c transform_r_gfortran.c\nOBJS    = $(SRCS:%.f=%.o) $(CSRCS:%.c=%.o)\nINCLDIR = ./include\nCFLAGS = -O3 -I$(INCLDIR) -m64 -mcmodel=medium\nLDFLAGS         = -O3 -m64 -mcmodel=large\nall: $(CMD)\n$(CMD): $(OBJS)\n$(FC) $(LDFLAGS) $(OBJS) $(LIBS) -o $@\n%.o: %.f\n$(FC) $(FFLAGS) -c $(@F:.o=.f) -o $@\nclean:",
        "：在使用 GCC/4.9.3 编译 cdo-1.9.7.1 时，报错：\n```shell\n/tmp/cctVI0XX.s: Assembler messages\n/tmp/cctVI0XX.s:56658: Error: conditonal branch out of range\n/tmp/cctVI0XX.s:56665: Error: conditonal branch out of range\n/tmp/cctVI0XX.s:56681: Error: prc-relative load offset out of range\n/tmp/cctVI0XX.s:56691: Error: prc-relative load offset out of range\n...\n```\n![image20211028092138skbsgz0.png](1)\n* 原因分析：这里经过 GCC 编译器优化生成的汇编指令，会出现错误。\n* 解决方案：在对应的编译 `FLAGS` 中，添加 `-O2` 选项，手动降低优化层次，可以解决这个问题。\n/tmp/cctVI0XX.s: Assembler messages\n/tmp/cctVI0XX.s:56658: Error: conditonal branch out of range\n/tmp/cctVI0XX.s:56665: Error: conditonal branch out of range\n/tmp/cctVI0XX.s:56681: Error: prc-relative load offset out of range\n/tmp/cctVI0XX.s:56691: Error: prc-relative load offset out of range\n...\n[图片不存在]\n* 原因分析：这里经过 GCC 编译器优化生成的汇编指令，会出现错误。\n* 解决方案：在对应的编译 `FLAGS` 中，添加 `-O2` 选项，手动降低优化层次，可以解决这个问题。\n* 解决方案：在对应的编译 `FLAGS` 中，添加 `-O2` 选项，手动降低优化层次，可以解决这个问题。\n3. 在使用 `GCC/4.9.3` 编译 cdo-1.9.5 和 cdo-1.9.10 时，需要在 `LDFLAGS` 中添加 `-lm` 选项。\n4. 在使用 `GCC/4.9.3` 编译 cdo-1.9.10 时，在",
        "wrf_io.f:(.text+0x44713): undefined reference to `kmpc_end_serialized_parallel'\nwrf_io.f:(.text+0x44724): undefined reference to `kmpc_ok_to_fork'\nwrf_io.f:(.text+0x44843): undefined reference to `kmpc_fork_call'\nwrf_io.f:(.text+0x44862): undefined reference to `kmpc_serialized_parallel'\nwrf_io.f:(.text+0x4497a): undefined reference to `kmpc_end_serialized_parallel'\nwrf_io.f:(.text+0x44cf6): undefined reference to `kmpc_ok_to_fork'\nwrf_io.f:(.text+0x44e12): undefined reference to `kmpc_fork_call'\nwrf_io.f:(.text+0x44e31): undefined reference to `kmpc_serialized_parallel'\nwrf_io.f:(.text+0x44f49): undefined reference to `kmpc_end_serialized_parallel'\nwrf_io.f:(.text+0x44f5a): undefined reference to `kmpc_ok_to_fork'\n经过查询，该函数为openmp中定义的，查看configure.wps发现LDFLAGS中并没有定义-qopenmp（在WRF中有定义），因此将其添加，即可编译通过。\n需修改代码\n75\n76\n77\n78\n79\n80\n81\n2 on\n75\n76\n78\n79\n80\n81\n+\ntools/data.h ()\n@@ -75,7 +75,7 @ typedef struct node_struct {\nchar pkg_4dscalars[NAMELEN_LONG] 5\n/* fields used by Comm (halo, period, xpose)\nchar comm_define[2*8192] ;\nchar comm_define[4*8192] ;\n/* marker */\nint mark 5\nnodes */",
        ".8-gcc9.3.0/include\" CXX=g++ CXXFLAGS=\"-I/thfs1/software/fftw/3.3.8-gcc9.3.0/include\" F77=gfortran FFLAGS=\"-I/thfs1/software/fftw/3.3.8-gcc9.3.0/include\" LDFLAGS=\"-ldl -lz\" ./configure prefix=/thfs1/software/cdo/1.9.10-gcc9.3.0 with-hdf5=/thfs1/home/fuhao/.local/hdf5/1.8.21-gcc9.3.0-ts with-netcdf=/thfs1/home/fuhao/.local/netcdf/4.6-gcc9.3.0-ts with-szlib=/thfs1/software/szip/2.1.1-gcc9.3.0 with-udunits2=/thfs1/software/udunits/2.2.24-gcc9.3.0 with-fftw3 2>&1 | tee c.log\n2. 在使用 `GCC/4.9.3` 编译 cdo-1.9.7.1 时，遇到如下报错\n* 问题描述：在使用 GCC/4.9.3 编译 cdo-1.9.7.1 时，报错：\n```shell\n/tmp/cctVI0XX.s: Assembler messages\n/tmp/cctVI0XX.s:56658: Error: conditonal branch out of range\n/tmp/cctVI0XX.s:56665: Error: conditonal branch out of range\n/tmp/cctVI0XX.s:56681: Error: prc-relative load offset out of range\n/tmp/cctVI0XX.s:56691: Error: prc-relative load offset out of range\n...\n```\n![image20211028092138skbsgz0.png](1)\n* 原因分析：这里经过 GCC 编译器优化生成的汇编指令，会出现错误。\n* 解决方案：在对应的编译 `FLAGS` 中，添加 `-O2` 选项，手动降低优化层次，可以解决这个问题。\n* 问题描述：在使用 GCC/4.9.3 编译 cdo-1.9.7.1 时，报错：\n```shell\n/tmp/cctVI0XX.s: Assembler messages\n/tmp/cctVI0XX.s:56658:"
    ]
}