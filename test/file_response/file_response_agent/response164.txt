{
    "query": "如何释放TH-eX被用户lisn预约的节点？",
    "summaries": [
        "在 TH-eX 系统下运行 FLOW-3D 软件的步骤如下：使用 `add_user` 命令为用户添加权限，拷贝提交脚本并修改参数，通过 `sbatch` 提交任务。无需在脚本中启动 lic，计算节点问题可通过安装 lsb 包或添加 `srun pty` 参数解决。",
        "本文档介绍了TH-eX系统中作业提交的几种方式。对于MPI+OpenMP并行作业，用户需编写提交脚本sub.sh，例如使用14个进程和8个OpenMP线程，需2个计算节点。交互式作业使用yhrun命令提交，注意输入输出重定向以避免任务中断。文档还提供了LAMMPS、GROMACS、NAMD和WRF等应用软件的提交示例。任务取消使用yhcancel命令，遇到问题可联系技术支持。",
        "本文档介绍了Lustre文件系统中NRS（Network Resource Scheduler）的TBF（Token Bucket Filter）规则配置、实时策略和延迟策略。TBF用于控制IO请求的速率，支持添加实时特性以确保高优先级请求的带宽分配。延迟策略通过模拟高负载来测试系统对时间敏感问题的处理能力，允许设置请求延迟的最小和最大时间范围。这些功能可通过lctl命令进行配置和调整。"
    ],
    "contents": [
        "相同速率限制的类获得的带宽要比预先均衡配置所获得得带宽要少。造成这种情况的原因是拥塞服务釉上的索重负载会导致某些类错过最后期限。在出列时，令牌的数量可能于 1。在最初的实现中，所有类都被平等对待，以罗松寺弃超额的令牌。随痢硬令牌补偿〈HTC) 策略的实施，我们使用 HTC 匹配的规则对类进行配置。个特性意味痢该类队列中的请求具有较高的实时性要求，必须尽可能满足市宽分配。错过最后期限时，该类保持最后期限不变，剩余的时间 〈剩余的流逝时间除以 1 将被补偿到下一轮。从而确保了下一个空闲 IO 线程始终选择此类来服务，直到所有累计的超额令牌处理完毕或该类队列中没有挂起的请求。命令:添加实时特性的新命令格式:lctl set param x.x.x.nrs tbf rule=\\\"start rule name arguments... realtime=1示例:$ lctl set_param ost.OSS.ost_io.nrs tbf rule\"start realjob jobid-{dd.0} rate=100 realtime=1在这个例子中，那些JopID 为 dd.0 的 RPC 将以 100 req/sec 的速率进行实时处理。(在Lustre 2.10 中引入)34.6.6. 延迟策略NRS 延迟策略旨在通过于扰 PtlRPC 层的请求处理时间来模拟高服务器负载，从而暴露与时间有关的问题。如果局用此策略，将在请求到达时计算应该开始处理请求的时间位移量，并人允许其在用户定义的范围内波动。然后使用cfs_binheap将请求按照分配的开始时间进行排序，并保存。一旦请求的开始时间已过，它将从 binheap 中移除以供处理。412\nLustre 文件系统操作手册 译者:这aX延迟策略可在所有类型的 PHURPC 服务上局用，有以下可用于调整其行为的可调参数:* {service}.nrs delay min{service}.nrs_delay_min 用于控制请求被此策略延迟的最短时间量 CLARA单位) 。默认值是 5 秒。读取此值运行:1 lcetl get Param {",
        "【已解决】如何在 TH-eX 系统下运行 FLOW-3D 软件\n**标签**: flow3d\n**创建时间**: 2024-07-03 14:36:34\n**更新时间**: 2024-07-04 17:14:04\n**作者**: 郑刚\n**问题**：如何在 TH-eX 系统下运行 FLOW-3D 软件\n如何在 TH-eX 系统下运行 FLOW-3D 软件\n0 脚本已更新\n> 联系了系统部，不用在脚本中启动lic了！\n#!/bin/bash\n#SBATCH -N 1 -p cp6\nexport MODULEPATH=$MODULEPATH:/fs2/home/cfbc34/463f9f/modulefiles\nmodule purge\nmodule load flow3d/11.2\nsrun unbuffered runhyd\n1 安装\n使用 cfbc34 账号为用户添加权限\n[cfbc34@th-ex-ln1 ~]$ add_user flow3d 用户的用户名 支持专员的用户名\n2 使用\n参考脚本就行了\n2 测试（废弃）\nmkdir test\ncd test\ncp /fs2/home/cfbc34/463f9f/flow3d/11.2/examples/boxcast/prepin.inp .\ncp /fs2/home/cfbc34/463f9f/scripts/sub-flow3d112.sh .\nsbatch sub-flow3d112.sh\n3 正式使用（废弃）\n1、拷贝提交脚本到用户算例目录\n[user@th-ex-ln1 ~]$ cp /fs2/home/cfbc34/463f9f/scripts/sub-flow3d112.sh .\n2、提交任务\n[user@th-ex-ln1 ~]$ sbatch sub-flow3d112.sh\n踩过的坑\n1、计算节点无法启动 lic： 安装 lsb 包\n2、计算节点运行失败：运行时添加 `srun pty` 参数",
        "delay min{service}.nrs_delay_min 用于控制请求被此策略延迟的最短时间量 CLARA单位) 。默认值是 5 秒。读取此值运行:1 lcetl get Param {service}.nrs delay min例如，在 ost io 服务上读取最小延迟设置 :1 $ lct]l get Param ost.OSS.ost_io.nrs delay min2 ost.OSS.ost_io.nrs delay min=reg delay min:53 hp delay min:5设置 RPC 处理的最小延玉 :1 lctl set param {service}.nrs delay min=0-65535RORY tis DLA ie (EIEAR RPC 设置给定服务的最小延迟时间。例如，要将 ost_io 服务的最小延迟时间设置为 10，请运行:1 $ Ictl set Param ost.OSS.ost_io.nrs delay mir=102 ost.OSS.ost_io.nrs delay min=-10对于文持高优先级RPC 的 PHURPC 服务，可为前规和高优先级RPC 设置不同的最小延迟时间 :1 ， Jctl set param {service}.nrs delay min=reg delay min|hp delay min:0-65535例如，在 ost_io 服务上将高优先级 RPC 的最小延迟时间设置为3:1 $ Ictl set Param ost.OSS.ost_io.nrs delay min=hp delay min:32 ost.OSS.ost_io.nrs delay min=hp delay min:3请注意，在任何情况下最小延玉时间都不能超过最大延玉时间。* {service}.nrs delay max{service} .nrs_delay_max 用于控制请求被此策略延迟的最长时间量〈以秒为单位) 。默认值是 300 秒。读取此值运行:1 lctl get param {service}.nrs delay max例如，在 ost io 服务上读取最大延迟设置 :413\nLustre 文件系统操作手册 译者:这ay1 $ lctl get param",
        ".ost_io.nrs tbf rule=\\\"start lozone_userl opcode={ost_read ost write} rate=200 rank=computes\"在这个例子中，规则\"iozone_userl\" 被添加至规则\"computes\" 之前，顺序如下 :$ lctl get_param ost.OSS.ost_io.nrs tbf ruleost.OSS.ost_io.nrs tbf rule=regular requests:CPT 0:userl jobid=-{iozone.500 dd.500} 100, ref 0iozone_userl opcode={ost_read ost write} 200, ref 0computes nid-{192.168.1.[2-128]@tcp} 500, ref 0default * 10000, ref 0CPT 1:userl jobid=-{iozone.500 dd.500} 100, ref 0iozone_userl opcode={ost_read ost write} 200, ref 0computes nid-{192.168.1.[2-128]@tcp} 500, ref 0default * 10000, ref 0high priority requests:CPT 0:userl jobid=-{iozone.500 dd.500} 100, ref 0iozone_userl opcode={ost_read ost write} 200, ref 0411\n1Oo192021222324—N—NLustre 文件系统操作手册 译者:这aycomputes nid-{192.168.1.[2-128]@tcp} 500, ref 0default * 10000, ref 0CPT 1:userl jobid=-{iozone.500 dd.500} 100, ref 0iozone_userl opcode={ost_read ost write} 200, ref 0computes nid-{192.168.1.[2-128]@tcp} 500, ref 0default * 10000, ref 0“拥塞下的TBF 实时策略在评估 TBF 期间，我们发现当所有类的 IO 市寓需求总和超过系统容量时，有具有相同速率限制的类获得的带宽要比预先均衡配置所获得得带宽要少。造成这种情况的原因是拥塞服务釉上的索重负载会导致某些类错过最后期限。在出列时，令牌的数量可能于 1。",
        "来计算，-ntomp 1 表示每个 mpi 进程局用一个 openmp 线程。> “用户根据自己的需求将相关的 gmx 处理命令写入 sub.sh 脚本即可。\n*REXESrr TH-eX 系统用户手册3.3.3.3 应用软件 NAMD 使用1) 在登陆节点命令行下加载 NAMD 所需环境变量:2) 编写任务脚本 sub.sh 如下:3.3.3.4 应用软件 WRF 使用看登陆节点命令行下加载 WRE 所需环境变量:1) 使用module help 命令可以得到 wrf 的相关信息2) 将wrf 文件夹下的run 目录拷贝到用户的目录下:3) 依据用户需求修改 namelist.input 及相关配置文件4) 编写任务脚本 sub.sh 如下:\n*e* TH-eX 系统用户手册3.4 任务取消 yhcancelyheancel 取消用户运行的任务，命令为 yncancel1 jobid. jobid 可通过先由 yhq 命令碍看。yheancel 命令强制取消任务后，slurm-jobid.out 文件中显示的信息如图 3-1所示:yhrun: Force Te job 12345678Slurmd[cnO]: *** STEP 12345678.0 CANCELLED AT 2021-11-01T12:00:00 *x**yhrun: cnQ: task 0-35:yhrun: : cni: task 36-31:yhrun: xxx: job done3-1 任务取消后显示信息34\nSBTeX ABE4 RASHHHA Pa es A B,J PASE 8 250 SE AS 77 YZ常见问题和解决方法，很难面面俱到，还请您能够谅解。如果您在系统使用过程中遇到任何问题，都可以及时与中心技术人员取得联系。中心技术人员会在收到用户问题反馈后的 24 小时工作时间内给予回复。1. 合同、资源申请使用、应用软件相关问题联系方式:邮箱: service@nscc-tj. cn电话: 022-653755612. 系统使用、作业运行相关问题联系方式:邮箱 : support@nscc-tj.cn (便件问题) / service@nscc-tj cn 〈软件问题)电话: 022-65375560重点提示: 为了",
        "不需要交互，则需使用批处理作业提交方式。3. yhrun 提交的任务，如果没有进行输入输出的重定向，在关闭登陆客户端软件时，会导致任务中断，因此如无特殊需要，在直接使用 yhrun 提交任务时，重定向输入输出，并保留相应的 log 文件，方便遇到问题时，技术人员及时解决。重定向举例如下:>为重定癌符号，2>人1 表示标准错误输出重定癌至标准输出，最后的信表示后台提区方式，这样保证了该任务在登陆客户端关闭时依然保持不中断。4. 再次提示，如无特殊需要请使用批处理作业 yhbatch 提交方式，yhbatch 提交的作业终端关闭后不会受到影响。3.3.3 应用软件作业提交举例3.3.3.1 应用软件 LAMMPS 使用1) 在登陆节点命令行下加载 LAMMPS 所需环境变量:31\n*[了te TH-eX 系统用户手册说明:从 lammps 的版本名称 lammps/24Mar22-icc19.0-mpich-x 可以看出:> 它的版本号是 24Mar22，即 2022-03-24 发布的版本。用户可以依据需求更换其他版本。> ‘EATER ana Intel 19.0.4 和 mpich-x ，相关的 module 环境已被 lammps 模块自动加载。2) 编写任务脚本 sub.sh 如下:> 第一行: 它是一个用/bin/sh 来解析的脚本文件。> FAT: -N 2 表示 2 个节点; -mn112 Ratt 112 cpu 核， Imp_ mpi 是可执行程序的名字;in.test 是输入文件名。kasatat于=pA>oy|pa+aywR3.3.3.2 应用软件 GROMACS 使用1) 在登陆节点命令行下加载 GROMACS 所需环境变量:2) 编写任务脚本 sub.sh 如下:说明:> ”第二行: 用 gmx mpi grompp 进行前期处理。> B=: 用 gmx mpi mdrun 来计算，-ntomp 1 表示每个 mpi 进程局用一个 openmp 线程。> “用户根据自己的需求将相关的 gmx 处理命令写入 sub.sh 脚本即可。\n*REXESrr",
        "方式，知用户可执行文件为aout，需使用 56 个OpenMP 多线程并行计算。编写提交脚本 sub.sh 如下:\n*REIZate TH-eX 系统用户手册提交批处理命令如下:3.3.1.3 MPI+OpenMP 并行作业如果用户的程序文持该并行方式，各用户可执行文件为aout，需使用 14 个进程并行计算，每个进程下开启 8 个 OpenMP 线程，则应使用的计算结点数为14*8/56=2. 2m Herc HAAS sub.sh 如下:加载环境变量，并提交批处理命令:注意: TH-EX 系统上的资源使用抢占式调度方式，即作业在结点上哪怕内运行了一个核的进程，其他作业也无法再分配到该结点上。特别提示:批处理作业提交模式，使用范围很广，由于手册篇幅限制，不能详述，如果您在提交批处理作业的过程中遇到了任何问题，请联系中心技术人员。3.3.2 交互式作业提交 yhrun对于交互式作业，资源分配与任务加载两步均通过 yhrun 命令进行: 当在登录 shell 中执行 yhrun 命令时，yhzrun 首先向系统提交作业请求并等待资源分配，然后在所分配的结点上加载作业任务。yhrun 运行的主要格式如下:yhrun [options] program\nNSz TH-eX 系统用户手册yhrun 包括多个选项，与 yhbatch 类似。示例:1) 在分区 ep4，使用两个结点上运行 hostname$ yhrun -N 2 -n 112 -p cp4 hostnameyhrun: job 4385 queued and waiting for resourcesyhrun: job 4385 has been allocated resourcescn4cn4cn5特别注意:1. yhrun 基本可以蔡代 mpirun，使用 1.3.2 章节推荐的系统自带的 mpi SES译的程序，完全可以使用 ynhrun 提交任务，而不需使用 mpirun.2. yhrun 为交互式作业提交方式，用户如需要和程序进行交互，则选择直接使用 yhrun 提交任务，如果不需要交互，则需使用批处理作业提交方式。3. yhrun 提交的任务，如果没有进行输入输出的重定向，在关闭登陆客户端软件时，会导致任务中断，因此如无特殊需要，在直接使用"
    ]
}