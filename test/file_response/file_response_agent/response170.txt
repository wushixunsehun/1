{
    "query": "如何在TH-eX上查询作业报错信息？",
    "summaries": [
        "TH-EX系统用户手册摘要：作业通过jobid标识，用户可查看详细信息。若作业长时间处于CG状态，表示未正常退出，系统管理员会定期处理；若变为$状态，表示系统维护中，完成后恢复。系统支持批处理作业提交（yhbatch）和交互式提交（yhrun），并提供多种参数选项，如指定进程数(-n)、节点数(-N)、分区(-p)等。批处理作业脚本需以#!开头，指定解释器，适合大多数作业提交。MPI并行作业示例中，用户需确保申请的资源不小于脚本中的需求。OpenMP作业只能在单节点运行，线程数不超过56。",
        "本文介绍了TensorBoard报错问题的解决方法。错误信息显示模块'distutils'没有属性'version'，原因是setuptools 59.6.0版本之后不再支持distutils.version。解决方法是将torch/utils/tensorboard/init.py文件的第4到11行注释掉。具体命令为：sed -i '4,11 s/^/#/' /path/to/conda/env/lib/python-<version>/site-packages/torch/utils/tensorboard/init.py。",
        "用户将代码中的临时目录路径从默认的 '/tmp' 修改为自定义路径 '/THL5/home/dujw_es/wuqi_test/get_feature/feature'，解决了报错问题。感谢司总提供的帮助意见。"
    ],
    "contents": [
        "明细其中jobid 表示作业的记号，用户根据目己作业的情况填入即可，之后用户即可以看到该作业十分详细的信息。注意: 用户作业如果长时间为 CG 状态，表示作业没有正常退出，系统管理员会定期扫描 CG 作业并处理，请用户耐心等待，用户作业如果变成 $ 状态，表示系统管理员在维护系统，维护完成后会将用户作业恢复，对用户作业不会造成影响。3. 3 提交作业目前 TH-EX 系统部署的资源管理系统包括多种作业提交方式，包括批处理作业提交方式 yhbatch 和交互作业提交方式 yhrun。作业终止方式为 yhcancel 命令，需要获取作业的 jobid，可以通过 yhq 命令查看获得。20\nSB“< TH-eX 系统用户手册本手册，为了简化和方便用户，只对相关命令做简单介绍，用户如需更多参数选择，则可以通过响应命令后加入--help 的方式，获取帮助信息，或查阅SLURM 相关资料。3.3.1 批处理作业 yhbatch注意:如果没有交互需求，请使用 yhbacth 提交任务。yhbatch 提交的作业终端关闭时不会受到影响，登陆结点 down 机时也不会受到影响，强烈推荐使用 yhbacth 提交任务。yhbatch向资源管理系统提交一个批处理脚本，yhbatch将在脚本成功提交到资源管理系统控制进程并分配作业JobID后立即退出。批处理脚本可能不会被立刻分配资源，而是在排队作业队列中等待，直到资源需求得到满足。当批处理脚本被分配资源后，资源管理系统将在所分配的第一个结点上运行批处理脚本。yhbacth 运行的主要格式如下:yhbatch [options] programyhbacth 包括多个选项，用户最党使用的选项如下:-n, --ntasks=ntasks指定要运行的进程数。请求 yhrun 分配/加载 ntasks 个进程。省缺的情况是每个 CPU 核运行一个进程，但是-c 参数将改变此省缺值。-N, --nodes=minnodes[-maxnodes]请求为此作业至少分配 minnodes 个结点。调度器可能决定在多于 minnodes个结点上启动作业。可以通过指定 maxnodes 限制最多分配的结点数〈如“--nodes=2-4” ) 。最少和最多结氮数可以相同以便指定确切的结氮数《〈如",
        "minnodes个结点上启动作业。可以通过指定 maxnodes 限制最多分配的结点数〈如“--nodes=2-4” ) 。最少和最多结氮数可以相同以便指定确切的结氮数《〈如“--nodes=2-2”将请求两个并且仅仅两个结点) 。如采没有指定-N，省缺的行为是分配足够的结氮以满足-2n 选项的要求。-p, --partition=partition从分区 partition 请求资源。如未指定，则省缺为默认分区。27\nter TH-eX 系统用户手册-t, --time=minutes设置作业的运行时间限制为 minutes 分钟。省缺值为分区的时间限制值。当到达时间限制时，作业的进程将被友送 SIGTERM 以及 SIGKILL 信号终止执行。完整格式为--time=days-hours:minutes:seconds，建议包机时用户使用该选项。-D, --chdir=path加载的作业进程在执行前将工作目录改变到 path 。省缺情况下作业 yhrun 进程的当前工作目录。-], --label在标准输出/标准错误的每行之前添加任务号。通党，远程任务的标准输出和标准错误通过行缓冲直接传递到 yhrun 的标准输出和标准错误。--label 选项将在每行输出前面添加远程任务的 ID。-J, --job-name=jobname指定作业的名字。省缺值是可执行程序的名字 program 。-W, --wait=seconds指定在第一个任务退出后，到终止所有剩余任务之前的等待时间。0 表示无限等待〈60 秒后将发出一个警告) 。省缺值可由系统配置文件中的参数设置。此选项用于确保作业在一个或多个任务提前退出时能够及时终止。-w, --nodelist=nodelist|filename请求指定列表中的结点。分配给作业的将至少包含这些结点。nodelist 可以是逗号分割的结点列表或范围表达式〈如 cn[1-$,7,12]) 。如果包含“/”字符，则nodelist 将会被当作是一个文件名，其中包含了所请求的结点列表。以上选项中，由以 -N -n, -p, -w, -x 等选项最常用，-",
        "utils.tmpdir_manager(**base_dir='/tmp'**) as query_tmp_dir:\n修改为自己设定的路径\nwith utils.tmpdir_manager(**base_dir='/THL5/home/dujw_es/wuqi_test/get_feature/feature'**) as query_tmp_dir:\n修改后不再报错\n感谢司总给出的帮助意见",
        "，则nodelist 将会被当作是一个文件名，其中包含了所请求的结点列表。以上选项中，由以 -N -n, -p, -w, -x 等选项最常用，-N 指定结点数，-a指定进程数，-p 指定分区名，-w 指定结氮列表，-X 指定不参加分配的结点列表〈用于排除自己认为有问题的结点) 。用户在 yhbatch 的参数中指定资源分配的需求约束，编写的作业脚本中，也可以使用 yhrun 命令加载计算作业，此时 yhrun 通过环境变量感知已经分配了资源，从而直接创建作业而不再次提交作业。批处理作业的脚本为一个文本文件，脚本第一行以'#!\"字符开头，并制定脚本文件的解释程序，如 sh，bash，frsh , csh 等。这种作业提交方式，适合提交绝大多数作业。如果需要连续执行多个任务的作28\n*REISwar. TH-eX 系统用户手册业，用户可以在脚本中提交多个任务，逐个计算。如前所述，系统中作业的运行分成两步:资源分配与任务加载。批处理作业使用 yhbatch 提交脚本的方式运行，yhbatch 负责资源分配，yhbatch 获取资源后，会在获取资源的第一个结点运行提交的脚本。3.3.1.1 MPI 并行作业举例一:假设用户可执行文件为 aout，需使用 112 个进程并行计算，编写提交脚本sub.sh 如下:使用批处理命令进行作业提交:计算过程中，脚本所在的工作目录中默认会生成以 slurm 开头的.out SCF, DF幕输出的信息会保存到该文件中。注意:yhbatch 申请的资源应当不小于 sub.sh 脚本中 yhrun 申请的资源。3.3.1.2 OpenMP 并行作业OpenMP 文持共享式内存并行，因此单纯的 OpenMP 多线程并行程序只能在单计算结点上运行。由于每个计算结点是 56 个处理器核心数，因此最大线程数设置不能超过 56.如果用户的程序文持该并行方式，知用户可执行文件为aout，需使用 56 个OpenMP 多线程并行计算。编写提交脚本 sub.sh 如下:\n*REIZate TH-eX 系统用户手册提交批处理命令如下:3.3.1.3 MPI+",
        "【已解决】tensorboard报错解决\n**标签**: tensorboard\n**创建时间**: 2024-04-02 17:21:26\n**更新时间**: 2024-04-02 17:22:03\n**作者**: 陈维耀\n报错如下：\nTraceback (most recent call last):\nFile \"/fs2/home/huangju/software/miniconda3/envs/deeph/bin/deeph-inference\", line 5, in <module>\nfrom deeph.scripts.inference import main\nFile \"/fs2/home/huangju/software/miniconda3/envs/deeph/1ib/python3.9/site-packages/deeph/ init.py\", line 6, in <module>\nfrom .kernel import DeepHKernel\nFile \"/fs2/home/huangju/software/miniconda3/envs/deeph/1ib/python3.9/site-packages/deeph/kernel.py\", Line 21, in <module>\nfrom torch.utils.tensorboard import SummaryWriter\nFile \"/fs2/home/huangju/software/miniconda3/envs/deeph/1ib/python3.9/site-packages/torch/utils/tensorboard/ init.py\", line 4, in <module>\nLooseVersion = distutils.version.LooseVersion\nAttributeError: module ‘'distutils' has no attribute 'version'\n这是因为`setuptools`版本`59.6.0`以后不再支持`distutils.version`。\n需要将`/path/to/conda/env/lib/python-<version>/site-packages/torch/utils/tensorboard/init.py`文件`4-11`行注释。\nsed -i '4,11 s/^/#/' /path/to/conda/env/lib/python-<version>/site-packages/torch/utils/tensorboard/init.py"
    ]
}