{
    "query": "登录节点的主要功能是什么？用户在登录节点上禁止执行哪些操作？请说明原因。",
    "summaries": [
        "登录节点故障包括失去连接/宕机和负载过高。对于宕机，可通过堡垒机或监控平台确认节点状态，并通过运维平台重启。对于负载过高，可按CPU或内存查看用户进程，清理高占用进程或用户全部进程以降低负载。",
        "管理节点和登录节点的密码规则如下：登录节点密码为 NUdt_cs_加上大写主机名，或 NUdt_cs_LNxx；管理节点登录密码为 nuDT_CS_加上小写主机名，或 nuDT_CS_mnxx。规则根据节点类型和主机名进行命名，确保密码结构统一且易于识别。",
        "文本主要描述了计算节点的配置参数和相关安全策略设置，包括资源限制、分区配置、用户权限控制、SSH登录限制、日志管理以及镜像生成和更新流程。其中还提到计算节点使用三种内核版本：ft2k、ft3k 和 mt3k。"
    ],
    "contents": [
        "ost127\nost127\n\n—\n\njobid\n\n1828258\n1818914\n1827402\n\nsftp-server.20654\n\nnode.20912\n1768786\nbash20461\nsftp-server.20528,\n1796896\n1825828\n\n读次数\n\njobid\n\n1818914\n1827772\n1827855\n1827875,\n1827858\n1827871\n1827872\n1827751\n1825099\n1827402\n\n1143\n7.89\n3.73\n245\n137\n4.19\nO71\n0.69\n\n03\n\n1237\n873\n615\n591\n5.33\n5.28\n4.01\n0.94\n\n06\n可以看到排序靠前的jobid。\n3.4 登陆节点故障\n3.4.1 登录节点失去连接/宕机\n监控平台报警如下：\nth-hpct-Ino\n\n失去连接\n\nTH-HPC\n\n登录节点\n\n硬件\n\n。严重\n①首先判断登录节点是否真的宕机，可以通过堡垒机ssh到登陆节点查看状态，也可以通过监控平台的节点操作里查看节点状态。\nTH-HPq\n其他操作 节点操作\n\n下ec 节点编号: th-hpc1-In0\n日 @ TH-HPC\n四 HPC1-127序号: 2523所属集群 TH-HPC硬盘大小: 无硬盘\n日 login节点名称: th-hpc1-In0所履分区: _null硬盘类型. 无硬盘\n\n@ th-hpct-Inoao\n\n:登录节点存储位置: 老机房-TH-HPC-HPC1-127-12.0\n②确认登录节点宕机后，可以通过运维平台直接重启，如下图：\n统一监控运维平台\n\nTH-HPC\n\nTH-HPC4PDTH-HPC\na fre] @\n剧本编排日 局 存储分区操作\n加THL5登陆节点部署客户端.， MDS节点部署客户.， 0ST节点部署客户.计算节点部署客户端.\n剧本执行四THL6\n局THL7el\n执行审计Otis查询传感器日志远程协助®\n© 资源操作\n局 用户操作\n© 作业操作\n© 服务操作\n号 数据拷贝\n号 应急操作\n2 批量操作\n®\n您确定要执行电源管理操作吗?\n3.4.2 负载过高\n（1）选择按CPU或内存查看导致系统负载过高的用户进程。\n统一监控运维平台= 运维管理axa @\n\n定制大屏机房运维总览剧本执行\n\nTH",
        "NO LLN=YES|NO MaxCPUsPerNode=uint32 MaxMemPerCPU=uint32 MaxMemPerNode=uint32 MaxTime=INFINITE|timestr MaxNodes=INFINITE|uint32 MinNodes=uint32 Nodes=nodelist PreemptMode=list Priority=uint16 RootOnly=YES|NO ReqResv=YES|NO SelectTypeParameters=string Shared=NO|EXCLUSIVE|YES|YES:uint32|FORCE|FORCE:uint32 State=UP|DOWN|INACTIVE|DRAIN\n############################################################\n# Partitions\nPartitionName=DEFAULT State=UP MaxTime=INFINITE\n5.1.10 相关安全策略设置\n$ cat /usr/local/sbin/tjcs_security.sh\n#!/bin/bash\n# 1.限制root登录\ncat >> /etc/security/access.conf << EOF\n+:root:12.32.2.0 12.32.2.2 12.32.2.4 12.32.2.6 12.32.2.32#允许mn0 mn1 mn2 mn3 root登录\n-:root:ALL#禁止ALL使用root\nEOF\n# 2.限制root ssh登录\ncat >> /etc/pam.d/sshd << EOF\naccountrequiredpam_access.so\nEOF\n# 不允许root ssh密码登录，只允许密钥登录\n# 3.不允许更改密码\ncat >> /etc/pam.d/common-password << EOF\npasswordsubstacksystem-auth\nEOF\n# 4.用户禁止使用su\ncat >> /etc/pam.d/su << EOF\nauthrequiredpam_wheel.so\nEOF\n# 5.proc限制\nmount -o remount,hidepid=2 proc\n# 6.无作业禁止用户ssh登录节点\n#cat >> /etc/pam.d/common-auth << EOF\ncat >> /etc/pam.d/sshd << EOF\naccountsufficientpam_listfile.so item=user sense=allow file=/etc/ssh/allowed_users onerr=fail\naccountrequiredpam_slurm_adopt.so\nEOF\necho root > /etc/ssh/allowed_users\n# 7. 禁止root使用密码登录,只能使用秘钥登录\ncat >>/etc/ssh/sshd_config <<",
        "管理节点登录节点密码规则\n登录节点密码规则\nNUdt_cs_${大写hostname}\nNUdt_cs_LNxx\n管理节点登录规则\nnuDT_CS_${对应小写hostname}\nnuDT_CS_mnxx",
        "吗?\n3.4.2 负载过高\n（1）选择按CPU或内存查看导致系统负载过高的用户进程。\n统一监控运维平台= 运维管理axa @\n\n定制大屏机房运维总览剧本执行\n\nTH-HPC\n其他操作\n\nth-hpct-IndQ\n\n5cq 节点编号: th-hpc1-Ind\n\n日| s TH-HPC\nFRE: 2523所属集群 TH-HPC\n\n剧本编排~加 HPC1-127\n日 login节点名称: th-hpc1-In0所属分区:_null\na节点类型: 登录节点存储位置: 老机房-TH-HPC-HPC1-\n127-12.0\n执行审计\n查询日志查询内存清除进程清除用户进程\nth-hpc1-In0:cpu进程排序 X\n\n天对执行\n命令输出:\n\nPLAY [a] ws本洒洒洒洒末末洒洒宁洒洒末末\n\nchanged: [121.16.3.1]\n\nSPU/内存的使用排序\n\nok: [121.16.3.1] =>\nesRBFES, EEZIDmt进程命令\nVSZ RSS TTYSTAT STARTTame [command™,]\nangyq 5735@.2 308900 148640 pts/101 Rt 09:04 10:28 ncl 16.ncl”,\nroot33364 12.6 0.0 124128 6408 ?S69:15 “6:63 /bin/sh /usr/local/bin/rkhunter -c -\ninxubo 21825 5.@ @.@ 125488 3844 pts/128 Ss+ 89:15 ”9:68 -bash\"，\n“wangyq 40400 4.9 0.2 308896 148628 pts/101 T 09:02 0:37 ncl 16.ncl\",\n\n\"nslcd2398 3.2 ©.0 442336 1432 ?Ssl 4月16 1429:26 /usr/sbin/nslcd\",\n\n\"root888 2.1 0.0 95640 38540 ?Ss 4月16 958:11 /usr/lib/systemd/systemd-journald\",\n\"linxubo 22342 2.0 @.@ 59000 2240 ?Ss 09:15 @:0@ /usr/libexec/openssh/",
        ":11 /usr/lib/systemd/systemd-journald\",\n\"linxubo 22342 2.0 @.@ 59000 2240 ?Ss 09:15 @:0@ /usr/libexec/openssh/sftp-server\",\n\"root2264 1.4 @.1 5182264 106456 ?SLsl 4月16 644:38 /opt/thsre/exporters/telegraf/telegr\n“root21684 1.0 0.0 159956 5688 ?Ss 9:15 0:0 sshd: linxubo [priv]\",\n\n\"linxubo 22501 1.0 6.9 119748 2028 ?Ss 69:15 @:0@ bash -c while true; do sleep 1;head\n图：按CPU使用率查看用户进程\n（2）清理用户的某个进程。通过第一步得到使用率高的进程ID。\n统一监控运维平台运维管理 、\n\nSAR 。 机房 运维总览\nTH-HPC\n其他操作 节点操作\nth-hpct-IndQ\non?\n日 @ THHPC\n剧本编排日 HPC1-127\nlogin\n剧本执行© th-hpct-Ind\n\n节点编号: th-hpc1-In0\n\n序号: 2523\n节点名称: th-hpc1-In0\n\n节点类型: 登录节点\n\n查询内存\n\n所属集群 TH-HPC\n\n所属分区:_null\n\n存储位置: 老机房-TH-HPC-HPC1-\n127-12.0\n\nvo 清除单个进程\n\n清除用户进程\n\n硬盘大小: 无硬盘\n\n节点状态: 连接成功 |\n\ncpu进程排序\n统一监控运维平台\n\n定制大屏me\n\n运维总览剧本执行\n\n其他操作 。 节点操作\n\nth-hpc1-In0\n\n日 @ THHPC\n©) HPC1-127\n\nlogin\n\n© th-hpct-Ind\n\n存储位置: 老机房-TH-HPC-HPC1-\n127-12.0\n\n查询日志\n\n查询内存SHE=a\nAIRS\n\n硬盘大小: 无硬盘\n硬盘类型; 无硬盘\n\n节点状态: sea\n\ncpu进程排序\n（3）清除用户全部进程。通过第一步得到使用率高的用户名",
        "so\nEOF\necho root > /etc/ssh/allowed_users\n# 7. 禁止root使用密码登录,只能使用秘钥登录\ncat >>/etc/ssh/sshd_config << EOF\nPubkeyAuthentication yes\nPasswordAuthentication no\nEOF\n# 8.journalctl日志配置\njournalctl --vacuum-size=500M\njournalctl --vacuum-time=1month\ncat > /etc/logrotate.d/rsyslog << EOF\n/var/log/syslog\n{\nrotate2\nweekly\ndateformat .%Y%m%d-%H\nmissingok\nnotifempty\ndelaycompress\ncompress\ncopytruncate\npostrotate\n/usr/lib/rsyslog/rsyslog-rotate\nendscript\n}\nEOF\n5.1.11 生成镜像\nroot@ln0:~# cd /home/sys/cn/\nroot@ln0:~# vim genram\n#!/bin/bash\n#now=`date +%F-%T`\nmsg_file=\"../.tmp_msg\"\nnow=`date +%F_%H%M`\ninitrd=cn-ram.img.new.$now\nft2k_image=uImage-ft2k.$now\nmt3k_image=uImage-mt.$now\nbak=cn-ram.img.bak.$now\necho \"backup ram.img to $bak\"\necho\n#cp ./cn-ram.img ./bak/$bak\ncd ./initram\necho \"$now\" > .ts\necho \"commit new version ...\"\necho\ngit add -A; git commit -a -m \"$initrd\"\ngit add -A; git status > $msg_file; echo \"$initrd\" >> $msg_file; git commit -a -F $msg_file\necho\necho \"generate new cn-ram.img to output/$initrd ...\"\nif [ -d ../initram_tmp ];then\nrm -rf ../initram_tmp/*\nelse\nmkdir ../initram_tmp\nfi\ntar cf - --",
        "if [ -d ../initram_tmp ];then\nrm -rf ../initram_tmp/*\nelse\nmkdir ../initram_tmp\nfi\ntar cf - --exclude=.git. |tar xhf - -C ../initram_tmp\nfor i in kernel \\\nflash \\\ndsp-mt \\\nlustre-2.14.0-cn \\\nlustre-force-rmmod \\\nzni-glex-3.26-cn \\\nknem \\\nopenpmix-3.2.3 \\\nslurm-20.11.7-cn-with-pmix-3.2.3 \\\nucx-mpich-ompi \\\nlam-yhpc \\\nnss-yhpc \\\nyhrms-yhpc \\\nsysconf\ndo\ncd ../$i\ntar cf - . |tar xhf - -C ../initram_tmp\ndone\ncd ../initram_tmp\necho \"$now\" > .ts\ntime find . -path ./repo -prune -o -path ./.git -prune -o -path ./var/lib/apt -prune -o -path ./var/cache/apt -prune -o -print | cpio -o -H newc | gzip> ../output/$initrd\ncd - > /dev/null 2>&1\ncd ../\nln -fs ./output/$initrd cn-ram.img\necho\necho \"cn-ram.img->`pwd`/output/$initrd ok ...\"\necho\n生成镜像\nroot@ln0:~# ./genram\nroot@ln0:~# scp -p cn-ram.img <pxe-server>:/tftpboot/\n至此，从0部署至计算节点镜像生成/更新完成。\n5.1.12 镜像更新\n5.1.12.1 镜像说明\n当前系统计算节点使用3种内核版本，分别为ft2k、ft3k、mt3k，其中各自内核源码以及相对应驱动源码目录如下\nft2k主目录/home/"
    ]
}