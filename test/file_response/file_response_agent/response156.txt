{
    "query": "如何排查ES系统 ssh 不上计算节点的原因，给出具体步骤。",
    "summaries": [
        "用户在使用ssh连接计算节点时出现错误：ssh: symbol lookup error: ssh: undefined symbol: EVP_KDF_ctrl, version OPENSSL_1_1_1b。原因是加载了Anaconda环境，修改了LD_LIBRARY_PATH，导致ssh动态链接了Anaconda中的库而非系统库。通过检查ldd输出发现，ssh依赖的libcrypto.so.1.1和其它库均来自Anaconda路径，而非系统/lib64目录。解决方法是避免在环境变量中引入Anaconda库，确保ssh使用系统标准库。",
        "TH-HPC集群在计算节点使用module时出现缺少libx11.so库的问题。原因是登录节点有该库，而计算节点没有。解决方法是将相关库文件（libX11.so.6、libXau.so.6、libxcb.so.1）拷贝到共享存储目录，并在加载脚本中添加环境变量LD_LIBRARY_PATH。分别修改bash和csh的初始化文件，确保计算节点能正确加载库路径。问题已解决。",
        "TH-HPC4系统配置ksh环境的问题已解决。用户通过`yum install ksh`安装ksh，并检查了系统支持的shell列表。在TH-HPC4中，需加载`module add loginnode`才能在计算节点使用ksh。若脚本中指定了ksh路径，建议改为`#!/usr/bin/env ksh`。系统部已安装ksh，现在可直接使用。"
    ],
    "contents": [
        "【已解决】TH-HPC4系统配置ksh环境\n**标签**: ksh,  hpc4\n**创建时间**: 2021-11-12 17:30:53\n**更新时间**: 2021-11-18 11:34:48\n**作者**: 郑刚\n**问题**：TH-HPC4系统配置ksh环境\n基础\nksh安装\nyum install ksh\n使用\n# 查看可用shell\ncat /etc/shells\n# th1a\n[zhenggang@ln2%tianhe ~]$  cat /etc/shells\n/bin/sh\n/bin/bash\n/sbin/nologin\n/bin/dash\n/bin/tcsh\n/bin/csh\n/bin/ksh\n[zhenggang@ln2%tianhe ~]$ yhrun -N 1 -n 1 -p debug cat /etc/shells\n/bin/sh\n/bin/bash\n/sbin/nologin\n/bin/tcsh\n/bin/csh\n/bin/mksh\n/bin/zsh\n/bin/ksh\n# hpc4\n[zhenggang4@th-hpc4-ln0 build]$ cat /etc/shells\n/bin/sh\n/bin/bash\n/usr/bin/sh\n/usr/bin/bash\n/bin/csh\n/bin/tcsh\n/usr/bin/csh\n/usr/bin/tcsh\n/usr/bin/tmux\n/bin/tmux\n[zhenggang4@th-hpc4-ln0 build]$ yhrun -N 1 -n 1 -p cp1 cat /etc/shells\n/bin/sh\n/bin/bash\n/usr/bin/sh\n/usr/bin/bash\n/bin/csh\n/bin/tcsh\n/usr/bin/csh\n/usr/bin/tcsh\n# 查看路径\nwhereis ksh\n# 使用grep命令\ngrep color ksh /etc/shells\n默认配置\n# 将ksh设置为系统默认shell\nchsh -s /bin/ksh 用户名\n# 验证当前用户正在使用的shell程序\necho $SHELL\nTH-HPC4 使用\n由于系统内核没有安装，故建议加载 `module add",
        "【已解决】TH-HPC集群 module 在计算节点使用缺少 libx11.so 库\n**标签**: module,  lib,  缺库\n**创建时间**: 2021-10-12 17:50:03\n**更新时间**: 2021-10-25 11:17:07\n**作者**: 郑刚\n**问题**：【已解决】TH-HPC集群 module 在计算节点使用缺少 libx11.so 库\n问题：TH-HPC集群 module 在计算节点使用缺少 libx11.so 库\n原因：登陆节点有库，计算节点没有\n解决：拷贝库到共享存储，并添加环境变量到加载脚本中\n创建：`/THL7/software/modules/3.2.10-gcc4.8.5/Modules/3.2.10/lib`\n拷贝：`libX11.so.6  libXau.so.6  libxcb.so.1`\n文件 `/THL7/software/modules/3.2.10/Modules/3.2.10/init/bash` 中 添加：\n1 if [ \"${LD_LIBRARY_PATH:-}\" = \"\" ]; then\n2     export LD_LIBRARY_PATH=/THL7/software/modules/3.2.10/Modules/3.2.10/lib\n3  else\n4     export LD_LIBRARY_PATH=/THL7/software/modules/3.2.10/Modules/3.2.10/lib:$LD_LIBRARY_PATH\n5 fi\n文件 `/THL7/software/modules/3.2.10/Modules/3.2.10/init/csh` 中 添加：\n1 if ($?LD_LIBRARY_PATH) then\n2     setenv LD_LIBRARY_PATH \"/THL7/software/modules/3.2.10-gcc4.8.5/Modules/3.2.10/lib:${LD_LIBRARY_PATH}\"\n3 else\n4     setenv LD_LIBRARY_PATH \"/THL7/software/modules/3.2.10-gcc4.8.5/Modules/3.2.10/lib\"\n5 endif",
        "chsh -s /bin/ksh 用户名\n# 验证当前用户正在使用的shell程序\necho $SHELL\nTH-HPC4 使用\n由于系统内核没有安装，故建议加载 `module add loginnode` ，就可以在计算节点使用，例如：\n$ yhrun -N 1 -n 1 -p cp1 which ksh\nyhrun: error: cn1588: task 0: Exited with exit code 1\n/usr/bin/which: no ksh in (/fs1/home/nscctj/.local/bin:/fs1/home/nscctj/bin:/fs1/software/modules/4.2.1-gcc8.4.1/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/usr/local/axel-2.17.10/bin:/usr/local/axel-2.17.10/bin:/fs1/home/nscctj/p4vasp/bin)\n$ module add loginnode\n$ yhrun -N 1 -n 1 -p cp1 which ksh\n/fs1/software/loginnode/ln0/usr/bin/ksh\n$\n如果是脚本中写死了路径，例如：\n#!/bin/kash\n#!/usr/bin/ksh\n可以改成\n#!/usr/bin/env ksh\n如果不好改或不能改，就只能等系统部升级计算节点内核的时候，把ksh安装进去，例如 TH-1A 系统，可以将来搞一下，就可以直接用了。\n2021-11-18\n系统部已经安装好了，可以直接用了！",
        "【已解决】ssh到计算节点报错：ssh: symbol lookup error: ssh: undefined symbol: EVP_KDF_ctrl, version OPENSSL_1_1_1b\n**标签**: ssh\n**创建时间**: 2021-11-10 17:03:13\n**更新时间**: 2021-11-10 17:39:46\n**作者**: 聂鹏飞\n用户ssh到计算节点时报错：\nssh: symbol lookup error: ssh: undefined symbol: EVP_KDF_ctrl, version OPENSSL_1_1_1b\n原因：加载系统上的anaconda环境时，修改了LD_LIBRARY_PATH，使ssh动态链接了anaconda下面的库，而没有用/lib64下面的\n(/fs1/home/zhaof3/software/cwatm-py) [zhaof3@th-hpc4-ln0 ~]$ ldd /usr/bin/ssh\nlinux-vdso.so.1 (0x00007ffd00efe000)\n/usr/local/lib/libth.so (0x000014b138750000)\nlibcrypto.so.1.1 => /fs1/software/python/3.8_anaconda_2021.05/lib/libcrypto.so.1.1 (0x000014b138484000) # 比如\nlibdl.so.2 => /lib64/libdl.so.2 (0x000014b138280000)\nlibutil.so.1 => /lib64/libutil.so.1 (0x000014b13807c000)\nlibz.so.1 => /fs1/software/python/3.8_anaconda_2021.05/lib/libz.so.1 (0x000014b138e17000) # 比如\nlibcrypt.so.1 => /lib64/libcrypt.so.1 (0x000014b137e53000)\nlibresolv.so.2 => /lib64/libresolv.so.2 (0x000014b137c3c000)\nlibselinux.so.1 => /lib64/libselinux.so.1 (0x000014b137a12000)\nlibgssapi_krb5.so.2 => /fs1/software/python/3.8_anaconda_2021.05/lib/libgssapi_krb5.so.2 (0x000014b138dc2000) # 比如\nlibkrb5.so.3 => /fs1/software/python/3.8_anaconda_2021.05/lib/libkrb5.so.3 (0x000014b138cef000) # 比如\nlibk5crypto.so.3 => /fs1/software/python/3.8_anaconda_2021.05/"
    ]
}