{
    "query": " HPC4系统的登陆节点和计算节点在功能上有何主要区别？用户在这些节点上分别被允许和禁止执行哪些操作？",
    "summaries": [
        "文本主要描述了计算节点的配置参数和相关安全策略设置，包括资源限制、分区配置、用户权限控制、SSH登录限制、日志管理以及镜像生成和更新流程。其中还提到计算节点使用三种内核版本：ft2k、ft3k 和 mt3k。",
        "HPC4 gpu分区支持单节点双卡和八卡配置，建议一个节点提交两个作业以避免资源浪费。未指定设备号时，可通过CUDA_VISIBLE_DEVICES设置GPU编号；程序中指定设备号时，无需额外设置。PyTorch和TensorFlow的设备指定方法可参考相关链接。",
        "TH-HPC系统常见问题包括作业断开、内存不足、动态库缺失、作业被自动退出等。解决方法包括剔除问题结点、同步时间、调整资源申请、设置环境变量、使用yhbatch提交作业等。作业处于PD状态是因调度策略，需耐心等待。作业状态“S”表示被挂起，“CG”和“comp”需管理员处理。计算慢可能与存储、网络、残留进程或节点错误有关。命令缺失可复制登录结点命令并设置环境变量。权限问题需检查队列和资源限制。$SLURM_NPROCS对应PBS的$PBS_NODELINE。MPI运行错误可能由网络或节点问题引起，需联系管理员。"
    ],
    "contents": [
        "【已解决】HPC4 gpu分区单节点提交两个作业\n**标签**: gpu\n**创建时间**: 2022-06-30 15:22:52\n**更新时间**: 2022-06-30 15:22:52\n**作者**: 杜思慧\n**1.背景**\n目前hpc4上的gpu分区配置为单节点双卡，gpu1分区为单节点八卡，可mix使用；\n在gpu分区为避免浪费，建议一个节点提交两个作业\n**2.脚本**\n未在程序中指定设备号时：\n#!/bin/bash\nmodule add pytorch/1.11.0-cu11.3-py3.9\nmodule add loginnode/ln0\nCUDA_VISIBLE_DEVICES=0 python 3d.py &\nCUDA_VISIBLE_DEVICES=1 python 3d-1.py &\nwait\n在程序中指定设备号时：\n#!/bin/bash\nmodule add pytorch/1.11.0-cu11.3-py3.9\nmodule add loginnode/ln0\npython 3d.py &\npython 3d-1.py &\nwait\n**3.备注**\n程序中指定设备号的方法：\nPytorch: https://www.cnblogs.com/darkknightzh/p/6836568.html\nTensorflow: https://blog.csdn.net/weixin_31866177/article/details/89403727",
        "的共享存储。用户提交可以加-x剔除问题结点，然后联系管理员进行解决。\nQ：作业断开，slurm日志中出现“yhrun: error: Task launch for 2440965.0 failed on node cn2892: Job credential expired”报错信息\nA：这是由于计算结点时间没有与管理结点同步。用户提交可以加-x剔除问题结点，然后联系管理员进行解决。\nQ：作业断开，slurm日志中出现“bus error”报错信息\nA：导致“bus error”的报错原因很多，具体问题需要使用工具排查。用户提交可以加-x剔除问题结点，然后联系管理员进行解决。\nQ：运行作业报错“forrtl: severe (41): insufficient virtual memory\"\nA：运行作业的内存不足，请尝试多使用结点，每个结点上少使用核数来提交运行。\nQ：运行作业提示“error while loading shared libraries: libXXX.so: cannot open shared object file: No such file or directory”\nA：需要用户将动态链接库的路径添加到自己运行的环境变量中，假设缺少x库，先“locate x”找到该链接库的地址$DIR，请确保$DIR为共享目录！然后编辑用户目录下的配置文件~/.bashrc，添加“export LD_LIBRARY_PATH=$DIR:$LD_LIBRARY_PATH”。\n在计算时找不到动态库是因为计算结点和登陆结点的软件环境有所不同。链接器在处理动态库时将链接时路径（Link-time path）和运行时路径（Run-time path）分开，-L只是指定了程序链接时库的路径，并不影响程序执行时库的路径；-Wl,-rpath指定程序运行时库的路径，该库的路径信息保存在可执行文件中，运行时它会直接到该路径查找库；也可使用LD_LIBRARY_PATH环境变量来指定动态库在运行时的搜索路径。\nQ：提交的作业总是被自动退出\nA：用yhrun提交任务不是非常稳定，比如终端关闭，脚本终止会导致任务被杀掉。建议用户使用yhbatch的提交方式，yhbatch提交的任务，终端关闭不会有任何影响，登陆节点down机也不会有影响。\nyhbatch的提交方法和",
        "NO LLN=YES|NO MaxCPUsPerNode=uint32 MaxMemPerCPU=uint32 MaxMemPerNode=uint32 MaxTime=INFINITE|timestr MaxNodes=INFINITE|uint32 MinNodes=uint32 Nodes=nodelist PreemptMode=list Priority=uint16 RootOnly=YES|NO ReqResv=YES|NO SelectTypeParameters=string Shared=NO|EXCLUSIVE|YES|YES:uint32|FORCE|FORCE:uint32 State=UP|DOWN|INACTIVE|DRAIN\n############################################################\n# Partitions\nPartitionName=DEFAULT State=UP MaxTime=INFINITE\n5.1.10 相关安全策略设置\n$ cat /usr/local/sbin/tjcs_security.sh\n#!/bin/bash\n# 1.限制root登录\ncat >> /etc/security/access.conf << EOF\n+:root:12.32.2.0 12.32.2.2 12.32.2.4 12.32.2.6 12.32.2.32#允许mn0 mn1 mn2 mn3 root登录\n-:root:ALL#禁止ALL使用root\nEOF\n# 2.限制root ssh登录\ncat >> /etc/pam.d/sshd << EOF\naccountrequiredpam_access.so\nEOF\n# 不允许root ssh密码登录，只允许密钥登录\n# 3.不允许更改密码\ncat >> /etc/pam.d/common-password << EOF\npasswordsubstacksystem-auth\nEOF\n# 4.用户禁止使用su\ncat >> /etc/pam.d/su << EOF\nauthrequiredpam_wheel.so\nEOF\n# 5.proc限制\nmount -o remount,hidepid=2 proc\n# 6.无作业禁止用户ssh登录节点\n#cat >> /etc/pam.d/common-auth << EOF\ncat >> /etc/pam.d/sshd << EOF\naccountsufficientpam_listfile.so item=user sense=allow file=/etc/ssh/allowed_users onerr=fail\naccountrequiredpam_slurm_adopt.so\nEOF\necho root > /etc/ssh/allowed_users\n# 7. 禁止root使用密码登录,只能使用秘钥登录\ncat >>/etc/ssh/sshd_config <<",
        "so\nEOF\necho root > /etc/ssh/allowed_users\n# 7. 禁止root使用密码登录,只能使用秘钥登录\ncat >>/etc/ssh/sshd_config << EOF\nPubkeyAuthentication yes\nPasswordAuthentication no\nEOF\n# 8.journalctl日志配置\njournalctl --vacuum-size=500M\njournalctl --vacuum-time=1month\ncat > /etc/logrotate.d/rsyslog << EOF\n/var/log/syslog\n{\nrotate2\nweekly\ndateformat .%Y%m%d-%H\nmissingok\nnotifempty\ndelaycompress\ncompress\ncopytruncate\npostrotate\n/usr/lib/rsyslog/rsyslog-rotate\nendscript\n}\nEOF\n5.1.11 生成镜像\nroot@ln0:~# cd /home/sys/cn/\nroot@ln0:~# vim genram\n#!/bin/bash\n#now=`date +%F-%T`\nmsg_file=\"../.tmp_msg\"\nnow=`date +%F_%H%M`\ninitrd=cn-ram.img.new.$now\nft2k_image=uImage-ft2k.$now\nmt3k_image=uImage-mt.$now\nbak=cn-ram.img.bak.$now\necho \"backup ram.img to $bak\"\necho\n#cp ./cn-ram.img ./bak/$bak\ncd ./initram\necho \"$now\" > .ts\necho \"commit new version ...\"\necho\ngit add -A; git commit -a -m \"$initrd\"\ngit add -A; git status > $msg_file; echo \"$initrd\" >> $msg_file; git commit -a -F $msg_file\necho\necho \"generate new cn-ram.img to output/$initrd ...\"\nif [ -d ../initram_tmp ];then\nrm -rf ../initram_tmp/*\nelse\nmkdir ../initram_tmp\nfi\ntar cf - --",
        "if [ -d ../initram_tmp ];then\nrm -rf ../initram_tmp/*\nelse\nmkdir ../initram_tmp\nfi\ntar cf - --exclude=.git. |tar xhf - -C ../initram_tmp\nfor i in kernel \\\nflash \\\ndsp-mt \\\nlustre-2.14.0-cn \\\nlustre-force-rmmod \\\nzni-glex-3.26-cn \\\nknem \\\nopenpmix-3.2.3 \\\nslurm-20.11.7-cn-with-pmix-3.2.3 \\\nucx-mpich-ompi \\\nlam-yhpc \\\nnss-yhpc \\\nyhrms-yhpc \\\nsysconf\ndo\ncd ../$i\ntar cf - . |tar xhf - -C ../initram_tmp\ndone\ncd ../initram_tmp\necho \"$now\" > .ts\ntime find . -path ./repo -prune -o -path ./.git -prune -o -path ./var/lib/apt -prune -o -path ./var/cache/apt -prune -o -print | cpio -o -H newc | gzip> ../output/$initrd\ncd - > /dev/null 2>&1\ncd ../\nln -fs ./output/$initrd cn-ram.img\necho\necho \"cn-ram.img->`pwd`/output/$initrd ok ...\"\necho\n生成镜像\nroot@ln0:~# ./genram\nroot@ln0:~# scp -p cn-ram.img <pxe-server>:/tftpboot/\n至此，从0部署至计算节点镜像生成/更新完成。\n5.1.12 镜像更新\n5.1.12.1 镜像说明\n当前系统计算节点使用3种内核版本，分别为ft2k、ft3k、mt3k，其中各自内核源码以及相对应驱动源码目录如下\nft2k主目录/home/",
        "系统存储和网络正常，然后检查用户作业是否有其他用户残留进程，有的话杀掉。最后检查节点是否有报clocksource错，有的话将节点drain掉，告知用户再提交时-x剔除问题节点。\nQ：在计算结点上运行程序，找不到某些命令，比如说提示 bc: Command not found\nA：复制登录结点上的bc命令到自己账户下，设置好该命令的环境变量后，重新运行就可以找到命令。\nQ：提交作业后，提示 “yhbatch: error: Batch job submission failed: User's group not permitted to use this partition”和“Batch job submission failed : Job violates accounting/QOS policy(job submit limit, user's size and/or timelimits”\nA：用户没有权限使用提交作业时-p参数后面指定的队列，请使用yhi命令检查您可以使用的队列。后者是因为提交作业所需要的资源使用权限超过了当前用户所拥有的资源使用权限。\nQ：PBS作业系统里查看运行的结点名称的变量 $PBS_NODELINE，在TH-HPC里对应哪一个变量\nA：$SLURM_NPROCS，它与PBS的$PBS_NODELINE是一样的功能。\nQ：使用天河software目录下的一个mpi实现编译程序，运行时slurm文件中提示报错：\nGLEX_ERR(cn1368): _Progress(172), err CQE:status=Dest_Key:opcode=RDMA_WRITE:signaled=1:rmt_nic_id=1370\nyhrun: Job step aborted: Waiting up to 2 seconds for job step to finish.\nFatal error in PMPI_Bcast: Other MPI error, error stack:\nMPIDI_CH3I_Progress(176): progress engine failure\nIn: PMI_Abort(1, Fatal error in PMPI_Bcast: Other MPI error, error stack:\nMPIDI_CH3I_Progress(176): progress engine failure)\nslurmd[cn1368]: *** STEP 2796179.0 KILLED AT 2015-10-12T11:27:12 WITH",
        "非常稳定，比如终端关闭，脚本终止会导致任务被杀掉。建议用户使用yhbatch的提交方式，yhbatch提交的任务，终端关闭不会有任何影响，登陆节点down机也不会有影响。\nyhbatch的提交方法和步骤如下：\n1）准备一个 bash 脚本（csh脚本也行），格式和run.sh类似，只是不需要再进行输出的重定向了。\n2）yhbatch提交那个脚本，提交方式为yhbatch -N XXX-n ZZZ-p YYY ./sub.sh 类似。\n假设用户可执行文件为part，则sub.sh脚本可以这样写：\n#! /bin/bash\nyhrun -n 36 -p TH_NET /vol-th/home/username/part\n则yhbatch提交任务如下：\nyhbatch -N 3 -p TH_NET ./sub.sh\n或者yhbatch -n 36 -p TH_NET ./sub.sh\n只要保证yhbatch申请的资源不小于yhrun需求的资源即可。\n另外，用户可以根据作业调度系统日志来判断退出原因，是否与以上问题类似。\n注意：存储ost掉链接、重启都有可能导致用户掉作业。\nQ：查看有可用结点，但作业却一直处于PD状态\nA：TH-HPC系统的资源管理器采用“先进先出”的作业调度方式，作业处于PD状态说明在用户前面有其他用户先提交了作业，并且之前的用户作业超出了目前的可用资源总数，请用户耐心等待。根据用户资源需求，系统管理人员也会定期进行资源调整，降低作业排队时间。\nQ：作业状态“S；CG；comp“分别是什么原因？\nA：“S”表示管理员将用户作业挂起以进行故障检测或故障处理，处理完后会将该作业恢复，不会对作业产生任何影响；“CG”是由于该作业没有正常推出导致，需管理员重启节点；“comp”是作业异常导致，需管理员关闭节点。\nQ：作业为什么计算慢？\nA：先确定系统存储和网络正常，然后检查用户作业是否有其他用户残留进程，有的话杀掉。最后检查节点是否有报clocksource错，有的话将节点drain掉，告知用户再提交时-x剔除问题节点。\nQ：在"
    ]
}