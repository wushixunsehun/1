{
    "query": "如何在GPU计算节点安装G6K-GPU-Tensor，给出具体步骤？",
    "summaries": [
        "该文本提供了在计算节点上安装和测试G6K-GPU-Tensor的步骤。首先通过清华镜像安装matplotlib和six，然后克隆G6K-GPU-Tensor和parallel-hashmap仓库，加载CUDA并编译程序。接着在计算节点上运行官方算例进行测试，输出包括挑战数据、计算结果及各阶段耗时等信息。",
        "本文介绍了在HPC4平台上安装SPECFEM3D-GPU的步骤。环境包括CUDA/11.8、MPI/openmpi/3.1.6-icc19.1和Intel_compiler/19.1.2。通过git克隆开发分支，进入目录后执行配置命令，并在Makefile中删除特定编译选项，最后进行编译。整个过程旨在为GPU加速的地震模拟提供支持。",
        "HPC4成功安装了GPU版本的AlTar。安装过程包括加载CUDA环境、安装Anaconda3、创建虚拟环境、安装依赖包、下载源码、编译安装Pyre和AlTar。最后通过\"altar about\"命令测试安装是否成功。整个过程需要使用特定的CUDA架构参数和环境变量配置。"
    ],
    "contents": [
        "【HPC4】安装SPECFEM3D-GPU\n**标签**: SPECFEM3D\n**创建时间**: 2024-08-21 15:59:11\n**更新时间**: 2024-08-21 15:59:11\n**作者**: 梁言\n##环境\n1) CUDA/11.8   2) MPI/openmpi/3.1.6-icc19.1   3) Intel_compiler/19.1.2(default)\ngit clone recursive branch devel https://github.com/SPECFEM/specfem3d.git\ncd specfem3d\n./configure FC=ifort CC=icc MPIFC=mpif90   with-mpi with-cuda\nMakefile 里删除\nGENCODE_30 = -gencode=arch=compute_30,code=\\\"sm_30,compute_30\\\"\nmake",
        "=\"70;80\" -DPython3_EXECUTABLE=$CONDA_PREFIX/bin/python3\nmake -j && make install\n**4.测试**\n(altar) [zhanggh@th-hpc4-tnl1 ~]$ altar about\narar: altar about\nDisplay information about this application\nusage:\naltar about [command]\nwhere [command] is\nname:\nhome:\nprefix:\nmodels:\nwhen:\netc:\nversion:\ncopyright:\ncredits:\nlicense:\nnfs:\npfs:\nvfs:\nhelp:\nloptions:\nthe\nthe\nthe\nthe\none of\nname of the app for configuration purposes\napplication home directory\napplication installation directory\ndirectory with the altar models\nprint the build timestamp\nthe\napplication configuration directory\nprint the version number\nprint the copyright note\nprint out the acknowledgments\nprint out the license and terms of use\ndump the application configuration namespace\ndump the application private filesystem\ndump the application virtual filesystem\nshow this help screen\nroot: specify the portion of the namespace to display [str]\ndry: show what would get done without actually doing anything [bool]\n(altar) [zhanggh@th-hpc4-1lnl1 ~]$ Jj",
        "tsinghua.edu.cn/simple\npip install matplotlib -i https://pypi.tuna.tsinghua.edu.cn/simple\npip install six -i https://pypi.tuna.tsinghua.edu.cn/simple\n3、下载G6K-GPU-Tensor\ngit clone recursive -b python3lwe https://github.com/WvanWoerden/G6K-GPU-Tensor.git\n4、下载 parallel-hashmap\ncd G6K-GPU-Tensor\ngit clone https://github.com/cr-marcstevens/parallel-hashmap.git\n5、编译程序\n# 加载 CUDA\nmodule add CUDA/11.2.2\n# 编译\npython setup.py build_ext -j6 inplace\n6、在计算节点上，对官方算例进行测试\npython ./svp_challenge.py 100 threads 4 gpus 2\n7、测试结果\n(py37_g6k) [gudwegnode3 G6K-GPU-Tensor]$ python ./svp_chattenge-py 100 一threads 4 —gpus 2\nLoaded challenge din 169\ngh = 6449154.089993, goal_ro/gh = 1.102500, r0/gh = 7.053307\n50: 150.1 ”3 T: 46.99463s, TT: 46.99470s,      5.98968          3.68300\n52: 1521 37: 1.41555s, TT: 48.41027s,      4.90491          3.68300\nSa: 1544 37: 1.58161s, TT: 49.99190s,      4.21433,          2200446\n56: 1561 37: 1.69071s, TT: 51.68262s,      3.65330          2.00446\n58: 1581 37: 1.76566s, TT: 53.44830s,      3.30835          200446\n60: 1601 37: 1.95676s, TT: 55.40508s,      2.90818",
        "【已解决】HPC4安装GPU版AlTar\n**标签**: 无标签\n**创建时间**: 2024-03-15 15:52:12\n**更新时间**: 2024-03-15 15:52:12\n**作者**: 杜思慧\n**1.安装指南**\nhttps://altar.readthedocs.io/en/cuda/cuda/Installation.html#install-pyre\n**2.加载环境**\nmodule add CUDA/11.3 proxy cmake\n**3.安装**\n#安装Anaconda3\nsh Anaconda3-2023.03-Linux-x86_64.sh -u\n#创建虚拟环境\nconda create -n altar\nconda activate altar\n#安装所依赖的包\nconda install hdf5 h5py openmpi gsl openblas postgresql numpy scipy\n#git下载源码\ngit clone https://github.com/lijun99/pyre.git\ngit clone https://github.com/lijun99/altar.git\nln -sf `python3 -c 'import site; print(site.getsitepackages()[0])'` $CONDA_PREFIX/packages\n#Compile and install pyre\ncd pyre\nmkdir build && cd build\ncmake .. -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DCMAKE_PREFIX_PATH=$CONDA_PREFIX -DCMAKE_CUDA_ARCHITECTURES=\"70;80\" -DBLA_VENDOR=OpenBLAS -DPython3_EXECUTABLE=$CONDA_PREFIX/bin/python3\nmake -j && make install\nexport PYTHONPATH=$PYTHONPATH:/fs1/home/zhanggh/software/Anaconda3/envs/altar/packages\n#Install AlTar\ncd altar\nmkdir build && cd build\ncmake .. -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DCMAKE_PREFIX_PATH=$CONDA_PREFIX -DCMAKE_CUDA_ARCHITECTURES=\"70;80\" -DPython3_EXECUTABLE=$CONDA_PREFIX/bin/python3\nmake -j && make install\n**4.测试**\n(altar) [zhanggh@th-hpc4"
    ]
}